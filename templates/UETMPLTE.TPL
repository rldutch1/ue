<?xml version="1.0"?>
<Templates encode="utf8escenc"><Template Name="mpt_Canned_Components" Description="Show canned components" Comments="0" Strings="0">select; into $outdev&#xD;&#xD;
	cname = cnvtupper (c.category_name )&#xD;&#xD;
	, c.br_datamart_category_id&#xD;&#xD;
	, c.category_name&#xD;&#xD;
	, c.category_mean&#xD;&#xD;
	, c.layout_flag&#xD;&#xD;
	, br.report_mean&#xD;&#xD;
	, br.report_name&#xD;&#xD;
	, br.report_seq&#xD;&#xD;
&#xD;&#xD;
from&#xD;&#xD;
	br_datamart_category   c&#xD;&#xD;
	, br_datamart_report   br&#xD;&#xD;
	, br_datamart_report_filter_r   bfr&#xD;&#xD;
	, br_datamart_filter   bf&#xD;&#xD;
&#xD;&#xD;
plan c where c.br_datamart_category_id &gt; 0&#xD;&#xD;
join  br&#xD;&#xD;
where br.br_datamart_category_id = c.br_datamart_category_id&#xD;&#xD;
join bfr&#xD;&#xD;
where bfr.br_datamart_report_id = br.br_datamart_report_id&#xD;&#xD;
join bf&#xD;&#xD;
where bf.br_datamart_filter_id = bfr.br_datamart_filter_id&#xD;&#xD;
 and bf.filter_category_mean ="mp_sect_params"&#xD;&#xD;
order by&#xD;&#xD;
	cname&#xD;&#xD;
	, bf.filter_seq</Template><Template Name="mpt_FindComponent" Description="" Comments="0" Strings="0">select  DISTINCT INTO "NL:"&#xD;&#xD;
	mPage_Name=bdc.category_name,&#xD;&#xD;
	mPage_Layout =&#xD;&#xD;
if (bdc.layout_flag = 0 )	"Summary"&#xD;&#xD;
elseif(bdc.layout_flag = 1)	"Workflow" endif,&#xD;&#xD;
	bdc.category_mean ,&#xD;&#xD;
	bdv.mpage_param_value,&#xD;&#xD;
	bdf.filter_mean ,&#xD;&#xD;
	bdf.filter_seq,&#xD;&#xD;
	bdc.layout_flag,&#xD;&#xD;
	;bdc.*&#xD;&#xD;
	;bdv.*&#xD;&#xD;
	bdf.*&#xD;&#xD;
from BR_DATAMART_CATEGORY BDC, br_datamart_value bdv,  br_datamart_filter bdf&#xD;&#xD;
where bdc.br_datamart_category_id = bdv.br_datamart_category_id&#xD;&#xD;
and bdv.mpage_param_value = "[+ComponentName+]"&#xD;&#xD;
and bdf.br_datamart_filter_id = bdv.br_datamart_filter_id&#xD;&#xD;
order by bdc.category_name, bdc.layout_flag</Template><Template Name="mpt_TempBedrock" Description="Bedrock mPage Template" Comments="0" Strings="0">;Program Author: [+Author+] ;Program Name: 1bh_mpage_[+NameSpace+].prg ;Creation Date: [DATE_TEXT] [TIME] ;Last Modified: ;Copyright (c)[DATE_USER]yyyy[DATE_USER_END] ;Purpose: ;Request #: ;Namespace: banner.[+NameSpace+] ;---------------------------------------------------------------------------- ;free record request go ;/*Add any fields and data type in your "record request" that your CCL will need to run.*/ ; ;record request ;( 	;1 encntr_id = i4 ;	1 per_id = i4 ;	1 enc_id = i4 ;	;1 cvalue = i4 ;) go ; ;/*Setting the request equal to the Encounter ID that will be sent from PowerChart. ;This information is manually entered here when testing. */ ; ;	set request-&gt;per_id = 123456789.00 go ;	set request-&gt;enc_id = 987654321.00 go ; ;/*The CCL that you want to execute to produce the data. */ ; ;	execute 1bh_mpage_[+NameSpace+] "MINE", request-&gt;per_id, request-&gt;enc_id go  ;----------------------------------------------------------------------------  drop program 1bh_mpage_[+NameSpace+]:dba go create program 1bh_mpage_[+NameSpace+]:dba  prompt 	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to. 	, "per_id" = 0 	, "enc_id" = 0  with OUTDEV, per_id, enc_id  %i cust_script:1samt_az_common.inc ;%i cust_script:1samt_az_common_cds.inc ;PROGRAM HEADER ABOVE  /*Begin Record Structure*/ ;Record structure elements can be lowercase here but must be uppercase in your .js. free record [+NameSpace+]_structure record [+NameSpace+]_structure ( 1 [+NameSpace+]_structure_cnt=i4 1 [+NameSpace+]_structure_array[*] /*Create record structure aliases and assign the proper data type that will match the columns in your query*/ 	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_mrn = vc ; 	2 returned_fin = vc ;   %i cclsource:status_block.inc ) /*End Record Structure*/  set [+NameSpace+]_structure-&gt;status_data.status ="F" set debug_ind = 1  declare fin_alias = vc declare mrn_alias = vc  select 	ea.alias  from 	encntr_alias ea  where ea.encntr_id = $enc_id;72958204.00;$enc_id; and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number detail case (ea.encntr_alias_type_cd) 	of 1077.00 : fin_alias = trim(ea.alias) 	of 1079.00 : mrn_alias = trim(ea.alias) endcase  /*Select Query Begin*/  select ;into "NL" 	p.person_id 	,p.name_full_formatted 	,e.encntr_id 	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)  from 	person p 	, encounter e  plan p where p.person_id = $per_id ;37298420.00 join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00  /*Select Query End*/  head report x=1 rec_cnt = 0 ; Setting record count to zero.  /*The "Head" section is most important part of what you are pulling from your query. Example: You could have "head p.person_id" and under that you need to return data from the query into it. */  head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column. rec_cnt=rec_cnt+1     if (size([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the [+NameSpace+]_structure_array array       stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt+10) ; this is increasing the size of the [+NameSpace+]_structure_array array by 10 if needed.    endif  /*Returning column data from the query into the record structure aliases*/ [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_mrn = mrn_alias [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_fin = fin_alias  foot p.person_id ;alias.fieldname | Closing the header. Same name as head. x=1 foot report x=1 stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_cnt = rec_cnt with nocounter  set [+NameSpace+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)  #exit_script   ;  ID for end of PRG  call ajax_reply([+NameSpace+]_structure) 	; info_point (ajax_reply is a function that changes the 							;record structure to a string.  call echo(cnvtrectojson([+NameSpace+]_structure)) 	; info_point (cnvtrectojson is a function that changes the 							;record structure to a JSON string and returns the string to the JS).  if (debug_ind) 	call echorecord([+NameSpace+]_structure)  ;info_point (displays record structure in listing - troubleshooting) else 	free record [+NameSpace+]_structure  ;info_point (clears record structure) endif  CALL log_end_script("1bh_mpage_[+NameSpace+]", debug_ind) ; info_point (For log files)  end go  /*JS NAMESPACE BELOW*/ //BEGIN [+NameSpace+] /** * Project: * Version: 1.0 * Released:	[DATE_TEXT] [TIME] * Updated: * Purpose: * @author: [+Author+] * Request#: */  MPage.namespace("banner"); banner.[+NameSpace+] = function(){}; banner.[+NameSpace+].prototype = new MPage.Component(); banner.[+NameSpace+].prototype.constructor = MPage.Component(); banner.[+NameSpace+].prototype.base = MPage.Component.prototype; banner.[+NameSpace+].prototype.name = "banner.[+NameSpace+]"; banner.[+NameSpace+].prototype.cclProgram = "1bh_mpage_[+NameSpace+]"; banner.[+NameSpace+].prototype.cclParams = []; banner.[+NameSpace+].prototype.cclDataType = "JSON";  banner.[+NameSpace+].prototype.init = function(options) { //	// Check cookie for param update //	if(readCookie("bldgltframe") == null){ //		createCookie("bldgltframe","72,H",1); //	}  	var params = []; 	params.push("mine"); 	params.push(this.getProperty("personId")); 	params.push(this.getProperty("encounterId")); //	params.push(readCookie("bldgltframe")); 	params.push(300); 	this.cclParams = params; };  banner.[+NameSpace+].prototype.render = function() { 	var tempStr=[]; 	var element = this.getTarget(); 	var jsonObj = this.data;     var recordData = jsonObj.RECORD_DATA; 	var compid = this.getComponentUid(); 	MPage.getCustomComp(compid).setProperty("headerSubTitle","");  //alert("Hello World"); 	tempStr.push("&lt;div&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;",this.name,"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;"); 	element.innerHTML = tempStr.join("");  };  // END [+NameSpace+] </Template><Template Name="mpt_TempCustom" Description="Custom mPage Template" Comments="0" Strings="0">Script Author: [+Author+] Program Name: [+Component mPage Name+].prg Foldername on PHX00027: [+Component mPage Folder+] CAPITALIZED FOLDERNAME [+Component mPage Folder Capitalized+] ;----------------------------------------------------------------------------  ###MPAGE TEMPLATE [DATE_TEXT] [TIME]  ###HTML SECTION FOR AIX NODE BEGIN: &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt; &lt;?xml version="1.0" encoding="UTF-8" ?&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"&gt; &lt;!-- [+Component mPage Name+].html --&gt; &lt;!-- Author: [+Author+] --&gt; &lt;!-- Creation Date: [DATE_TEXT] [TIME] --&gt;  &lt;head&gt; 	&lt;title&gt;&lt;/title&gt;     &lt;meta http-equiv="Content-Type" content="APPLINK,CCLLINK,MPAGES_EVENT,XMLCCLREQUEST,CCLLINKPOPUP,CCLNEWSESSIONWINDOW" name="discern"/&gt; 	&lt;link rel="stylesheet" type="text/css" href="\\phx00027\azbld\Custom\mpages\1bh_master_lib\css\1samt_az_css.css" /&gt; 	&lt;link rel="stylesheet" type="text/css" href="\\phx00027\azbld\Custom\mpages\[+Component mPage Folder+]\css\[+Component mPage Name+].css" /&gt;  &lt;/head&gt; &lt;body onload="javascript:RenderPage2();"&gt; &lt;h1&gt;&lt;/h1&gt; &lt;hr/&gt; &lt;div id="demo_bar"&gt;&lt;/div&gt;  &lt;a href="javascript:feedbackLink()"&gt;Feedback&lt;/a&gt; &lt;!-- ******************* --&gt; &lt;DIV id="componentPlaceHolder" class="col-group-2"&gt;&lt;!--Set class to 2 column mpage --&gt; &lt;DIV id="col1PlaceHolder" class="col1"&gt;&lt;!--Set class for 1st column on page --&gt; &lt;div id="[+Component mPage Folder+]" class="component2"&gt;&lt;/div&gt;  &lt;/DIV&gt;   &lt;DIV id="col2PlaceHolder" class="col2"&gt;&lt;!--Set class for 2nd column on page --&gt; &lt;div id="1bh_mpage_programtemplate" class="component2"&gt;&lt;/div&gt; &lt;/DIV&gt; &lt;/DIV&gt;  &lt;/body&gt; &lt;script type="text/javascript" src="\\phx00027\azbld\Custom\mpages\[+Component mPage Folder+]\js\[+Component mPage Name+].js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="\\phx00027\azbld\Custom\mpages\1bh_master_lib\js\1samt_az_javascript.js"&gt;&lt;/script&gt;   &lt;script type="text/javascript"&gt; var mpage_data_JSON = &lt;$MPAGE_DATA$&gt;; var MP_DATA = mpage_data_JSON.MPAGE_DATA; &lt;/script&gt; &lt;script type="text/javascript"&gt;  function feedbackLink() { var url="http://intranet7.bannerhealth.com/CernerFeedBack/Default.aspx?typ=1&amp;fb=[+Component mPage Folder+]"; url +="(ENCNTR_ID: $vis_encntrid$\/" url +="PERSON_ID: $pat_personid$\/" url +="PRSNL_ID: $usr_personid$)" var obj = APPLINK(100,url,""); } &lt;/script&gt; &lt;/html&gt;  ###HTML SECTION FOR AIX NODE END:  ###JAVASCRIPT SECTION BEGIN: // ---------------------------------------------------------------------------- // Script Author: [+Author+] // Program Name: [+Component mPage Name+].js // Related Files: [+Component mPage Name+].html, [+Component mPage Name+].prg // Creation Date: [DATE_TEXT] [TIME] // Last Modified: // Copyright: (c)[DATE_USER]yyyy[DATE_USER_END] // Purpose: // Request #: // ----------------------------------------------------------------------------   function Run[+Component mPage Folder+]Component() { 	var COMPONENT = new Component("[+Component mPage Folder+]", "[+Component mPage Name+]", "CCL Program Template"); 	COMPONENT.HandleSuccess = function(recordData) 	{ //The [+Component mPage Folder Capitalized+]_STRUCTURE_CNT and [+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY must be uppercase. 		var tempStr = ["&lt;h3 class='header'&gt;",this.headerName," count(",recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT,")&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;&lt;table&gt;"]; 	if(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT&gt;0) 	{ //alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT);  //BEGIN TABLE DATA 		for(var i=0,all_cnt=recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT;i&lt;all_cnt;i++) 		{ var xxyy=recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY[i].RETURNED_PERSON_ID; //alert(xxyy); 		tempStr.push("&lt;tr&gt;&lt;th&gt;Bold Column Header&lt;/th&gt;&lt;/tr&gt;"); 		tempStr.push("&lt;tr&gt;&lt;td&gt;Normal Column data&lt;/td&gt;&lt;/tr&gt;"); 		tempStr.push("&lt;tr&gt;&lt;td class='bold'&gt;Bold Column data&lt;/td&gt;&lt;/tr&gt;"); 		tempStr.push("&lt;tr&gt;&lt;td&gt;",xxyy,"&lt;/td&gt;&lt;/tr&gt;");  			alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT); 			alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY[i].RETURNED_PERSON_ID); 		}  	} 	else 	{ 	tempStr.push("&lt;tr&gt;&lt;td colspan='3' class='bold'&gt;No Data Documented&lt;/td&gt;&lt;/tr&gt;"); 	} 		tempStr.push("&lt;/table&gt;&lt;/div&gt;"); 		var aObj = SAMT_AZ._g(COMPONENT.id); 		aObj.style.display = ""; 		aObj.innerHTML = tempStr.join(""); 		this.setupToggle("E"); 		this.setupTooltips(); 	}; 	COMPONENT.HandleNoData = function(recordData) 	{ 		var aObj = SAMT_AZ._g(COMPONENT.id); 		aObj.style.display = ""; 		aObj.innerHTML = ["&lt;h3 class='header'&gt;",this.headerName,"&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;No Data Found&lt;/div&gt;"].join(""); 		this.setupToggle("E"); 	}; 	COMPONENT.HandleDataError = function(recordData) 	{ 		var aObj = SAMT_AZ._g(COMPONENT.id); 		aObj.style.display = ""; 		aObj.innerHTML = ["&lt;h3 class='header'&gt;",this.headerName,"&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;Error Retrieving Results&lt;/div&gt;"].join(""); 		this.setupToggle("E"); 	}; 	var sendArr = ["^^MINE^^",MP_DATA.PERSON_ID,MP_DATA.ENCNTR_ID]; //	alert(sendArr); 	SAMT_AZ.XMLCclRequestWrapper(COMPONENT, sendArr); }  ###JAVASCRIPT SECTION END:  ###CCL PROGRAM SECTION BEGIN: ;Script Author: [+Author+] ;Program Name: [+Component mPage Name+].prg ;Related Files: [+Component mPage Name+].html, [+Component mPage Name+].js ;Creation Date: [DATE_TEXT] [TIME] ;Last Modified: ;Copyright: (c)[DATE_USER]yyyy[DATE_USER_END] ;Purpose: ;Request #: ;Foldername on PHX00027: [+Component mPage Folder+] ;---------------------------------------------------------------------------- ;free record request go ;/*Add any fields and data type in your "record request" that your CCL will need to run.*/ ; ;record request ;( 	;1 encntr_id = i4 ;	1 per_id = i4 ;	1 enc_id = i4 ;	;1 cvalue = i4 ;) go ; ;/*Setting the request equal to the Encounter ID that will be sent from PowerChart. ;This information is manually entered here when testing. */ ; ;	set request-&gt;per_id = 123456789.00 go ;	set request-&gt;enc_id = 987654321.00 go ; ;/*The CCL that you want to execute to produce the data. */ ; ;	execute [+Component mPage Name+] "MINE", request-&gt;per_id, request-&gt;enc_id go  ;----------------------------------------------------------------------------  drop program [+Component mPage Name+]:dba go create program [+Component mPage Name+]:dba  prompt 	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to. 	, "per_id" = 0 	, "enc_id" = 0  with OUTDEV, per_id, enc_id  %i cust_script:1samt_az_common.inc ;%i cust_script:1samt_az_common_cds.inc ;PROGRAM HEADER ABOVE  /*Begin Record Structure*/ ;Record structure elements can be lowercase here but must be uppercase in your .js. free record [+Component mPage Folder+]_structure record [+Component mPage Folder+]_structure ( 1 [+Component mPage Folder+]_structure_cnt=i4 1 [+Component mPage Folder+]_structure_array[*] /*Create record structure aliases and assign the proper data type that will match the columns in your query*/ 	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_mrn = vc ; 	2 returned_fin = vc ;   %i cclsource:status_block.inc ) /*End Record Structure*/  set [+Component mPage Folder+]_structure-&gt;status_data.status ="F" set debug_ind = 1  declare fin_alias = vc declare mrn_alias = vc  select 	ea.alias  from 	encntr_alias ea  where ea.encntr_id = $enc_id;72958204.00;$enc_id; and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number detail case (ea.encntr_alias_type_cd) 	of 1077.00 : fin_alias = trim(ea.alias) 	of 1079.00 : mrn_alias = trim(ea.alias) endcase  /*Select Query Begin*/  select ;into "NL" 	p.person_id 	,p.name_full_formatted 	,e.encntr_id 	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)  from 	person p 	, encounter e  plan p where p.person_id = $per_id ;37298420.00 join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00  /*Select Query End*/  head report x=1 rec_cnt = 0 ; Setting record count to zero.  /*The "Head" section is most important part of what you are pulling from your query. Example: You could have "head p.person_id" and under that you need to return data from the query into it. */  head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column. rec_cnt=rec_cnt+1     if (size([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the foldername_structure_array array       stat= alterlist([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array, rec_cnt+10) ; this is increasing the size of the foldername_structure_array array by 10 if needed.    endif  /*Returning column data from the query into the record structure aliases*/ [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_mrn = mrn_alias [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_fin = fin_alias  foot p.person_id ;alias.fieldname | Closing the header. Same name as head. x=1 foot report x=1 stat= alterlist([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array, rec_cnt) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_cnt = rec_cnt with nocounter   set [+Component mPage Folder+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)  #exit_script   ;  ID for end of PRG  call ajax_reply([+Component mPage Folder+]_structure) 	; info_point (ajax_reply is a function that changes the 							;record structure to a string.  call echo(cnvtrectojson([+Component mPage Folder+]_structure)) 	; info_point (cnvtrectojson is a function that changes the 							;record structure to a JSON string and returns the string to the JS).  if (debug_ind) 	call echorecord([+Component mPage Folder+]_structure)  ;info_point (displays record structure in listing - troubleshooting) else 	free record [+Component mPage Folder+]_structure  ;info_point (clears record structure) endif  CALL log_end_script("[+Component mPage Name+]", debug_ind) ; info_point (For log files)  end go  ###CCL PROGRAM SECTION END:  ###1BH_MPAGE_HOME1.JS FILE BEGIN: function [+Component mPage Folder+](){ 		 CCLLINK("1samt_az_run_mpage","^^MINE^^,value($pat_personid$),value($vis_encntrid$),0,^^cust_html:[+Component mPage Name+].html^^",1); } ###1BH_MPAGE_HOME1.JS FILE END:  ###TESTLINK.JS FILE BEGIN: tempStr.push("&lt;p&gt;&lt;a href='javascript:[+Component mPage Folder+]();'&gt;[+Component mPage Folder+]&lt;/a&gt;&lt;/p&gt;"); ###TESTLINK.JS FILE END:  ###WINDOWS COMMAND PROMPT BEGIN: md [+Component mPage Folder+]\js [+Component mPage Folder+]\css [+Component mPage Folder+]\prg [+Component mPage Folder+]\img ###WINDOWS COMMAND PROMPT END: </Template><Template Name="mpt_mPage_ViewPoints_Audit" Description="mPage Viewpoint Audit" Comments="0" Strings="0">;Viewpoint Audit &#xD;&#xD;
select; into $outdev &#xD;&#xD;
	viewpoint_name = cnvtupper (m.viewpoint_name ) , &#xD;&#xD;
	view_name = cnvtupper (c.category_name ) &#xD;&#xD;
from (mp_viewpoint m ) , &#xD;&#xD;
	(mp_viewpoint_reltn r ) , &#xD;&#xD;
	(br_datamart_category c ) &#xD;&#xD;
plan (m where (m.active_ind = 1 ) ) &#xD;&#xD;
	and (r where (r.mp_viewpoint_id = m.mp_viewpoint_id ) ) &#xD;&#xD;
	and (c where (c.br_datamart_category_id = r.br_datamart_category_id ) ) &#xD;&#xD;
order by viewpoint_name , view_name&#xD;&#xD;
</Template><Template Name="mpt_OTS" Description="Changing OTS User" Comments="0" Strings="0">;LOOKUP CUSTOMER IN CUST_SAMT.CUST_PRSNLAUTHPOS TABLE:&#xD;&#xD;
select&#xD;&#xD;
	cp.bh_mp_pref_id,&#xD;&#xD;
	cp.updt_dt_tm";;",&#xD;&#xD;
	cp.usr_person_id,&#xD;&#xD;
	cp.position_cd,&#xD;&#xD;
	position_name=uar_get_code_display(cp.position_cd),&#xD;&#xD;
	p.username,&#xD;&#xD;
	p.name_full_formatted,&#xD;&#xD;
	cp.active_ind&#xD;&#xD;
from&#xD;&#xD;
	cust_samt.cust_prsnlauthpos cp,&#xD;&#xD;
	prsnl p&#xD;&#xD;
plan cp&#xD;&#xD;
where cp.usr_person_id = [+person_id+]&#xD;&#xD;
join p where p.person_id = cp.usr_person_id&#xD;&#xD;
order by cp.bh_mp_pref_id desc&#xD;&#xD;
&#xD;&#xD;
select&#xD;&#xD;
	cp.bh_mp_pref_id,&#xD;&#xD;
	cp.updt_dt_tm";;",&#xD;&#xD;
	cp.usr_person_id,&#xD;&#xD;
	cp.position_cd,&#xD;&#xD;
	position_name=uar_get_code_display(cp.position_cd),&#xD;&#xD;
	p.username,&#xD;&#xD;
	p.name_full_formatted,&#xD;&#xD;
	cp.active_ind&#xD;&#xD;
from&#xD;&#xD;
	cust_samt.cust_prsnlauthpos cp,&#xD;&#xD;
	prsnl p&#xD;&#xD;
plan cp&#xD;&#xD;
where cp.usr_person_id = (select person_id from prsnl where username = "[+USERNAME+]");3916850&#xD;&#xD;
join p where p.person_id = cp.usr_person_id&#xD;&#xD;
order by cp.bh_mp_pref_id desc&#xD;&#xD;
&#xD;&#xD;
;DELETE STATEMENTS&#xD;&#xD;
delete from cust_samt.cust_prsnlauthpos&#xD;&#xD;
where usr_person_id = [+person_id+]&#xD;&#xD;
go&#xD;&#xD;
commit go&#xD;&#xD;
&#xD;&#xD;
delete from cust_samt.cust_prsnlauthpos&#xD;&#xD;
where usr_person_id = (select person_id from prsnl where username = "[+USERNAME+]")&#xD;&#xD;
go&#xD;&#xD;
commit go&#xD;&#xD;
&#xD;&#xD;
;QUICK LOOK&#xD;&#xD;
select * from cust_samt.cust_prsnlauthpos where usr_person_id = [+person_id+] go&#xD;&#xD;
&#xD;&#xD;
select * from cust_samt.cust_prsnlauthpos&#xD;&#xD;
where usr_person_id = (select person_id from prsnl where username = "[+USERNAME+]")&#xD;&#xD;
go&#xD;&#xD;
</Template><Template Name="mpt_PMP" Description="PMP NPI" Comments="0" Strings="0">select &#xD;&#xD;
	p.username, &#xD;&#xD;
	p.name_full_formatted, &#xD;&#xD;
	p.person_id, &#xD;&#xD;
	alias_type_cd_display=uar_get_code_display(pa.prsnl_alias_type_cd), &#xD;&#xD;
	alias_pool_cd_display=uar_get_code_display(pa.alias_pool_cd), &#xD;&#xD;
	alias_identifier=pa.alias, &#xD;&#xD;
	pa.updt_dt_tm;, &#xD;&#xD;
	;pa.* &#xD;&#xD;
from 	&#xD;&#xD;
	prsnl p, 	&#xD;&#xD;
	prsnl_alias pa &#xD;&#xD;
plan p &#xD;&#xD;
where 	&#xD;&#xD;
	p.person_id = [+PERSON ID+] &#xD;&#xD;
join pa &#xD;&#xD;
where p.person_id = pa.person_id &#xD;&#xD;
	and pa.prsnl_alias_type_cd = 28769904.00  &#xD;&#xD;
	and pa.alias_pool_cd = 498265387.00 &#xD;&#xD;
	and pa.active_ind = 1 &#xD;&#xD;
with nocounter, separator="#", format, maxrec = 200&#xD;&#xD;
</Template><Template Name="mpt_ProgramUsage" Description="Find how much a program is being used." Comments="0" Strings="0">;Program Usage Count/Display&#xD;&#xD;
select into 'nl:'&#xD;&#xD;
	c.begin_dt_tm&#xD;&#xD;
	, c.end_dt_tm&#xD;&#xD;
	, c.object_name&#xD;&#xD;
	, c.object_params&#xD;&#xD;
	, c.output_device&#xD;&#xD;
	, c.updt_dt_tm&#xD;&#xD;
	, c.updt_id&#xD;&#xD;
	, p.username&#xD;&#xD;
	, p.name_full_formatted&#xD;&#xD;
from&#xD;&#xD;
	ccl_report_audit   c&#xD;&#xD;
	, prsnl   p&#xD;&#xD;
plan c&#xD;&#xD;
where cnvtupper(c.object_name) = '[+CCL PROGRAMNAME+]*' ;Uppercase&#xD;&#xD;
	and  c.updt_dt_tm &gt; sysdate - 1&#xD;&#xD;
join p where p.person_id = c.updt_id&#xD;&#xD;
	;and p.username = cnvtupper('PRHOLLAND')&#xD;&#xD;
with maxrec = 100&#xD;&#xD;
</Template><Template Name="mpt_ViewSource" Description="mPage View Source JSON" Comments="0" Strings="0">&lt;html&gt; &lt;head&gt; 	&lt;meta charset="UTF-8"&gt;   &lt;meta name="description" content="Default mPage Information"&gt;   &lt;meta name="keywords" content="UE Studio mPageViewSource.mac"&gt;   &lt;meta name="author" content="Robert Holland"&gt;   &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;  &lt;p&gt;This page requires data from three variables from the "View Source" of an mPage.&lt;br /&gt; The &lt;b&gt;"var m_viewpointJSON"&lt;/b&gt;, the &lt;b&gt;var m_criterionJSON&lt;/b&gt;, and the &lt;b&gt;"var m_mpageSettingsJSON"&lt;/b&gt;.&lt;br /&gt; &lt;hr /&gt; &lt;/p&gt; &lt;title&gt;mPage JSON Testing&lt;/title&gt; &lt;script language="javascript" src="./json2.js"&gt;&lt;/script&gt; &lt;script src="http://code.jquery.com/jquery-1.11.1.min.js"&gt;&lt;/script&gt;  &lt;/head&gt; &lt;style&gt; 	table, th, td {border-collapse:collapse; border: 1px solid black; background-color: #FFFF00}  &lt;/style&gt; &lt;body&gt; &lt;div&gt; &lt;p id="output"&gt;&lt;/p&gt;&lt;hr /&gt; &lt;/div&gt; &lt;div&gt; 	&lt;p id="output1"&gt;&lt;/p&gt;&lt;hr /&gt; &lt;/div&gt; &lt;div&gt; 	&lt;p id="output2"&gt;&lt;/p&gt;&lt;hr /&gt; &lt;/div&gt;  &lt;script&gt; //*********************************************Use mPageViewSource macro and paste JSON below here:*********************************************    //************************************************************Paste JSON above here:************************************************************  //JSON setup. var VP = JSON.parse(m_viewpointJSON); var viewpoint = VP.VP_INFO; var CR = JSON.parse(m_criterionJSON); var criterion = CR.CRITERION; var MP = JSON.parse(m_mpageSettingsJSON); var mpage = MP.MP_SETTINGS;  //alert(viewpoint.VIEWS.length); //alert(viewpoint.VIEWS[0].VIEW_NAME); var spc0='&amp;nbsp;&amp;nbsp;'; var spc1='&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'; var tempStr=[]; 	tempStr.push('&lt;b&gt;',viewpoint.VIEWPOINT_NAME,'&lt;/b&gt;&lt;br /&gt;'); 	tempStr.push('mPages in ',viewpoint.VIEWPOINT_NAME, ' (',viewpoint.VIEWPOINT_NAME_KEY,')&lt;br /&gt;'); for(var i=0,all_cnt=viewpoint.VIEWS.length;i&lt;all_cnt;i++){ //alert(i);  	tempStr.push(spc0,'View Name: &lt;b&gt;',viewpoint.VIEWS[i].VIEW_NAME,'&lt;/b&gt; (',viewpoint.VIEWS[i].VIEW_CAT_MEAN,')&lt;br /&gt;'); //	tempStr.push(spc1,'View Sequence: ',viewpoint.VIEWS[i].VIEW_SEQUENCE,'&lt;br /&gt;'); //	tempStr.push(spc1,'View Cat Mean: ',viewpoint.VIEWS[i].VIEW_CAT_MEAN,'&lt;br /&gt;'); //	tempStr.push(spc1,'View Cat ID: ',viewpoint.VIEWS[i].VIEW_CAT_ID,'&lt;br /&gt;'); //	tempStr.push(spc1,'User Defined IND: ',viewpoint.VIEWS[i].USER_DEFINED_IND,'&lt;br /&gt;'); //	tempStr.push(spc1,'Shown IND: ',viewpoint.VIEWS[i].SHOWN_IND,'&lt;br /&gt;'); //	tempStr.push(spc1,'Menu Item: ',viewpoint.VIEWS[i].MENU_ITEM,'&lt;br /&gt;'); //	tempStr.push(spc1,'View Type: ',viewpoint.VIEWS[i].VIEW_TYPE,'&lt;br /&gt;'); //	tempStr.push(spc1,'View Type Mean: ',viewpoint.VIEWS[i].VIEW_TYPE_MEAN,'&lt;br /&gt;'); //	tempStr.push(spc1,'Grouped View Viewpoint ID: ',viewpoint.VIEWS[i].GROUPED_VIEW_VIEWPOINT_ID,'&lt;br /&gt;&lt;br /&gt;'); //	tempStr.push(); //	tempStr.push(&lt;/ul&gt;);  document.getElementById("output").innerHTML = tempStr.join(""); }   var tempStr=[]; // 	tempStr.push('&lt;b&gt;Person NAME:&lt;/b&gt; ',criterion.PERSON_INFO.PERSON_NAME,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Person DOB:&lt;/b&gt; ',criterion.PERSON_INFO.DOB,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Person ID:&lt;/b&gt; ',criterion.PERSON_ID,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Encounter ID:&lt;/b&gt; ',criterion.ENCNTRS[0].ENCNTR_ID,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Username:&lt;/b&gt; ',criterion.USERNAME,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Personnel ID:&lt;/b&gt; ',criterion.PRSNL_ID,' (select pr.name_full_formatted from prsnl pr where pr.person_id = ',criterion.PRSNL_ID,'.00)&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Position Code:&lt;/b&gt; ',criterion.POSITION_CD,' (select cv.display from code_value cv where cv.code_value = ',criterion.POSITION_CD,'.00)&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Release Identifier:&lt;/b&gt; ',criterion.RELEASE_IDENTIFIER,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Release Version:&lt;/b&gt; ',criterion.RELEASE_VERSION,'&lt;br /&gt;'); //	for(var i=0,all_cnt=criterion.CRITERION.length;i&lt;all_cnt;i++){ // document.getElementById("output1").innerHTML = tempStr.join(""); //}  var tempStr=[]; //	tempStr.push('m_mpageSettingsJSON&lt;br /&gt;'); for(var i=0,all_cnt=mpage.MPAGE.length;i&lt;all_cnt;i++){ //	tempStr.push(mpage.MPAGE[i].SETTINGS.C_MN,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;',mpage.MPAGE[i].SETTINGS.BR_SET.LBL,' components:&lt;/b&gt;&lt;br /&gt;'); //	tempStr.push(mpage.MPAGE[i].SETTINGS.BR_SET.CS.length,'&lt;br /&gt;'); 	for(var j=0,all_cnt=mpage.MPAGE[i].SETTINGS.BR_SET.CS.length;j&lt;all_cnt;j++){ 		tempStr.push(spc0,mpage.MPAGE[i].SETTINGS.BR_SET.CS[j].LBL,'&lt;br /&gt;'); 	} //	tempStr.push(mpage.MPAGE[i].SETTINGS.BR_SET.CS[i].LBL,'&lt;br /&gt;'); //	tempStr.push(); //	tempStr.push(); document.getElementById("output2").innerHTML = tempStr.join(""); }  &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </Template><Template Name="mpt_UserToDBA" Description="Drop and create user as DBA" Comments="0" Strings="0">;Drop/Create User as DBA drop program user_to_dba go create program user_to_dba   prompt "MINE" = "MINE"   with outdev DROP CCLUSER [+USERNAME+] commit CREATE CCLUSER [+USERNAME+] TO DBA commit end go  </Template><Template Name="tmp_BasicHTML" Description="Basic HTML" Comments="0" Strings="0">&lt;!DOCTYPE html&gt;&#xD;&#xD;
&lt;html&gt;&#xD;&#xD;
&lt;head&gt;&#xD;&#xD;
  &lt;meta charset="UTF-8"&gt;&#xD;&#xD;
  &lt;meta name="description" content="Template HTML Document"&gt;&#xD;&#xD;
  &lt;meta name="keywords" content="comma,separated,keywords"&gt;&#xD;&#xD;
  &lt;meta name="author" content="Robert Holland"&gt;&#xD;&#xD;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;&#xD;&#xD;
&lt;title&gt;&lt;/title&gt;&#xD;&#xD;
&lt;script type="text/javascript" src="http://example.com/js/filename.js"&gt;&lt;/script&gt;&#xD;&#xD;
&lt;link rel="stylesheet" href="http://example.com/css/filname.css" /&gt;&#xD;&#xD;
&lt;/head&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;style&gt;&#xD;&#xD;
/*common css*/&#xD;&#xD;
table, th, td {border-collapse:collapse; border: 1px solid black;}&#xD;&#xD;
th {background-color:#ffff00;}&#xD;&#xD;
tr:nth-child(even) {background: #CCC;}&#xD;&#xD;
tr:nth-child(odd) {background: #FFF;}&#xD;&#xD;
a:link {text-decoration: none;}&#xD;&#xD;
a:visited {text-decoration: none;}&#xD;&#xD;
a:hover {text-decoration: underline;}&#xD;&#xD;
a:active {text-decoration: underline;}&#xD;&#xD;
&lt;/style&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;body&gt;&#xD;&#xD;
&lt;img src='data:image/png;base64,&#xD;&#xD;
' {base64 data goes here without the braces} /&gt;&#xD;&#xD;
&lt;br /&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;div&gt;&#xD;&#xD;
&lt;p&gt;Blah blah blah&lt;/p&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;table&gt;&lt;caption&gt;Table Caption&lt;/caption&gt;&#xD;&#xD;
&lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;/table&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;/div&gt;&#xD;&#xD;
&lt;/body&gt;&#xD;&#xD;
&lt;/html&gt;&#xD;&#xD;
</Template><Template Name="tmp_BasicHTMLSort" Description="Sortable HTML table" Comments="0" Strings="0">&lt;!DOCTYPE html&gt;&#xD;&#xD;
&lt;html&gt;&#xD;&#xD;
&lt;head&gt;&#xD;&#xD;
  &lt;meta charset="UTF-8"&gt;&#xD;&#xD;
  &lt;meta name="description" content="Template HTML Document"&gt;&#xD;&#xD;
  &lt;meta name="keywords" content="comma,separated,keywords"&gt;&#xD;&#xD;
  &lt;meta name="author" content="Robert Holland"&gt;&#xD;&#xD;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;&#xD;&#xD;
&lt;title&gt;&lt;/title&gt;&#xD;&#xD;
&lt;link rel="stylesheet" href="https://cdn.datatables.net/1.10.15/css/jquery.dataTables.min.css" /&gt;&#xD;&#xD;
&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"&gt;&lt;/script&gt;&#xD;&#xD;
&lt;script type="text/javascript" src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"&gt;&lt;/script&gt;&#xD;&#xD;
&lt;script&gt;&#xD;&#xD;
//$(document).ready(function() {&#xD;&#xD;
//    $('#example').DataTable();&#xD;&#xD;
//} );&#xD;&#xD;
$(document).ready(function() {&#xD;&#xD;
    $('#example').DataTable( {&#xD;&#xD;
        //scrollX:        '50vh', //On a small table, this will center the table data and leave the table headers left adjustes.&#xD;&#xD;
        scrollY:        '50vh',&#xD;&#xD;
        scrollCollapse: true,&#xD;&#xD;
        paging:         false&#xD;&#xD;
    } );&#xD;&#xD;
} );&#xD;&#xD;
&lt;/script&gt;&#xD;&#xD;
&lt;/head&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;style&gt;&#xD;&#xD;
/*common css*/&#xD;&#xD;
th {background-color:#c0c0c0;}&#xD;&#xD;
table, th, td {border-collapse:collapse; border: 1px solid black;}&#xD;&#xD;
a:link {text-decoration: none;}&#xD;&#xD;
a:visited {text-decoration: none;}&#xD;&#xD;
a:hover {text-decoration: underline;}&#xD;&#xD;
a:active {text-decoration: underline;}&#xD;&#xD;
&lt;/style&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;body&gt;&#xD;&#xD;
&lt;img src='data:image/png;base64,&#xD;&#xD;
' {base64 data goes here without the braces} /&gt;&#xD;&#xD;
&lt;br /&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;table id="example" class="display" width="50%"&gt;&lt;caption&gt;Table Caption&lt;/caption&gt;&#xD;&#xD;
&lt;thead&gt;&#xD;&#xD;
&lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;/thead&gt;&#xD;&#xD;
&lt;tfoot&gt;&#xD;&#xD;
&lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;/tfoot&gt;&#xD;&#xD;
&lt;tbody&gt;&#xD;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&#xD;&#xD;
&lt;/tbody&gt;&#xD;&#xD;
&lt;/table&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;a href="http://example.com"&gt;Example Anchor Link&lt;/a&gt;&#xD;&#xD;
&lt;/body&gt;&#xD;&#xD;
&lt;/html&gt;&#xD;&#xD;
</Template><Template Name="tmp_Blanklines" Description="Remove blank lines." Comments="0" Strings="0">Find What: &#xD;&#xD;
  %[^t ]++[^r^n]+&#xD;&#xD;
&#xD;&#xD;
Replace With:&#xD;&#xD;
 "" (without the quotes)&#xD;&#xD;
&#xD;&#xD;
Check "Regular Expressions"&#xD;&#xD;
Select "UltraEdit" regex type.&#xD;&#xD;
&#xD;&#xD;
Put cursor at top of file and run.&#xD;&#xD;
Note: For Mac formatted-files not converted to DOS on load &#xD;&#xD;
the UltraEdit regular expression find string must &#xD;&#xD;
be "^r[^t ]++^r" and the replace string "^r" &#xD;&#xD;
(both without the quotes).&#xD;&#xD;
</Template><Template Name="tmp_phpMSSQLPDOconnect" Description="MSSQL PDO Connect" Comments="0" Strings="0">&lt;?php&#xD;&#xD;
/*&#xD;&#xD;
*Program Author: [+Author+]&#xD;&#xD;
*Program Name: [+Program+]&#xD;&#xD;
*Creation Date: [DATE_TEXT] [TIME]&#xD;&#xD;
*Last Modified:  &#xD;&#xD;
*Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;&#xD;
*Purpose: &#xD;&#xD;
*Request #: &#xD;&#xD;
*/&#xD;&#xD;
&#xD;&#xD;
$serverName = "MSSQL_ServerFQDN";&#xD;&#xD;
&#xD;&#xD;
try {&#xD;&#xD;
	$handler = new PDO("sqlsrv:server=$serverName; Database=databasename", "username", "password");&#xD;&#xD;
	$handler-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); //Setting the attributes for the handler that we want to see if exception error.&#xD;&#xD;
}&#xD;&#xD;
&#xD;&#xD;
catch(PDOException $e) { //Return the PDO exception and naming it $e.&#xD;&#xD;
//	echo 'Caught';&#xD;&#xD;
//	die('Sorry database problem.'); //Production message.&#xD;&#xD;
	echo $e-&gt;getMessage(); //Show specific error message. Development.&#xD;&#xD;
}&#xD;&#xD;
&#xD;&#xD;
$query0 = $handler-&gt;query('select * from databasename');&#xD;&#xD;
//ONE: Output each column as row of data.&#xD;&#xD;
//	while($r = $query0-&gt;fetch()) {&#xD;&#xD;
//		echo $r[1]&#xD;&#xD;
//		, ' ', $r[2]&#xD;&#xD;
//		, ' ', $r[3]&#xD;&#xD;
//		, ' ', $r[4]&#xD;&#xD;
//		, ' ', $r[5]&#xD;&#xD;
//		, ' ', $r[6]&#xD;&#xD;
//		, ' ', $r[7]&#xD;&#xD;
//		, ' ', $r[8]&#xD;&#xD;
//		, ' ', $r[9]&#xD;&#xD;
//		, ' ', $r[10]&#xD;&#xD;
//		, ' ', $r[11]&#xD;&#xD;
//		, ' ', $r[12]&#xD;&#xD;
//		, ' ', $r[13]&#xD;&#xD;
//		, ' ', $r[14]&#xD;&#xD;
//		, ' ', $r[15]&#xD;&#xD;
//		, ' ', $r[16]&#xD;&#xD;
//		, ' ', $r[17]&#xD;&#xD;
//		, ' ', $r[18]&#xD;&#xD;
//		, ' ', $r[19]&#xD;&#xD;
//		, ' ', $r[20]&#xD;&#xD;
//		, ' ', $r[21]&#xD;&#xD;
//		, '\r\n';&#xD;&#xD;
//	}&#xD;&#xD;
&#xD;&#xD;
//TWO: Prints one array.&#xD;&#xD;
//	$r = $query0-&gt;fetch(PDO::FETCH_ASSOC); //Will fetch the associative array only.&#xD;&#xD;
//	echo '&lt;pre&gt;', print_r($r), '&lt;/pre&gt;';&#xD;&#xD;
&#xD;&#xD;
//THREE: Column 1 followed by dashes.&#xD;&#xD;
//	foreach($query0 as $r){&#xD;&#xD;
//		echo $r[0] . "-----";&#xD;&#xD;
//&#xD;&#xD;
//	}&#xD;&#xD;
&#xD;&#xD;
//FOUR: Not sure what I was doing here.&#xD;&#xD;
//	foreach($query0 as $key =&gt; $r){&#xD;&#xD;
//		$out = array_values($r);&#xD;&#xD;
//		echo json_encode($out);&#xD;&#xD;
//}&#xD;&#xD;
&#xD;&#xD;
//FIVE: Proper JSON.&#xD;&#xD;
	$r = $query0-&gt;fetchAll(PDO::FETCH_ASSOC);&#xD;&#xD;
	//echo '&lt;pre&gt;', print_r($r), '&lt;/pre&gt;';&#xD;&#xD;
	echo json_encode($r);&#xD;&#xD;
?&gt;&#xD;&#xD;
</Template><Template Name="tmp_phpMySQLconnect" Description="PHP MySQL connect" Comments="0" Strings="0">&lt;?php &#xD;&#xD;
/*&#xD;&#xD;
*Program Author: [+Author+]&#xD;&#xD;
*Program Name: [+Program+]&#xD;&#xD;
*Creation Date: [DATE_TEXT] [TIME]&#xD;&#xD;
*Last Modified:  &#xD;&#xD;
*Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;&#xD;
*Purpose: &#xD;&#xD;
*Request #: &#xD;&#xD;
*/&#xD;&#xD;
//---------------------------------------------------------------------------- &#xD;&#xD;
//database server  define('db_server', 'database_servername');  &#xD;&#xD;
//user, password, and database variables  &#xD;&#xD;
&#xD;&#xD;
$db_user = '[+database_username+]'; &#xD;&#xD;
$db_password = '[+database_userpassword+]'; &#xD;&#xD;
$db_dbname = '[+database_name+]';  &#xD;&#xD;
&#xD;&#xD;
//echo $q; &#xD;&#xD;
$con = mysql_connect($db_server, $db_user, $db_password);  &#xD;&#xD;
if (!$con)    {    &#xD;&#xD;
	die('Could not connect: ' . mysql_error());    &#xD;&#xD;
	}  &#xD;&#xD;
	mysql_select_db($db_dbname, $con);  &#xD;&#xD;
?&gt;&#xD;&#xD;
</Template><Template Name="tmp_phpMySQLiconnect" Description="PHP MySQLi Connect" Comments="0" Strings="0">&lt;?php //Program Author: [+Author+] &#xD;&#xD;
//Program Name: [+connect.php+] &#xD;&#xD;
//Creation Date: [DATE_TEXT] [TIME] &#xD;&#xD;
//Last Modified: &#xD;&#xD;
//Purpose: //Request #: &#xD;&#xD;
//---------------------------------------------------------------------------- &#xD;&#xD;
//MySQLi Connect  &#xD;&#xD;
$db_server = '[+database_servername+]'; &#xD;&#xD;
$db_user = '[+database_username+]'; &#xD;&#xD;
$db_password = '[+database_userpassword+]'; &#xD;&#xD;
$db_dbname = '[+database_name+]';&#xD;&#xD;
  &#xD;&#xD;
$con = mysqli_connect($db_server, $db_user, $db_password, $db_dbname);&#xD;&#xD;
if(!$con){&#xD;&#xD;
 die("Failed to connect to the database: " . mysqli_error($con));&#xD;&#xD;
 }&#xD;&#xD;
if (mysqli_connect_errno()){&#xD;&#xD;
 die("Error data : " . mysqli_connect_errno()." : ". mysqli_connect_error());&#xD;&#xD;
 } &#xD;&#xD;
//else {&#xD;&#xD;
//echo "Connected successfully! &lt;br /&gt;\r\n";&#xD;&#xD;
//}&#xD;&#xD;
?&gt;</Template><Template Name="tmp_phpMySQLPDOconnect" Description="MySQL PDO Connect" Comments="0" Strings="0">&lt;?php &#xD;&#xD;
//Program Author: [+Author+] &#xD;&#xD;
//Program Name: [+connect.php+] &#xD;&#xD;
//Creation Date: [DATE_TEXT] [TIME] &#xD;&#xD;
//Last Modified: &#xD;&#xD;
//Purpose: &#xD;&#xD;
//Request #: &#xD;&#xD;
//---------------------------------------------------------------------------- &#xD;&#xD;
//PDO connect try {&#xD;&#xD;
 	$handler = new PDO('mysql:host=[+servername+]; dbname=[+databasename+]', '[+dbusername+]', '[+dbpassword+]');&#xD;&#xD;
 	$handler-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);&#xD;&#xD;
 } &#xD;&#xD;
&#xD;&#xD;
catch(PDOException $e) { //Return the PDO exception "$e".&#xD;&#xD;
  	//die('Sorry database problem.'); //Production message.&#xD;&#xD;
 	echo $e-&gt;getMessage(); //Show specific error message. Development.&#xD;&#xD;
 }  &#xD;&#xD;
&#xD;&#xD;
//No carriage return after the end. It screws up header information when included. &#xD;&#xD;
?&gt;</Template><Template Name="tmp_phpMySQLPDOInsert" Description="MySQL PDO Insert" Comments="0" Strings="0">// ----------------------------------------------------------------------------&#xD;&#xD;
//Program Author: [+Author+]&#xD;&#xD;
//Program Name: [+Program+]&#xD;&#xD;
//Creation Date: [DATE_TEXT] [TIME]&#xD;&#xD;
//Last Modified:  &#xD;&#xD;
//Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;&#xD;
//Purpose: &#xD;&#xD;
//Request #: &#xD;&#xD;
// ----------------------------------------------------------------------------&#xD;&#xD;
&#xD;&#xD;
&lt;?php&#xD;&#xD;
include('[+connect.php+]');&#xD;&#xD;
&#xD;&#xD;
$fname = htmlentities($_POST['firstname']);&#xD;&#xD;
$mname = htmlentities($_POST['middlename']);&#xD;&#xD;
$lname = htmlentities($_POST['lastname']);&#xD;&#xD;
$bdate = htmlentities($_POST['birthdate']);&#xD;&#xD;
&#xD;&#xD;
$stmt = $handler-&gt;prepare("insert into test (firstname, middlename, lastname, birthdate) values (:firstname, :middlename, :lastname, :birthdate);");&#xD;&#xD;
$stmt-&gt;bindParam(':firstname', $fname);&#xD;&#xD;
$stmt-&gt;bindParam(':middlename', $mname);&#xD;&#xD;
$stmt-&gt;bindParam(':lastname', $lname);&#xD;&#xD;
$stmt-&gt;bindParam(':birthdate', $bdate);&#xD;&#xD;
$stmt-&gt;execute();&#xD;&#xD;
//header('Location: ../index.php');&#xD;&#xD;
?&gt;</Template><Template Name="tmp_phpMySQLPDOOutput" Description="PHP MySQL PDO Output" Comments="0" Strings="0">&lt;?php&#xD;&#xD;
//Program Author: [+Author+]&#xD;&#xD;
//Program Name: [+Program+]&#xD;&#xD;
//Creation Date: [DATE_TEXT] [TIME]&#xD;&#xD;
//Last Modified:  &#xD;&#xD;
//Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;&#xD;
//Purpose: &#xD;&#xD;
//Request #: &#xD;&#xD;
//----------------------------------------------------------------------------&#xD;&#xD;
//MySQL PDO Output&#xD;&#xD;
&#xD;&#xD;
require('[+pdoconnect.php+]');&#xD;&#xD;
//$statement = $handler-&gt;prepare("select * from thetablename order by id;"); &#xD;&#xD;
&#xD;&#xD;
$statement = $handler-&gt;prepare("select this from that order by this_id; "); &#xD;&#xD;
$statement-&gt;execute(); //Run the prepared query. Prevents MySQL injection.&#xD;&#xD;
&#xD;&#xD;
$RowCount = $statement-&gt;rowCount(); //Count the number of rows returned.&#xD;&#xD;
&#xD;&#xD;
//Send records to HTML table in browser.&#xD;&#xD;
echo "&#xD;&#xD;
&lt;html&gt;&#xD;&#xD;
&lt;head&gt;&#xD;&#xD;
	&lt;script type='text/javascript' src='../js/jquery-1.11.3.js'&gt;&lt;/script&gt;&#xD;&#xD;
	&lt;script type='text/javascript' src='js/custom.js'&gt;&lt;/script&gt; &lt;/head&gt; &lt;style&gt;&#xD;&#xD;
	th {text-align: left; background-color: #d0e4fe;}&#xD;&#xD;
	table, th, td {border-collapse:collapse; border: 1px solid black;}&#xD;&#xD;
&#xD;&#xD;
/* Tooltip container */&#xD;&#xD;
.tooltip {&#xD;&#xD;
    position: relative;&#xD;&#xD;
    display: inline-block;&#xD;&#xD;
/*     border-bottom: 1px dotted black;  If you want dots under the hoverable text */&#xD;&#xD;
}&#xD;&#xD;
&#xD;&#xD;
/* Tooltip text */&#xD;&#xD;
.tooltip .tooltiptext {&#xD;&#xD;
    visibility: hidden;&#xD;&#xD;
    width: 120px;&#xD;&#xD;
    background-color: black;&#xD;&#xD;
    color: #fff;&#xD;&#xD;
    text-align: center;&#xD;&#xD;
    padding: 5px 0;&#xD;&#xD;
    border-radius: 6px;&#xD;&#xD;
&#xD;&#xD;
    /* Position the tooltip text - see examples below! */&#xD;&#xD;
    position: absolute;&#xD;&#xD;
    z-index: 1;&#xD;&#xD;
}&#xD;&#xD;
&#xD;&#xD;
/* Show the tooltip text when you mouse over the tooltip container */ .tooltip:hover .tooltiptext {&#xD;&#xD;
    visibility: visible;&#xD;&#xD;
}&#xD;&#xD;
&lt;/style&gt;&#xD;&#xD;
&#xD;&#xD;
&lt;body&gt;&#xD;&#xD;
&lt;table id='us_states' class='tablesorter'&gt; &lt;thead&gt; &lt;tr&gt;&#xD;&#xD;
	&lt;th&gt;&lt;/th&gt;&#xD;&#xD;
	&lt;th&gt;State&lt;/th&gt;&#xD;&#xD;
	&lt;th&gt;Capital&lt;/th&gt;&#xD;&#xD;
	&lt;th&gt;Date Formed&lt;/th&gt;&#xD;&#xD;
	&lt;th&gt;Size&lt;/th&gt;&#xD;&#xD;
	&lt;th&gt;Edit&lt;/th&gt;&#xD;&#xD;
&lt;tr&gt;&#xD;&#xD;
&lt;/thead&gt;&#xD;&#xD;
&lt;tbody&gt;&#xD;&#xD;
&lt;tr&gt;&#xD;&#xD;
";&#xD;&#xD;
&#xD;&#xD;
			while($r = $statement-&gt;fetch(PDO::FETCH_OBJ)){&#xD;&#xD;
			$id_column = $r-&gt;id;&#xD;&#xD;
			$state_column = $r-&gt;state;&#xD;&#xD;
			$capital_column = $r-&gt;capital;&#xD;&#xD;
			$date_formed_column = $r-&gt;date_formed;&#xD;&#xD;
			$statedata_column = $r-&gt;data;&#xD;&#xD;
			$sq_miles_column = $r-&gt;sq_miles;&#xD;&#xD;
			echo "&lt;tr&gt;&lt;td&gt;" . $id_column . "&lt;/td&gt;&#xD;&#xD;
			&lt;td&gt;" . $state_column . "&lt;/td&gt;&#xD;&#xD;
			&lt;td&gt;" . $capital_column . "&lt;/td&gt;&#xD;&#xD;
			&lt;td class='tooltip'&gt;&lt;span class='tooltiptext'&gt;" . $statedata_column . "&lt;/span&gt;" . $date_formed_column . "&lt;/td&gt;&#xD;&#xD;
			&lt;td&gt;" . number_format($sq_miles_column) . " sqm.&lt;/td&gt;&#xD;&#xD;
			&lt;td&gt;&lt;input type='radio' name='edit' id='" . $id_column . "'&gt;&lt;/td&gt;&#xD;&#xD;
			&lt;/tr&gt;";&#xD;&#xD;
			}&#xD;&#xD;
&#xD;&#xD;
echo "&lt;/tbody&gt;&lt;/table&gt;";&#xD;&#xD;
&lt;!-- &lt;div class='tooltip'&gt;Hover over me&#xD;&#xD;
  &lt;span class='tooltiptext'&gt;Tooltip text&lt;/span&gt; &lt;/div&gt; --&gt; "; &#xD;&#xD;
?&gt;</Template><Template Name="tmp_rhts" Description="Timestamp" Comments="0" Strings="0">[DATE_TEXT] [TIME]&#xD;&#xD;&#xD;
</Template><Template Name="tmpTest" Description="" Comments="0" Strings="0">;Program Author: [+Author+]&#xD;&#xD;&#xD;
;Program Name: 1bh_mpage_[+NameSpace+].prg&#xD;&#xD;&#xD;
;Uppercase Bedrock View Identifier: [+UppercaseNameSpace+]&#xD;&#xD;&#xD;
;Creation Date: [DATE_TEXT] [TIME]&#xD;&#xD;&#xD;
;Last Modified:&#xD;&#xD;&#xD;
;Copyright: (c) [DATE_TEXT]&#xD;&#xD;&#xD;
;Purpose:&#xD;&#xD;&#xD;
;Request #:&#xD;&#xD;&#xD;
;Namespace: banner.[+NameSpace+]&#xD;&#xD;&#xD;
;----------------------------------------------------------------------------&#xD;&#xD;&#xD;
;free record request go&#xD;&#xD;&#xD;
;/*Add any fields and data type in your "record request" that your CCL will need to run.*/&#xD;&#xD;&#xD;
;&#xD;&#xD;&#xD;
;record request&#xD;&#xD;&#xD;
;( 	;1 encntr_id = i4&#xD;&#xD;&#xD;
;	1 per_id = i4&#xD;&#xD;&#xD;
;	1 enc_id = i4&#xD;&#xD;&#xD;
;	;1 cvalue = i4&#xD;&#xD;&#xD;
;) go&#xD;&#xD;&#xD;
;&#xD;&#xD;&#xD;
;/*Setting the request equal to the Encounter ID that will be sent from PowerChart.&#xD;&#xD;&#xD;
;This information is manually entered here when testing. */&#xD;&#xD;&#xD;
;&#xD;&#xD;&#xD;
;	set request-&gt;per_id = 123456789.00 go&#xD;&#xD;&#xD;
;	set request-&gt;enc_id = 987654321.00 go&#xD;&#xD;&#xD;
;&#xD;&#xD;&#xD;
;/*The CCL that you want to execute to produce the data. */&#xD;&#xD;&#xD;
;&#xD;&#xD;&#xD;
;	execute 1bh_mpage_[+NameSpace+] "MINE", request-&gt;per_id, request-&gt;enc_id go&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
;----------------------------------------------------------------------------&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
drop program 1bh_mpage_[+NameSpace+]:dba go&#xD;&#xD;&#xD;
create program 1bh_mpage_[+NameSpace+]:dba&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
prompt&#xD;&#xD;&#xD;
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.&#xD;&#xD;&#xD;
	, "per_id" = 0&#xD;&#xD;&#xD;
	, "enc_id" = 0&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
with OUTDEV, per_id, enc_id&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
%i cust_script:1samt_az_common.inc&#xD;&#xD;&#xD;
;%i cust_script:1samt_az_common_cds.inc&#xD;&#xD;&#xD;
;PROGRAM HEADER ABOVE&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
/*Begin Record Structure*/&#xD;&#xD;&#xD;
;Record structure elements can be lowercase here but must be uppercase in your .js.&#xD;&#xD;&#xD;
free record [+NameSpace+]_structure&#xD;&#xD;&#xD;
record [+NameSpace+]_structure (&#xD;&#xD;&#xD;
1 [+NameSpace+]_structure_cnt=i4&#xD;&#xD;&#xD;
1 [+NameSpace+]_structure_array[*]&#xD;&#xD;&#xD;
/*Create record structure aliases and assign the proper data type that will match the columns in your query*/&#xD;&#xD;&#xD;
	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement.&#xD;&#xD;&#xD;
	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement.&#xD;&#xD;&#xD;
	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement.&#xD;&#xD;&#xD;
	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement.&#xD;&#xD;&#xD;
	2 returned_mrn = vc ;&#xD;&#xD;&#xD;
	2 returned_fin = vc ;&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
%i cclsource:status_block.inc&#xD;&#xD;&#xD;
)&#xD;&#xD;&#xD;
/*End Record Structure*/&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
set [+NameSpace+]_structure-&gt;status_data.status ="F"&#xD;&#xD;&#xD;
set debug_ind = 1&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
declare fin_alias = vc&#xD;&#xD;&#xD;
declare mrn_alias = vc&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
select&#xD;&#xD;&#xD;
	ea.alias&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
from&#xD;&#xD;&#xD;
	encntr_alias ea&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
where ea.encntr_id = $enc_id;72958204.00;$enc_id;&#xD;&#xD;&#xD;
and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number&#xD;&#xD;&#xD;
detail&#xD;&#xD;&#xD;
case (ea.encntr_alias_type_cd)&#xD;&#xD;&#xD;
	of 1077.00 : fin_alias = trim(ea.alias)&#xD;&#xD;&#xD;
	of 1079.00 : mrn_alias = trim(ea.alias)&#xD;&#xD;&#xD;
endcase&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
/*Select Query Begin*/&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
select ;into "NL"&#xD;&#xD;&#xD;
	p.person_id&#xD;&#xD;&#xD;
	,p.name_full_formatted&#xD;&#xD;&#xD;
	,e.encntr_id&#xD;&#xD;&#xD;
	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
from&#xD;&#xD;&#xD;
	person p&#xD;&#xD;&#xD;
	, encounter e&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
plan p where p.person_id = $per_id ;37298420.00&#xD;&#xD;&#xD;
join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
/*Select Query End*/&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
head report&#xD;&#xD;&#xD;
x=1&#xD;&#xD;&#xD;
rec_cnt = 0 ; Setting record count to zero.&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
/*The "Head" section is most important part of what you are pulling from your query. Example:&#xD;&#xD;&#xD;
You could have "head p.person_id" and under that you need to return data from the query into it. */&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column.&#xD;&#xD;&#xD;
rec_cnt=rec_cnt+1&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
   if (size([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the [+NameSpace+]_structure_array array&#xD;&#xD;&#xD;
      stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt+10) ; this is increasing the size of the [+NameSpace+]_structure_array array by 10 if needed.&#xD;&#xD;&#xD;
   endif&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
/*Returning column data from the query into the record structure aliases*/&#xD;&#xD;&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id)&#xD;&#xD;&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted)&#xD;&#xD;&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id)&#xD;&#xD;&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type)&#xD;&#xD;&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_mrn = mrn_alias&#xD;&#xD;&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_fin = fin_alias&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
foot p.person_id ;alias.fieldname | Closing the header. Same name as head.&#xD;&#xD;&#xD;
x=1&#xD;&#xD;&#xD;
foot report&#xD;&#xD;&#xD;
x=1&#xD;&#xD;&#xD;
stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt)&#xD;&#xD;&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_cnt = rec_cnt&#xD;&#xD;&#xD;
with nocounter&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
set [+NameSpace+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
#exit_script   ;  ID for end of PRG&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
call ajax_reply([+NameSpace+]_structure) 	; info_point (ajax_reply is a function that changes the&#xD;&#xD;&#xD;
							;record structure to a string.&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
call echo(cnvtrectojson([+NameSpace+]_structure)) 	; info_point (cnvtrectojson is a function that changes the&#xD;&#xD;&#xD;
							;record structure to a JSON string and returns the string to the JS).&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
if (debug_ind)&#xD;&#xD;&#xD;
	call echorecord([+NameSpace+]_structure)  ;info_point (displays record structure in listing - troubleshooting)&#xD;&#xD;&#xD;
else&#xD;&#xD;&#xD;
	free record [+NameSpace+]_structure  ;info_point (clears record structure)&#xD;&#xD;&#xD;
endif&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
CALL log_end_script("1bh_mpage_[+NameSpace+]", debug_ind) ; info_point (For log files)&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
end&#xD;&#xD;&#xD;
go&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
/*JS NAMESPACE BELOW*/&#xD;&#xD;&#xD;
//BEGIN [+NameSpace+]&#xD;&#xD;&#xD;
/**&#xD;&#xD;&#xD;
* Project:&#xD;&#xD;&#xD;
* Version: 1.0&#xD;&#xD;&#xD;
* Released:	Tuesday, October 25, 2016 18:21:03&#xD;&#xD;&#xD;
* Updated:&#xD;&#xD;&#xD;
* Purpose:&#xD;&#xD;&#xD;
* @author: [+Author+]&#xD;&#xD;&#xD;
* Request#:&#xD;&#xD;&#xD;
*/&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
MPage.namespace("banner");&#xD;&#xD;&#xD;
banner.[+NameSpace+] = function(){};&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype = new MPage.Component();&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype.constructor = MPage.Component();&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype.base = MPage.Component.prototype;&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype.name = "banner.[+NameSpace+]";&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype.cclProgram = "1bh_mpage_[+NameSpace+]";&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype.cclParams = [];&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype.cclDataType = "JSON";&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype.init = function(options)&#xD;&#xD;&#xD;
{&#xD;&#xD;&#xD;
//	// Check cookie for param update&#xD;&#xD;&#xD;
//	if(readCookie("bldgltframe") == null){&#xD;&#xD;&#xD;
//		createCookie("bldgltframe","72,H",1);&#xD;&#xD;&#xD;
//	}&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
	var params = [];&#xD;&#xD;&#xD;
	params.push("mine");&#xD;&#xD;&#xD;
	params.push(this.getProperty("personId"));&#xD;&#xD;&#xD;
	params.push(this.getProperty("encounterId"));&#xD;&#xD;&#xD;
//	params.push(readCookie("bldgltframe"));&#xD;&#xD;&#xD;
	params.push(300);&#xD;&#xD;&#xD;
	this.cclParams = params;&#xD;&#xD;&#xD;
};&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
banner.[+NameSpace+].prototype.render = function()&#xD;&#xD;&#xD;
{&#xD;&#xD;&#xD;
	var tempStr=[];&#xD;&#xD;&#xD;
	var element = this.getTarget();&#xD;&#xD;&#xD;
	var jsonObj = this.data;&#xD;&#xD;&#xD;
    var recordData = jsonObj.RECORD_DATA;&#xD;&#xD;&#xD;
	var compid = this.getComponentUid();&#xD;&#xD;&#xD;
	MPage.getCustomComp(compid).setProperty("headerSubTitle","");&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
//alert("Hello World");&#xD;&#xD;&#xD;
	tempStr.push("&lt;div&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;",this.name,"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;");&#xD;&#xD;&#xD;
	element.innerHTML = tempStr.join("");&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
};&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
// END [+NameSpace+]&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
//BEGIN 1bh_mpage_home1.js&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
$("#mainTable_Testing tbody").append("&lt;tr style='height:30px'&gt;&lt;td&gt;&lt;a href='javascript:[+NameSpace+]();'&gt;[+NameSpace+]&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;");&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
//END 1bh_mpage_home1.js&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
//Begin testlink.js&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
function [+NameSpace+](){&#xD;&#xD;&#xD;
	CCLLINK("mp_unified_driver","^^MINE^^,value($PAT_PERSONID$),value($VIS_ENCNTRID$),value($USR_PERSONID$),value($USR_PositionCd$),value($PAT_PPRCode$) ,^^$APP_AppName$^^,^^^^,^^VB_[+UppercaseNameSpace+]^^",1); //Bedrock view identifier&#xD;&#xD;&#xD;
}&#xD;&#xD;&#xD;
&#xD;&#xD;&#xD;
//End testlink.js&#xD;&#xD;&#xD;
^</Template><Template Name="tmp_MySQLDBUser" Description="Create MySQL DB user and password." Comments="0" Strings="0">/*&#xD;&#xD;
-- Create local user.&#xD;&#xD;
//Database Username: [+dbusername+]&#xD;&#xD;
//Database Password: [+dbpassword+]&#xD;&#xD;
//----------------------------------------------------------------------------&#xD;&#xD;
*/&#xD;&#xD;
&#xD;&#xD;
-- Create local user.&#xD;&#xD;
CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]';&#xD;&#xD;
-- Create remote user.&#xD;&#xD;
CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]';&#xD;&#xD;
-- Tell the server to reload the GRANT TABLES.&#xD;&#xD;
FLUSH PRIVILEGES;&#xD;&#xD;
</Template><Template Name="tmp_MySQLDBUserandDatabase" Description="Create MySQL DB user and database." Comments="0" Strings="0">/*&#xD;&#xD;
-- Create user and database with the same name.&#xD;&#xD;
//Database Username: [+dbusername+]&#xD;&#xD;
//Database Password: [+dbpassword+]&#xD;&#xD;
//----------------------------------------------------------------------------&#xD;&#xD;
*/&#xD;&#xD;
&#xD;&#xD;
CREATE DATABASE [+dbusername+];&#xD;&#xD;
-- Create local user.&#xD;&#xD;
CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]';&#xD;&#xD;
GRANT ALL PRIVILEGES ON [+dbusername+].* TO '[+dbusername+]'@'localhost' WITH GRANT OPTION;&#xD;&#xD;
-- Create remote user.&#xD;&#xD;
CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]';&#xD;&#xD;
GRANT ALL PRIVILEGES ON [+dbusername+].* TO '[+dbusername+]'@'%' WITH GRANT OPTION;&#xD;&#xD;
-- Tell the server to reload the GRANT TABLES.&#xD;&#xD;
FLUSH PRIVILEGES;&#xD;&#xD;
</Template><Template Name="tmp_MySQLDBUserDBAccess" Description="Create MySQL DB user and grant access to existing DB." Comments="0" Strings="0">/*&#xD;&#xD;
--Create user and grant access to database.&#xD;&#xD;
//Database Username: [+dbusername+]&#xD;&#xD;
//Database Password: [+dbpassword+]&#xD;&#xD;
//Database Name: [+dbname+]&#xD;&#xD;
//----------------------------------------------------------------------------&#xD;&#xD;
*/&#xD;&#xD;
&#xD;&#xD;
-- Create local user.&#xD;&#xD;
CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]';&#xD;&#xD;
GRANT ALL PRIVILEGES ON [+dbname+].* TO '[+dbusername+]'@'localhost' WITH GRANT OPTION;&#xD;&#xD;
-- Create remote user.&#xD;&#xD;
CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]';&#xD;&#xD;
GRANT ALL PRIVILEGES ON [+dbname+].* TO '[+dbusername+]'@'%' WITH GRANT OPTION;&#xD;&#xD;
-- Tell the server to reload the GRANT TABLES.&#xD;&#xD;
FLUSH PRIVILEGES;</Template><Template Name="tmp_MySQLDBPasswordChange" Description="Change MySQL password for user." Comments="0" Strings="0">/*&#xD;&#xD;
-- Change user password.&#xD;&#xD;
-- Find current user: SELECT CURRENT_USER();&#xD;&#xD;
//Database Username: [+dbusername+]&#xD;&#xD;
//Database Password: [+dbpassword+]&#xD;&#xD;
//----------------------------------------------------------------------------&#xD;&#xD;
*/&#xD;&#xD;
&#xD;&#xD;
use mysql;&#xD;&#xD;
-- Method 1 (Deprecated):&#xD;&#xD;
update mysql.user set password('[+dbpassword+]') where user = '[+dbusername+]';&#xD;&#xD;
FLUSH PRIVILEGES;&#xD;&#xD;
&#xD;&#xD;
-- Method 2 (MySQL 5.7+):&#xD;&#xD;
update mysql.user set authentication_string=PASSWORD('[+dbpassword+]') where user='[+dbusername+]';&#xD;&#xD;
FLUSH PRIVILEGES;&#xD;&#xD;
&#xD;&#xD;
-- Method 3 (Preferred method for current user.):&#xD;&#xD;
alter user set password = '[+dbpassword+]';&#xD;&#xD;
FLUSH PRIVILEGES;&#xD;&#xD;
&#xD;&#xD;
-- MySQL 5.7:&#xD;&#xD;
alter user '[+dbusername+]'@'localhost' identified by '[+dbpassword+]';&#xD;&#xD;
alter user '[+dbusername+]'@'%' identified by '[+dbpassword+]';&#xD;&#xD;
&#xD;&#xD;
-- Method 4 (Preferred method for another user.):&#xD;&#xD;
alter user set password for '[+dbusername+]'@'localhost' = '[+dbpassword+]';&#xD;&#xD;
FLUSH PRIVILEGES;&#xD;&#xD;
&#xD;&#xD;
-- Remote user password change:&#xD;&#xD;
alter user set password for '[+dbusername+]'@'%' = '[+dbpassword+]';&#xD;&#xD;
FLUSH PRIVILEGES;&#xD;&#xD;
&#xD;&#xD;
-- ALTER USER EXAMPLES ==&#xD;&#xD;
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.&#xD;&#xD;
&#xD;&#xD;
-- This worked for me from the MySQL DB prompt:&#xD;&#xD;
	SET PASSWORD = PASSWORD('[+dbpassword+]');&#xD;&#xD;
-- Source: http://stackoverflow.com/questions/33467337/reset-mysql-root-password-using-alter-user-statement-after-install-on-mac&#xD;&#xD;
&#xD;&#xD;
-- This syntax enables changing your own password without naming your account literally.&#xD;&#xD;
	ALTER USER USER() IDENTIFIED BY '[+dbusername+]';&#xD;&#xD;
&#xD;&#xD;
-- This statement changes the password for [+dbusername+] but leaves that for someother[+dbusername+] unchanged. &#xD;&#xD;
-- For both accounts, connections are required to use SSL and each account can be used for a maximum of two simultaneous connections:&#xD;&#xD;
	ALTER USER&#xD;&#xD;
  	'[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]',&#xD;&#xD;
  	'someother[+dbusername+]'@'localhost'&#xD;&#xD;
  	REQUIRE SSL WITH MAX_USER_CONNECTIONS 2;&#xD;&#xD;
&#xD;&#xD;
-- Example 1: Change an account's password and expire it. As a result, the user must connect with the named password and choose a new one at the next connection:&#xD;&#xD;
	ALTER USER '[+dbusername+]'@'localhost'&#xD;&#xD;
  	IDENTIFIED BY '[+dbpassword+]' PASSWORD EXPIRE;&#xD;&#xD;
&#xD;&#xD;
-- Example 2: Modify an account to use the sha256_password authentication plugin and the given password. Require that a new password be chosen every 180 days:&#xD;&#xD;
	ALTER USER '[+dbusername+]'@'localhost'&#xD;&#xD;
  	IDENTIFIED WITH sha256_password BY '[+dbpassword+]'  (SHA256 may require an SSL connection on some systems)&#xD;&#xD;
  	PASSWORD EXPIRE INTERVAL 180 DAY;&#xD;&#xD;
&#xD;&#xD;
-- Example 3: Lock or unlock an account:&#xD;&#xD;
	ALTER USER '[+dbusername+]'@'localhost' ACCOUNT LOCK;&#xD;&#xD;
		ALTER USER '[+dbusername+]'@'localhost' ACCOUNT UNLOCK;&#xD;&#xD;
&#xD;&#xD;
-- Example 4: Require an account to connect using SSL and establish a limit of 20 connections per hour:&#xD;&#xD;
	ALTER USER '[+dbusername+]'@'localhost'&#xD;&#xD;
  	REQUIRE SSL WITH MAX_CONNECTIONS_PER_HOUR 20;&#xD;&#xD;
-- http://dev.mysql.com/doc/refman/5.7/en/alter-user.html&#xD;&#xD;
</Template><Template Name="tmp_MySQLFKReferences" Description="Display MySQL foreign key references." Comments="0" Strings="0">-- To run from the command prompt type:&#xD;&#xD;
-- mysql -u rob -p &lt; display_foreign_key_references.sql &gt; current_fk_refs.txt&#xD;&#xD;
&#xD;&#xD;
use information_schema;&#xD;&#xD;
select &#xD;&#xD;
	concat(table_schema,'.',table_name,'.',column_name) as this_db_table_and_column,&#xD;&#xD;
	concat(table_schema,'.',referenced_table_name,'.',referenced_column_name) as references_this_db_table_and_column,&#xD;&#xD;
	constraint_name&#xD;&#xD;
from key_column_usage&#xD;&#xD;
where referenced_table_name is not null&#xD;&#xD;
order by this_db_table_and_column;&#xD;&#xD;
&#xD;&#xD;
-- The order by clause may not work on all DB's. If there is an error remove it and run again.&#xD;&#xD;
&#xD;&#xD;
-- Same query but this one shows the cascade rules.&#xD;&#xD;
use information_schema;&#xD;&#xD;
select&#xD;&#xD;
	concat(kcu.table_schema,'.',kcu.table_name,'.',kcu.column_name) as this_db_table_and_column,&#xD;&#xD;
	concat(kcu.table_schema,'.',kcu.referenced_table_name,'.',kcu.referenced_column_name) as references_this_db_table_and_column,&#xD;&#xD;
	kcu.constraint_name,&#xD;&#xD;
	rc.update_rule,&#xD;&#xD;
	rc.delete_rule&#xD;&#xD;
from&#xD;&#xD;
	key_column_usage kcu&#xD;&#xD;
join referential_constraints rc on (rc.constraint_name= kcu.constraint_name)&#xD;&#xD;
where kcu.referenced_table_name is not null order by this_db_table_and_column;&#xD;&#xD;
&#xD;&#xD;
-- The order by clause may not work on all DB's. If there is an error remove it and run again.&#xD;&#xD;
&#xD;&#xD;
-- On Tracy's Ubuntu MySQL server I got this error message: Unknown column 'kcu.TABLE_SCHEMA' in 'field list' because the alias in the from clause was in uppercase and lowercase in the select portion.&#xD;&#xD;
&#xD;&#xD;
-- This is a quick way to view all of the contraints:&#xD;&#xD;
select * from information_schema.referential_constraints;&#xD;&#xD;
&#xD;&#xD;
-- This is a quick way to view constraints from a specific database:&#xD;&#xD;
select * from information_schema.referential_constraints where constraint_schema = 'thedatabasename';&#xD;&#xD;
</Template><Template Name="tmp_Shell" Description="Common AIX/Linux shell stuff" Comments="0" Strings="0">#WHILE loop&#xD;&#xD;
i=1&#xD;&#xD;
while [[ $i -le 10 ]]&#xD;&#xD;
do&#xD;&#xD;
  echo "Searching Node $i: "&#xD;&#xD;
  ssh rholland@pcma"$i"p.bdcm.bannerhealth.com "ls -al /cerner/w_custom/&#xD;&#xD;
cust_wh/code/$1/$2"&#xD;&#xD;
  # echo "$i"&#xD;&#xD;
   let i=i+1&#xD;&#xD;
done&#xD;&#xD;
&#xD;&#xD;
#FOR Loop&#xD;&#xD;
for file in *.txt&#xD;&#xD;
do &#xD;&#xD;
	cat $file &gt;&gt; OneBigFile.txt&#xD;&#xD;
done&#xD;&#xD;
&#xD;&#xD;
#AIX Array:&#xD;&#xD;
set -A profileup 2 3 4 5 6 7 8 9 10&#xD;&#xD;
for i in ${profileup[@]}&#xD;&#xD;
do&#xD;&#xD;
echo "Updating .profile on pcma${i}: "&#xD;&#xD;
scp ~/.profile rholland@pcma"$i"p.bdcm.bannerhealth.com:~/&#xD;&#xD;
#echo "$i"&#xD;&#xD;
done&#xD;&#xD;
&#xD;&#xD;
LINUX Array:&#xD;&#xD;
rho_hosts=(2 3 4 5 6 7 8 9 10 11 12 19 20 22) #Skipping Node 1 in the array&#xD;&#xD;
for i in ${rho_hosts[@]}&#xD;&#xD;
do&#xD;&#xD;
  echo "Updating .bashrc on samtazapp${i}: "&#xD;&#xD;
  scp ~/.bashrc rholland@samtazapp"$i":~/&#xD;&#xD;
#  #echo "$i"&#xD;&#xD;
done&#xD;&#xD;
&#xD;&#xD;
Make Dummy Files:&#xD;&#xD;
dummyfiles(){&#xD;&#xD;
if [ $# -eq 0 ]&#xD;&#xD;
then&#xD;&#xD;
echo "dummyfiles 30"&#xD;&#xD;
else&#xD;&#xD;
#printf '%s ' {1..$1}.txt |xargs touch&#xD;&#xD;
for ((i=1; i&lt;=$1; i++)); do : &gt;&gt; dummyfile_"$i".txt; done&#xD;&#xD;
fi&#xD;&#xD;
}&#xD;&#xD;
</Template></Templates>
