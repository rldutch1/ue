<?xml version="1.0"?>
<Templates encode="utf8escenc"><Template Name="mpt_ApplicationPrefs" Description="Page was unable to load successfully." Comments="0" Strings="0">;Page was unable to load successfully error.&#xD;&#xD;
;[+USERNAME+] [+VIEWNAME+] - Example viewname: VWP|EDNURSINGVIEW&#xD;&#xD;
select distinct&#xD;&#xD;
n.parent_entity_id&#xD;&#xD;
,n.pvc_value&#xD;&#xD;
,n.name_value_prefs_id&#xD;&#xD;
,a.application_number&#xD;&#xD;
,n.pvc_name&#xD;&#xD;
from&#xD;&#xD;
app_prefs a&#xD;&#xD;
,name_value_prefs n&#xD;&#xD;
plan a&#xD;&#xD;
where a.prsnl_id = (select person_id from prsnl p where p.username = cnvtupper("[+USERNAME+]"))&#xD;&#xD;
join n&#xD;&#xD;
where n.parent_entity_id = a.app_prefs_id&#xD;&#xD;
and n.parent_entity_name = "APP_PREFS"&#xD;&#xD;
;;and cnvtupper(n.pvc_name) = "VWP|EDNURSINGVIEW"&#xD;&#xD;
and cnvtupper(n.pvc_name) = "[+VIEWNAME+]"; Comment this line to see all view names (n.pvc_name associated with the username.&#xD;&#xD;
order by n.pvc_name, n.parent_entity_id, n.sequence&#xD;&#xD;
&#xD;&#xD;
delete&#xD;&#xD;
from&#xD;&#xD;
name_value_prefs n&#xD;&#xD;
where n.parent_entity_id in (6839964849.00)&#xD;&#xD;
and n.parent_entity_name = "APP_PREFS"&#xD;&#xD;
and n.pvc_name = "[+VIEWNAME+]"&#xD;&#xD;
go&#xD;&#xD;
commit go&#xD;&#xD;
^</Template><Template Name="mpt_Canned_Components" Description="Show canned components" Comments="0" Strings="0">select; into $outdev 	cname = cnvtupper (c.category_name ) 	, c.br_datamart_category_id 	, c.category_name 	, c.category_mean 	, c.layout_flag 	, br.report_mean 	, br.report_name 	, br.report_seq  from 	br_datamart_category   c 	, br_datamart_report   br 	, br_datamart_report_filter_r   bfr 	, br_datamart_filter   bf  plan c where c.br_datamart_category_id &gt; 0 join  br where br.br_datamart_category_id = c.br_datamart_category_id join bfr where bfr.br_datamart_report_id = br.br_datamart_report_id join bf where bf.br_datamart_filter_id = bfr.br_datamart_filter_id  and bf.filter_category_mean ="mp_sect_params" order by 	cname 	, bf.filter_seq  </Template><Template Name="mpt_CheckSequence" Description="Check table sequences." Comments="0" Strings="0">;cust_samt.cust_hcc_documentation table. declare mp_next_id = f8 go   select into "nl:"     seq_id = seq(cust_hcc_documentation_seq,nextval)      from dual   detail     mp_next_id = seq_id   with nocounter go call echo(mp_next_id) go  ;cust_samt.cust_prsnlauthpos table declare bhmp_next_id = f8 go select into "nl:" bhmp_next_id2 = seq(BHS_MP_DATA_SEQ,nextval) from dual detail bhmp_next_id = bhmp_next_id2 with nocounter go call echo(bhmp_next_id)  go ^</Template><Template Name="mpt_CustTablecheck" Description="Check if custom tables exist." Comments="0" Strings="0">select * from cust_samt.bhs_mp_data_seq ;This is the sequence. select * from cust_samt.cust_hcc_documentation with maxrec = 100; select * from cust_samt.cust_hcc_preferences with maxrec = 100; select * from cust_samt.cust_mig_meds with maxrec = 100; select * from cust_samt.cust_mpage_utilization with maxrec = 100; select * from cust_samt.cust_mp_pref with maxrec = 100; select * from cust_samt.cust_prsnlauthpos with maxrec = 100; </Template><Template Name="mpt_FindComponent" Description="Find mPage component by name" Comments="0" Strings="0">select  DISTINCT INTO "NL:" 	mPage_Name=bdc.category_name, 	mPage_Layout = if (bdc.layout_flag = 0 )	"Summary" elseif(bdc.layout_flag = 1)	"Workflow" endif, 	bdc.category_mean , 	bdv.mpage_param_value, 	bdf.filter_mean , 	bdf.filter_seq, 	bdc.layout_flag, 	;bdc.* 	;bdv.* 	bdf.* from BR_DATAMART_CATEGORY BDC, br_datamart_value bdv,  br_datamart_filter bdf where bdc.br_datamart_category_id = bdv.br_datamart_category_id and bdv.mpage_param_value = "[+ComponentName+]" and bdf.br_datamart_filter_id = bdv.br_datamart_filter_id order by bdc.category_name, bdc.layout_flag  SELECT DISTINCT B.CATEGORY_MEAN , MPage = B.CATEGORY_NAME , Component = BD.REPORT_NAME , BD.REPORT_MEAN , BDV.MPAGE_PARAM_VALUE FROM MP_VIEWPOINT   M , BR_DATAMART_CATEGORY   B , BR_DATAMART_REPORT   BD , MP_VIEWPOINT_RELTN   MV , BR_DATAMART_REPORT_FILTER_R   BDRF , BR_DATAMART_VALUE   BDV PLAN M  WHERE M.ACTIVE_IND = 1      JOIN MV WHERE M.MP_VIEWPOINT_ID = MV.MP_VIEWPOINT_ID    JOIN B WHERE B.BR_DATAMART_CATEGORY_ID = MV.BR_DATAMART_CATEGORY_ID JOIN BD WHERE MV.BR_DATAMART_CATEGORY_ID = BD.BR_DATAMART_CATEGORY_ID and BD.REPORT_MEAN like "MP_VB_WF_MMF*" or BD.REPORT_MEAN like "MP_VB_STD_MMF*" JOIN BDRF WHERE BDRF.BR_DATAMART_REPORT_ID = BD.BR_DATAMART_REPORT_ID JOIN BDV WHERE BDRF.BR_DATAMART_FILTER_ID = BDV.BR_DATAMART_FILTER_ID and BDV.MPAGE_PARAM_MEAN = "mp_label" and BDV.MPAGE_PARAM_VALUE like "*[+ComponentName+]*" Order by Component, Mpage WITH MAXREC = 4000, TIME = 100 </Template><Template Name="mpt_FindNameSpace" Description="Find Component by NameSpace" Comments="0" Strings="0">;Find mPages using a specific namespace ;br_datamart_value.parent_entity_id is the code_value. select 	mPage_name = bdc.category_name; mPage_name 	, Component_Name = bdv.mpage_param_value; Component_Name 	, Namespace = bdv.freetext_desc; banner.namespace 	, View_Builder_Name = bdc.category_mean; view_builder_name 	, bdv.br_datamart_filter_id 	, bdv.br_datamart_value_id; plus 1 = component_name 	, bdv.br_datamart_category_id from 	BR_DATAMART_VALUE bdv;BR_DATAMART_VALUE_ID (PK) 	, BR_DATAMART_CATEGORY   BDC plan bdv where bdv.freetext_desc like "banner.[+NameSpace+]" join bdc where bdc.br_datamart_category_id = bdv.br_datamart_category_id order by mpage_name  ;Find mPages using a "banner." namespace select 	mPage_name = bdc.category_name; mPage_name 	, Component_Name = bdv.mpage_param_value; Component_Name 	, Namespace = bdv.freetext_desc; banner.namespace 	, View_Builder_Name = bdc.category_mean; view_builder_name 	, bdv.br_datamart_filter_id 	, bdv.br_datamart_value_id; plus 1 = component_name from 	BR_DATAMART_VALUE bdv;BR_DATAMART_VALUE_ID (PK) 	, BR_DATAMART_CATEGORY   BDC plan bdv where bdv.freetext_desc like "banner.*" join bdc where bdc.br_datamart_category_id = bdv.br_datamart_category_id order by mpage_name ^</Template><Template Name="mpt_TempBedrock" Description="Bedrock mPage Template" Comments="0" Strings="0">;Program Author: [+Author+] ;Program Name: 1bh_mpage_[+NameSpace+].prg ;Creation Date: [DATE_TEXT] [TIME] ;Last Modified: ;Copyright (c)[DATE_USER]yyyy[DATE_USER_END] ;Purpose: ;Request #: ;Namespace: banner.[+NameSpace+] ;---------------------------------------------------------------------------- ;free record request go ;/*Add any fields and data type in your "record request" that your CCL will need to run.*/ ; ;record request ;( 	;1 encntr_id = i4 ;	1 per_id = i4 ;	1 enc_id = i4 ;	;1 cvalue = i4 ;) go ; ;/*Setting the request equal to the Encounter ID that will be sent from PowerChart. ;This information is manually entered here when testing. */ ; ;	set request-&gt;per_id = 123456789.00 go ;	set request-&gt;enc_id = 987654321.00 go ; ;/*The CCL that you want to execute to produce the data. */ ; ;	execute 1bh_mpage_[+NameSpace+] "MINE", request-&gt;per_id, request-&gt;enc_id go  ;----------------------------------------------------------------------------  drop program 1bh_mpage_[+NameSpace+]:dba go create program 1bh_mpage_[+NameSpace+]:dba  prompt 	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to. 	, "per_id" = 0 	, "enc_id" = 0  with OUTDEV, per_id, enc_id  %i cust_script:1samt_az_common.inc ;%i cust_script:1samt_az_common_cds.inc ;PROGRAM HEADER ABOVE  /*Begin Record Structure*/ ;Record structure elements can be lowercase here but must be uppercase in your .js. free record [+NameSpace+]_structure record [+NameSpace+]_structure ( 1 [+NameSpace+]_structure_cnt=i4 1 [+NameSpace+]_structure_array[*] /*Create record structure aliases and assign the proper data type that will match the columns in your query*/ 	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_mrn = vc ; 	2 returned_fin = vc ;   %i cclsource:status_block.inc ) /*End Record Structure*/  set [+NameSpace+]_structure-&gt;status_data.status ="F" set debug_ind = 1  declare fin_alias = vc declare mrn_alias = vc  select 	ea.alias  from 	encntr_alias ea  where ea.encntr_id = $enc_id;72958204.00;$enc_id; and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number detail case (ea.encntr_alias_type_cd) 	of 1077.00 : fin_alias = trim(ea.alias) 	of 1079.00 : mrn_alias = trim(ea.alias) endcase  /*Select Query Begin*/  select ;into "NL" 	p.person_id 	,p.name_full_formatted 	,e.encntr_id 	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)  from 	person p 	, encounter e  plan p where p.person_id = $per_id ;37298420.00 join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00  /*Select Query End*/  head report x=1 rec_cnt = 0 ; Setting record count to zero.  /*The "Head" section is most important part of what you are pulling from your query. Example: You could have "head p.person_id" and under that you need to return data from the query into it. */  head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column. rec_cnt=rec_cnt+1     if (size([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the [+NameSpace+]_structure_array array       stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt+10) ; this is increasing the size of the [+NameSpace+]_structure_array array by 10 if needed.    endif  /*Returning column data from the query into the record structure aliases*/ [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_mrn = mrn_alias [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_fin = fin_alias  foot p.person_id ;alias.fieldname | Closing the header. Same name as head. x=1 foot report x=1 stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_cnt = rec_cnt with nocounter  set [+NameSpace+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)  #exit_script   ;  ID for end of PRG  call ajax_reply([+NameSpace+]_structure) 	; info_point (ajax_reply is a function that changes the 							;record structure to a string.  call echo(cnvtrectojson([+NameSpace+]_structure)) 	; info_point (cnvtrectojson is a function that changes the 							;record structure to a JSON string and returns the string to the JS).  if (debug_ind) 	call echorecord([+NameSpace+]_structure)  ;info_point (displays record structure in listing - troubleshooting) else 	free record [+NameSpace+]_structure  ;info_point (clears record structure) endif  CALL log_end_script("1bh_mpage_[+NameSpace+]", debug_ind) ; info_point (For log files)  end go  /*JS NAMESPACE BELOW*/ //BEGIN [+NameSpace+] /** * Project: * Version: 1.0 * Released:	[DATE_TEXT] [TIME] * Updated: * Purpose: * @author: [+Author+] * Request#: */  MPage.namespace("banner"); banner.[+NameSpace+] = function(){}; banner.[+NameSpace+].prototype = new MPage.Component(); banner.[+NameSpace+].prototype.constructor = MPage.Component(); banner.[+NameSpace+].prototype.base = MPage.Component.prototype; banner.[+NameSpace+].prototype.name = "banner.[+NameSpace+]"; banner.[+NameSpace+].prototype.cclProgram = "1bh_mpage_[+NameSpace+]"; banner.[+NameSpace+].prototype.cclParams = []; banner.[+NameSpace+].prototype.cclDataType = "JSON";  banner.[+NameSpace+].prototype.init = function(options) { //	// Check cookie for param update //	if(readCookie("bldgltframe") == null){ //		createCookie("bldgltframe","72,H",1); //	}  	var params = []; 	params.push("mine"); 	params.push(this.getProperty("personId")); 	params.push(this.getProperty("encounterId")); //	params.push(readCookie("bldgltframe")); 	params.push(300); 	this.cclParams = params; };  banner.[+NameSpace+].prototype.render = function() { 	var tempStr=[]; 	var element = this.getTarget(); 	var jsonObj = this.data;     var recordData = jsonObj.RECORD_DATA; 	var compid = this.getComponentUid(); 	MPage.getCustomComp(compid).setProperty("headerSubTitle","");  //alert("Hello World"); 	tempStr.push("&lt;div&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;",this.name,"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;"); 	element.innerHTML = tempStr.join("");  };  // END [+NameSpace+] </Template><Template Name="mpt_TempCustom" Description="Custom mPage Template" Comments="0" Strings="0">Script Author: [+Author+] Program Name: [+Component mPage Name+].prg Foldername on PHX00027: [+Component mPage Folder+] CAPITALIZED FOLDERNAME [+Component mPage Folder Capitalized+] ;----------------------------------------------------------------------------  ###MPAGE TEMPLATE [DATE_TEXT] [TIME]  ###HTML SECTION FOR AIX NODE BEGIN: &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt; &lt;?xml version="1.0" encoding="UTF-8" ?&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"&gt; &lt;!-- [+Component mPage Name+].html --&gt; &lt;!-- Author: [+Author+] --&gt; &lt;!-- Creation Date: [DATE_TEXT] [TIME] --&gt;  &lt;head&gt; 	&lt;title&gt;&lt;/title&gt;     &lt;meta http-equiv="Content-Type" content="APPLINK,CCLLINK,MPAGES_EVENT,XMLCCLREQUEST,CCLLINKPOPUP,CCLNEWSESSIONWINDOW" name="discern"/&gt; 	&lt;link rel="stylesheet" type="text/css" href="\\phx00027\azbld\Custom\mpages\1bh_master_lib\css\1samt_az_css.css" /&gt; 	&lt;link rel="stylesheet" type="text/css" href="\\phx00027\azbld\Custom\mpages\[+Component mPage Folder+]\css\[+Component mPage Name+].css" /&gt;  &lt;/head&gt; &lt;body onload="javascript:RenderPage2();"&gt; &lt;h1&gt;&lt;/h1&gt; &lt;hr/&gt; &lt;div id="demo_bar"&gt;&lt;/div&gt;  &lt;a href="javascript:feedbackLink()"&gt;Feedback&lt;/a&gt; &lt;!-- ******************* --&gt; &lt;DIV id="componentPlaceHolder" class="col-group-2"&gt;&lt;!--Set class to 2 column mpage --&gt; &lt;DIV id="col1PlaceHolder" class="col1"&gt;&lt;!--Set class for 1st column on page --&gt; &lt;div id="[+Component mPage Folder+]" class="component2"&gt;&lt;/div&gt;  &lt;/DIV&gt;   &lt;DIV id="col2PlaceHolder" class="col2"&gt;&lt;!--Set class for 2nd column on page --&gt; &lt;div id="1bh_mpage_programtemplate" class="component2"&gt;&lt;/div&gt; &lt;/DIV&gt; &lt;/DIV&gt;  &lt;/body&gt; &lt;script type="text/javascript" src="\\phx00027\azbld\Custom\mpages\[+Component mPage Folder+]\js\[+Component mPage Name+].js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="\\phx00027\azbld\Custom\mpages\1bh_master_lib\js\1samt_az_javascript.js"&gt;&lt;/script&gt;   &lt;script type="text/javascript"&gt; var mpage_data_JSON = &lt;$MPAGE_DATA$&gt;; var MP_DATA = mpage_data_JSON.MPAGE_DATA; &lt;/script&gt; &lt;script type="text/javascript"&gt;  function feedbackLink() { var url="http://intranet7.bannerhealth.com/CernerFeedBack/Default.aspx?typ=1&amp;fb=[+Component mPage Folder+]"; url +="(ENCNTR_ID: $vis_encntrid$\/" url +="PERSON_ID: $pat_personid$\/" url +="PRSNL_ID: $usr_personid$)" var obj = APPLINK(100,url,""); } &lt;/script&gt; &lt;/html&gt;  ###HTML SECTION FOR AIX NODE END:  ###JAVASCRIPT SECTION BEGIN: // ---------------------------------------------------------------------------- // Script Author: [+Author+] // Program Name: [+Component mPage Name+].js // Related Files: [+Component mPage Name+].html, [+Component mPage Name+].prg // Creation Date: [DATE_TEXT] [TIME] // Last Modified: // Copyright: (c)[DATE_USER]yyyy[DATE_USER_END] // Purpose: // Request #: // ----------------------------------------------------------------------------   function Run[+Component mPage Folder+]Component() { 	var COMPONENT = new Component("[+Component mPage Folder+]", "[+Component mPage Name+]", "CCL Program Template"); 	COMPONENT.HandleSuccess = function(recordData) 	{ //The [+Component mPage Folder Capitalized+]_STRUCTURE_CNT and [+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY must be uppercase. 		var tempStr = ["&lt;h3 class='header'&gt;",this.headerName," count(",recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT,")&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;&lt;table&gt;"]; 	if(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT&gt;0) 	{ //alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT);  //BEGIN TABLE DATA 		for(var i=0,all_cnt=recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT;i&lt;all_cnt;i++) 		{ var xxyy=recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY[i].RETURNED_PERSON_ID; //alert(xxyy); 		tempStr.push("&lt;tr&gt;&lt;th&gt;Bold Column Header&lt;/th&gt;&lt;/tr&gt;"); 		tempStr.push("&lt;tr&gt;&lt;td&gt;Normal Column data&lt;/td&gt;&lt;/tr&gt;"); 		tempStr.push("&lt;tr&gt;&lt;td class='bold'&gt;Bold Column data&lt;/td&gt;&lt;/tr&gt;"); 		tempStr.push("&lt;tr&gt;&lt;td&gt;",xxyy,"&lt;/td&gt;&lt;/tr&gt;");  			alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT); 			alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY[i].RETURNED_PERSON_ID); 		}  	} 	else 	{ 	tempStr.push("&lt;tr&gt;&lt;td colspan='3' class='bold'&gt;No Data Documented&lt;/td&gt;&lt;/tr&gt;"); 	} 		tempStr.push("&lt;/table&gt;&lt;/div&gt;"); 		var aObj = SAMT_AZ._g(COMPONENT.id); 		aObj.style.display = ""; 		aObj.innerHTML = tempStr.join(""); 		this.setupToggle("E"); 		this.setupTooltips(); 	}; 	COMPONENT.HandleNoData = function(recordData) 	{ 		var aObj = SAMT_AZ._g(COMPONENT.id); 		aObj.style.display = ""; 		aObj.innerHTML = ["&lt;h3 class='header'&gt;",this.headerName,"&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;No Data Found&lt;/div&gt;"].join(""); 		this.setupToggle("E"); 	}; 	COMPONENT.HandleDataError = function(recordData) 	{ 		var aObj = SAMT_AZ._g(COMPONENT.id); 		aObj.style.display = ""; 		aObj.innerHTML = ["&lt;h3 class='header'&gt;",this.headerName,"&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;Error Retrieving Results&lt;/div&gt;"].join(""); 		this.setupToggle("E"); 	}; 	var sendArr = ["^^MINE^^",MP_DATA.PERSON_ID,MP_DATA.ENCNTR_ID]; //	alert(sendArr); 	SAMT_AZ.XMLCclRequestWrapper(COMPONENT, sendArr); }  ###JAVASCRIPT SECTION END:  ###CCL PROGRAM SECTION BEGIN: ;Script Author: [+Author+] ;Program Name: [+Component mPage Name+].prg ;Related Files: [+Component mPage Name+].html, [+Component mPage Name+].js ;Creation Date: [DATE_TEXT] [TIME] ;Last Modified: ;Copyright: (c)[DATE_USER]yyyy[DATE_USER_END] ;Purpose: ;Request #: ;Foldername on PHX00027: [+Component mPage Folder+] ;---------------------------------------------------------------------------- ;free record request go ;/*Add any fields and data type in your "record request" that your CCL will need to run.*/ ; ;record request ;( 	;1 encntr_id = i4 ;	1 per_id = i4 ;	1 enc_id = i4 ;	;1 cvalue = i4 ;) go ; ;/*Setting the request equal to the Encounter ID that will be sent from PowerChart. ;This information is manually entered here when testing. */ ; ;	set request-&gt;per_id = 123456789.00 go ;	set request-&gt;enc_id = 987654321.00 go ; ;/*The CCL that you want to execute to produce the data. */ ; ;	execute [+Component mPage Name+] "MINE", request-&gt;per_id, request-&gt;enc_id go  ;----------------------------------------------------------------------------  drop program [+Component mPage Name+]:dba go create program [+Component mPage Name+]:dba  prompt 	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to. 	, "per_id" = 0 	, "enc_id" = 0  with OUTDEV, per_id, enc_id  %i cust_script:1samt_az_common.inc ;%i cust_script:1samt_az_common_cds.inc ;PROGRAM HEADER ABOVE  /*Begin Record Structure*/ ;Record structure elements can be lowercase here but must be uppercase in your .js. free record [+Component mPage Folder+]_structure record [+Component mPage Folder+]_structure ( 1 [+Component mPage Folder+]_structure_cnt=i4 1 [+Component mPage Folder+]_structure_array[*] /*Create record structure aliases and assign the proper data type that will match the columns in your query*/ 	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_mrn = vc ; 	2 returned_fin = vc ;   %i cclsource:status_block.inc ) /*End Record Structure*/  set [+Component mPage Folder+]_structure-&gt;status_data.status ="F" set debug_ind = 1  declare fin_alias = vc declare mrn_alias = vc  select 	ea.alias  from 	encntr_alias ea  where ea.encntr_id = $enc_id;72958204.00;$enc_id; and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number detail case (ea.encntr_alias_type_cd) 	of 1077.00 : fin_alias = trim(ea.alias) 	of 1079.00 : mrn_alias = trim(ea.alias) endcase  /*Select Query Begin*/  select ;into "NL" 	p.person_id 	,p.name_full_formatted 	,e.encntr_id 	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)  from 	person p 	, encounter e  plan p where p.person_id = $per_id ;37298420.00 join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00  /*Select Query End*/  head report x=1 rec_cnt = 0 ; Setting record count to zero.  /*The "Head" section is most important part of what you are pulling from your query. Example: You could have "head p.person_id" and under that you need to return data from the query into it. */  head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column. rec_cnt=rec_cnt+1     if (size([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the foldername_structure_array array       stat= alterlist([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array, rec_cnt+10) ; this is increasing the size of the foldername_structure_array array by 10 if needed.    endif  /*Returning column data from the query into the record structure aliases*/ [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_mrn = mrn_alias [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_fin = fin_alias  foot p.person_id ;alias.fieldname | Closing the header. Same name as head. x=1 foot report x=1 stat= alterlist([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array, rec_cnt) [+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_cnt = rec_cnt with nocounter   set [+Component mPage Folder+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)  #exit_script   ;  ID for end of PRG  call ajax_reply([+Component mPage Folder+]_structure) 	; info_point (ajax_reply is a function that changes the 							;record structure to a string.  call echo(cnvtrectojson([+Component mPage Folder+]_structure)) 	; info_point (cnvtrectojson is a function that changes the 							;record structure to a JSON string and returns the string to the JS).  if (debug_ind) 	call echorecord([+Component mPage Folder+]_structure)  ;info_point (displays record structure in listing - troubleshooting) else 	free record [+Component mPage Folder+]_structure  ;info_point (clears record structure) endif  CALL log_end_script("[+Component mPage Name+]", debug_ind) ; info_point (For log files)  end go  ###CCL PROGRAM SECTION END:  ###1BH_MPAGE_HOME1.JS FILE BEGIN: function [+Component mPage Folder+](){ 		 CCLLINK("1samt_az_run_mpage","^^MINE^^,value($pat_personid$),value($vis_encntrid$),0,^^cust_html:[+Component mPage Name+].html^^",1); } ###1BH_MPAGE_HOME1.JS FILE END:  ###TESTLINK.JS FILE BEGIN: tempStr.push("&lt;p&gt;&lt;a href='javascript:[+Component mPage Folder+]();'&gt;[+Component mPage Folder+]&lt;/a&gt;&lt;/p&gt;"); ###TESTLINK.JS FILE END:  ###WINDOWS COMMAND PROMPT BEGIN: md [+Component mPage Folder+]\js [+Component mPage Folder+]\css [+Component mPage Folder+]\prg [+Component mPage Folder+]\img ###WINDOWS COMMAND PROMPT END: </Template><Template Name="mpt_mPage_ViewPoints_Audit" Description="mPage Viewpoint Audit" Comments="0" Strings="0">;Viewpoint Audit select; into $outdev viewpoint_name = cnvtupper (m.viewpoint_name ) , view_name = cnvtupper (c.category_name ) from (mp_viewpoint m ) , (mp_viewpoint_reltn r ) , (br_datamart_category c ) plan (m where (m.active_ind = 1 ) ) and (r where (r.mp_viewpoint_id = m.mp_viewpoint_id ) ) and (c where (c.br_datamart_category_id = r.br_datamart_category_id ) ) order by viewpoint_name , view_name  </Template><Template Name="mpt_OTS" Description="Changing OTS User" Comments="0" Strings="0">;Enter [+person_id+] or [+USERNAME+] select   p.username,   p.name_full_formatted,   cp.usr_person_id,	   cp.rowid,   cp.position_cd,	   position_name=uar_get_code_display(cp.position_cd),   cp.active_ind,	   cp.updt_applctx,	   cp.updt_cnt,	   cp.updt_dt_tm";;",	   cp.updt_id,	   cp.updt_task,	   cp.bh_mp_pref_id,	   cp.beg_effective_dt_tm";;",	   cp.end_effective_dt_tm";;" from 	cust_samt.cust_prsnlauthpos cp, 	prsnl p plan cp where  	cp.usr_person_id = [+person_id+]; join p where p.person_id = cp.usr_person_id order by cp.bh_mp_pref_id desc  select   p.username,   p.name_full_formatted,   cp.usr_person_id,	   cp.rowid,   cp.position_cd,	   position_name=uar_get_code_display(cp.position_cd),   cp.active_ind,	   cp.updt_applctx,	   cp.updt_cnt,	   cp.updt_dt_tm";;",	   cp.updt_id,	   cp.updt_task,	   cp.bh_mp_pref_id,	   cp.beg_effective_dt_tm";;",	   cp.end_effective_dt_tm";;" from 	cust_samt.cust_prsnlauthpos cp, 	prsnl p plan cp where  	cp.usr_person_id = (select person_id from prsnl where username = cnvtupper("[+USERNAME+]")); join p where p.person_id = cp.usr_person_id order by cp.bh_mp_pref_id desc  ;---------------------------------------------------------------------------- delete from cust_samt.cust_prsnlauthpos where usr_person_id = [+person_id+] go commit go  delete from cust_samt.cust_prsnlauthpos where usr_person_id = (select person_id from prsnl where username = cnvtupper("[+USERNAME+]")) go commit go  ;---------------------------------------------------------------------------- select * from cust_samt.cust_prsnlauthpos where usr_person_id = [+person_id+] go  select * from cust_samt.cust_prsnlauthpos  where usr_person_id = (select person_id from prsnl where username = cnvtupper("[+USERNAME+]")) </Template><Template Name="mpt_phone" Description="Erroneous data in the phone number field." Comments="0" Strings="0">select PHONE_FORMAT=uar_get_code_display(ph.phone_format_cd), PHONE_TYPE=uar_get_code_display(ph.phone_type_cd), CONTACT_METHOD_CODE=uar_get_code_display(ph.contact_method_cd), ph.phone_num, *  from phone ph  where ph.parent_entity_id =[+person_id+] ;person id and active_ind = 1 ;SR:423538790</Template><Template Name="mpt_PMP" Description="PMP NPI" Comments="0" Strings="0"> Enter: [+USERNAME+] or [+123456.00+] select p.username, p.name_full_formatted, p.person_id, alias_type_cd_display=uar_get_code_display(pa.prsnl_alias_type_cd), alias_pool_cd_display=uar_get_code_display(pa.alias_pool_cd), alias_identifier=pa.alias, pa.updt_dt_tm;, ;pa.* from 	prsnl p, 	Prsnl_alias pa plan p where 	p.person_id = [+123456.00+] join pa where p.person_id = pa.person_id and pa.prsnl_alias_type_cd = 28769904.00  and pa.alias_pool_cd = 498265387.00 and pa.active_ind = 1 with nocounter, separator="#", format, maxrec = 20 select p.username, p.name_full_formatted, p.person_id, alias_type_cd_display=uar_get_code_display(pa.prsnl_alias_type_cd), alias_pool_cd_display=uar_get_code_display(pa.alias_pool_cd), alias_identifier=pa.alias, pa.updt_dt_tm;, ;pa.* from 	prsnl p, 	Prsnl_alias pa plan p where 	p.person_id = (select person_id from prsnl where username = cnvtupper("[+USERNAME+]")) join pa where p.person_id = pa.person_id and pa.prsnl_alias_type_cd = 28769904.00  and pa.alias_pool_cd = 498265387.00 and pa.active_ind = 1 with nocounter, separator="#", format, maxrec = 20 </Template><Template Name="mpt_ProgramUsage" Description="Find how much a program is being used." Comments="0" Strings="0">;Program Usage Count/Display select into 'nl:'             c.begin_dt_tm             , c.end_dt_tm             , c.object_name             , c.object_params             , c.output_device             , c.updt_dt_tm             , c.updt_id             , p.username             , p.name_full_formatted  from             ccl_report_audit   c             , prsnl   p  plan c where cnvtupper(c.object_name) = '[+CCL PROGRAMNAME+]*' ;  and  c.updt_dt_tm &gt; sysdate - 1  join p where p.person_id = c.updt_id ;and p.username = 'prholland' with maxrec = 100 </Template><Template Name="mpt_ViewSource" Description="mPage View Source JSON" Comments="0" Strings="0">&lt;html&gt; &lt;head&gt; 	&lt;meta charset="UTF-8"&gt;   &lt;meta name="description" content="Default mPage Information"&gt;   &lt;meta name="keywords" content="UE Studio mPageViewSource.mac"&gt;   &lt;meta name="author" content="Robert Holland"&gt;   &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;  &lt;p&gt;This page requires data from three variables from the "View Source" of an mPage.&lt;br /&gt; The &lt;b&gt;"var m_viewpointJSON"&lt;/b&gt;, the &lt;b&gt;var m_criterionJSON&lt;/b&gt;, and the &lt;b&gt;"var m_mpageSettingsJSON"&lt;/b&gt;.&lt;br /&gt; &lt;hr /&gt; &lt;/p&gt; &lt;title&gt;mPage JSON Testing&lt;/title&gt; &lt;script language="javascript" src="./json2.js"&gt;&lt;/script&gt; &lt;script src="http://code.jquery.com/jquery-1.11.1.min.js"&gt;&lt;/script&gt;  &lt;/head&gt; &lt;style&gt; 	table, th, td {border-collapse:collapse; border: 1px solid black; background-color: #FFFF00}  &lt;/style&gt; &lt;body&gt; &lt;div&gt; &lt;p id="output"&gt;&lt;/p&gt;&lt;hr /&gt; &lt;/div&gt; &lt;div&gt; 	&lt;p id="output1"&gt;&lt;/p&gt;&lt;hr /&gt; &lt;/div&gt; &lt;div&gt; 	&lt;p id="output2"&gt;&lt;/p&gt;&lt;hr /&gt; &lt;/div&gt;  &lt;script&gt; //*********************************************Use mPageViewSource macro and paste JSON below here:*********************************************/    //************************************************************Paste JSON above here:************************************************************/  //JSON setup. var VP = JSON.parse(m_viewpointJSON); var viewpoint = VP.VP_INFO; var CR = JSON.parse(m_criterionJSON); var criterion = CR.CRITERION; var MP = JSON.parse(m_mpageSettingsJSON); var mpage = MP.MP_SETTINGS;  //alert(viewpoint.VIEWS.length); //alert(viewpoint.VIEWS[0].VIEW_NAME); var spc0='&amp;nbsp;&amp;nbsp;'; var spc1='&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'; var tempStr=[]; 	tempStr.push('&lt;b&gt;',viewpoint.VIEWPOINT_NAME,'&lt;/b&gt;&lt;br /&gt;'); 	tempStr.push('mPages in ',viewpoint.VIEWPOINT_NAME, ' (',viewpoint.VIEWPOINT_NAME_KEY,')&lt;br /&gt;'); for(var i=0,all_cnt=viewpoint.VIEWS.length;i&lt;all_cnt;i++){ //alert(i);  	tempStr.push(spc0,'View Name: &lt;b&gt;',viewpoint.VIEWS[i].VIEW_NAME,'&lt;/b&gt; (',viewpoint.VIEWS[i].VIEW_CAT_MEAN,')&lt;br /&gt;'); //	tempStr.push(spc1,'View Sequence: ',viewpoint.VIEWS[i].VIEW_SEQUENCE,'&lt;br /&gt;'); //	tempStr.push(spc1,'View Cat Mean: ',viewpoint.VIEWS[i].VIEW_CAT_MEAN,'&lt;br /&gt;'); //	tempStr.push(spc1,'View Cat ID: ',viewpoint.VIEWS[i].VIEW_CAT_ID,'&lt;br /&gt;'); //	tempStr.push(spc1,'User Defined IND: ',viewpoint.VIEWS[i].USER_DEFINED_IND,'&lt;br /&gt;'); //	tempStr.push(spc1,'Shown IND: ',viewpoint.VIEWS[i].SHOWN_IND,'&lt;br /&gt;'); //	tempStr.push(spc1,'Menu Item: ',viewpoint.VIEWS[i].MENU_ITEM,'&lt;br /&gt;'); //	tempStr.push(spc1,'View Type: ',viewpoint.VIEWS[i].VIEW_TYPE,'&lt;br /&gt;'); //	tempStr.push(spc1,'View Type Mean: ',viewpoint.VIEWS[i].VIEW_TYPE_MEAN,'&lt;br /&gt;'); //	tempStr.push(spc1,'Grouped View Viewpoint ID: ',viewpoint.VIEWS[i].GROUPED_VIEW_VIEWPOINT_ID,'&lt;br /&gt;&lt;br /&gt;'); //	tempStr.push(); //	tempStr.push(&lt;/ul&gt;);  document.getElementById("output").innerHTML = tempStr.join(""); }   var tempStr=[]; // 	tempStr.push('&lt;b&gt;Person NAME:&lt;/b&gt; ',criterion.PERSON_INFO.PERSON_NAME,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Person DOB:&lt;/b&gt; ',criterion.PERSON_INFO.DOB,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Person ID:&lt;/b&gt; ',criterion.PERSON_ID,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Encounter ID:&lt;/b&gt; ',criterion.ENCNTRS[0].ENCNTR_ID,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Username:&lt;/b&gt; ',criterion.USERNAME,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Personnel ID:&lt;/b&gt; ',criterion.PRSNL_ID,' (select pr.name_full_formatted from prsnl pr where pr.person_id = ',criterion.PRSNL_ID,'.00)&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Position Code:&lt;/b&gt; ',criterion.POSITION_CD,' (select cv.display from code_value cv where cv.code_value = ',criterion.POSITION_CD,'.00)&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Release Identifier:&lt;/b&gt; ',criterion.RELEASE_IDENTIFIER,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;Release Version:&lt;/b&gt; ',criterion.RELEASE_VERSION,'&lt;br /&gt;'); //	for(var i=0,all_cnt=criterion.CRITERION.length;i&lt;all_cnt;i++){ // document.getElementById("output1").innerHTML = tempStr.join(""); //}  var tempStr=[]; //	tempStr.push('m_mpageSettingsJSON&lt;br /&gt;'); for(var i=0,all_cnt=mpage.MPAGE.length;i&lt;all_cnt;i++){ //	tempStr.push(mpage.MPAGE[i].SETTINGS.C_MN,'&lt;br /&gt;'); 	tempStr.push('&lt;b&gt;',mpage.MPAGE[i].SETTINGS.BR_SET.LBL,' components:&lt;/b&gt;&lt;br /&gt;'); //	tempStr.push(mpage.MPAGE[i].SETTINGS.BR_SET.CS.length,'&lt;br /&gt;'); 	for(var j=0,all_cnt=mpage.MPAGE[i].SETTINGS.BR_SET.CS.length;j&lt;all_cnt;j++){ 		tempStr.push(spc0,mpage.MPAGE[i].SETTINGS.BR_SET.CS[j].LBL,'&lt;br /&gt;'); 	} //	tempStr.push(mpage.MPAGE[i].SETTINGS.BR_SET.CS[i].LBL,'&lt;br /&gt;'); //	tempStr.push(); //	tempStr.push(); document.getElementById("output2").innerHTML = tempStr.join(""); }  &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </Template><Template Name="mpt_UserToDBA" Description="Drop and create user as DBA" Comments="0" Strings="0">;Drop/Create User as DBA drop program user_to_dba go create program user_to_dba   prompt "MINE" = "MINE"   with outdev DROP CCLUSER [+USERNAME+] commit CREATE CCLUSER [+USERNAME+] TO DBA commit end go  </Template><Template Name="tmp_BasicHTML" Description="Basic HTML" Comments="0" Strings="0">&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;   &lt;meta charset="UTF-8"&gt;   &lt;meta name="description" content="Template HTML Document"&gt;   &lt;meta name="keywords" content="comma,separated,keywords"&gt;   &lt;meta name="author" content="Robert Holland"&gt;   &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;title&gt;&lt;/title&gt; &lt;script type="text/javascript" src="http://example.com/js/filename.js"&gt;&lt;/script&gt; &lt;link rel="stylesheet" href="http://example.com/css/filname.css" /&gt; &lt;/head&gt;  &lt;style&gt; /*common css*/ table, th, td {border-collapse:collapse; border: 1px solid black;} th {background-color:#ffff00;} tr:nth-child(even) {background: #CCC;} tr:nth-child(odd) {background: #FFF;} a:link {text-decoration: none;} a:visited {text-decoration: none;} a:hover {text-decoration: underline;} a:active {text-decoration: underline;} &lt;/style&gt;  &lt;body&gt; &lt;img src='data:image/png;base64, ' {base64 data goes here without the braces} /&gt; &lt;br /&gt;  &lt;div&gt; &lt;p&gt;Blah blah blah&lt;/p&gt;  &lt;table&gt;&lt;caption&gt;Table Caption&lt;/caption&gt; &lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt; &lt;/table&gt;  &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </Template><Template Name="tmp_BasicHTMLSort" Description="Sortable HTML table" Comments="0" Strings="0">&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;   &lt;meta charset="UTF-8"&gt;   &lt;meta name="description" content="Template HTML Document"&gt;   &lt;meta name="keywords" content="comma,separated,keywords"&gt;   &lt;meta name="author" content="Robert Holland"&gt;   &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;title&gt;&lt;/title&gt; &lt;link rel="stylesheet" href="https://cdn.datatables.net/1.10.15/css/jquery.dataTables.min.css" /&gt; &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"&gt;&lt;/script&gt; &lt;script&gt; //$(document).ready(function() { //    $('#example').DataTable(); //} ); $(document).ready(function() {     $('#example').DataTable( {         //scrollX:        '50vh', //On a small table, this will center the table data and leave the table headers left adjustes.         scrollY:        '50vh',         scrollCollapse: true,         paging:         false     } ); } ); &lt;/script&gt; &lt;/head&gt;  &lt;style&gt; /*common css*/ th {background-color:#c0c0c0;} table, th, td {border-collapse:collapse; border: 1px solid black;} a:link {text-decoration: none;} a:visited {text-decoration: none;} a:hover {text-decoration: underline;} a:active {text-decoration: underline;} &lt;/style&gt;  &lt;body&gt; &lt;img src='data:image/png;base64, ' {base64 data goes here without the braces} /&gt; &lt;br /&gt;  &lt;table id="example" class="display" width="50%"&gt;&lt;caption&gt;Table Caption&lt;/caption&gt; &lt;thead&gt; &lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt; &lt;/thead&gt; &lt;tfoot&gt; &lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt; &lt;/tfoot&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;  &lt;a href="http://example.com"&gt;Example Anchor Link&lt;/a&gt; &lt;/body&gt; &lt;/html&gt; </Template><Template Name="tmp_Blanklines" Description="Remove blank lines." Comments="0" Strings="0">Find What:    %[^t ]++[^r^n]+  Replace With:  "" (without the quotes)  Check "Regular Expressions" Select "UltraEdit" regex type.  Put cursor at top of file and run. Note: For Mac formatted-files not converted to DOS on load  the UltraEdit regular expression find string must  be "^r[^t ]++^r" and the replace string "^r"  (both without the quotes). ^ </Template><Template Name="tmp_phpMSSQLPDOconnect" Description="MSSQL PDO Connect" Comments="0" Strings="0">&lt;?php /* *Program Author: [+Author+] *Program Name: [+Program+] *Creation Date: [DATE_TEXT] [TIME] *Last Modified:   *Copyright (c)[DATE_USER]yyyy[DATE_USER_END] *Purpose:  *Request #:  */  $serverName = "MSSQL_ServerFQDN";  try { 	$handler = new PDO("sqlsrv:server=$serverName; Database=databasename", "username", "password"); 	$handler-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); //Setting the attributes for the handler that we want to see if exception error. }  catch(PDOException $e) { //Return the PDO exception and naming it $e. //	echo 'Caught'; //	die('Sorry database problem.'); //Production message. 	echo $e-&gt;getMessage(); //Show specific error message. Development. }  $query0 = $handler-&gt;query('select * from databasename'); //ONE: Output each column as row of data. //	while($r = $query0-&gt;fetch()) { //		echo $r[1] //		, ' ', $r[2] //		, ' ', $r[3] //		, ' ', $r[4] //		, ' ', $r[5] //		, ' ', $r[6] //		, ' ', $r[7] //		, ' ', $r[8] //		, ' ', $r[9] //		, ' ', $r[10] //		, ' ', $r[11] //		, ' ', $r[12] //		, ' ', $r[13] //		, ' ', $r[14] //		, ' ', $r[15] //		, ' ', $r[16] //		, ' ', $r[17] //		, ' ', $r[18] //		, ' ', $r[19] //		, ' ', $r[20] //		, ' ', $r[21] //		, '\r\n'; //	}  //TWO: Prints one array. //	$r = $query0-&gt;fetch(PDO::FETCH_ASSOC); //Will fetch the associative array only. //	echo '&lt;pre&gt;', print_r($r), '&lt;/pre&gt;';  //THREE: Column 1 followed by dashes. //	foreach($query0 as $r){ //		echo $r[0] . "-----"; // //	}  //FOUR: Not sure what I was doing here. //	foreach($query0 as $key =&gt; $r){ //		$out = array_values($r); //		echo json_encode($out); //}  //FIVE: Proper JSON. 	$r = $query0-&gt;fetchAll(PDO::FETCH_ASSOC); 	//echo '&lt;pre&gt;', print_r($r), '&lt;/pre&gt;'; 	echo json_encode($r); ?&gt; </Template><Template Name="tmp_phpMySQLconnect" Description="PHP MySQL connect" Comments="0" Strings="0">&lt;?php  /* *Program Author: [+Author+] *Program Name: [+Program+] *Creation Date: [DATE_TEXT] [TIME] *Last Modified:   *Copyright (c)[DATE_USER]yyyy[DATE_USER_END] *Purpose:  *Request #:  */ //----------------------------------------------------------------------------  //database server  define('db_server', 'database_servername');   //user, password, and database variables    $db_user = '[+database_username+]';  $db_password = '[+database_userpassword+]';  $db_dbname = '[+database_name+]';    //echo $q;  $con = mysql_connect($db_server, $db_user, $db_password);   if (!$con)    {     	die('Could not connect: ' . mysql_error());     	}   	mysql_select_db($db_dbname, $con);   ?&gt; </Template><Template Name="tmp_phpMySQLiconnect" Description="PHP MySQLi Connect" Comments="0" Strings="0">&lt;?php //Program Author: [+Author+]  //Program Name: [+connect.php+]  //Creation Date: [DATE_TEXT] [TIME]  //Last Modified:  //Purpose: //Request #:  //----------------------------------------------------------------------------  //MySQLi Connect   $db_server = '[+database_servername+]';  $db_user = '[+database_username+]';  $db_password = '[+database_userpassword+]';  $db_dbname = '[+database_name+]';    $con = mysqli_connect($db_server, $db_user, $db_password, $db_dbname); if(!$con){  die("Failed to connect to the database: " . mysqli_error($con));  } if (mysqli_connect_errno()){  die("Error data : " . mysqli_connect_errno()." : ". mysqli_connect_error());  }  //else { //echo "Connected successfully! &lt;br /&gt;\r\n"; //} ?&gt;</Template><Template Name="tmp_phpMySQLPDOconnect" Description="MySQL PDO Connect" Comments="0" Strings="0">&lt;?php  //Program Author: [+Author+]  //Program Name: [+connect.php+]  //Creation Date: [DATE_TEXT] [TIME]  //Last Modified:  //Purpose:  //Request #:  //----------------------------------------------------------------------------  //PDO connect try {  	$handler = new PDO('mysql:host=[+servername+]; dbname=[+databasename+]', '[+dbusername+]', '[+dbpassword+]');  	$handler-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);  }   catch(PDOException $e) { //Return the PDO exception "$e".   	//die('Sorry database problem.'); //Production message.  	echo $e-&gt;getMessage(); //Show specific error message. Development.  }    //No carriage return after the end. It screws up header information when included.  ?&gt;</Template><Template Name="tmp_phpMySQLPDOInsert" Description="MySQL PDO Insert" Comments="0" Strings="0">// ---------------------------------------------------------------------------- //Program Author: [+Author+] //Program Name: [+Program+] //Creation Date: [DATE_TEXT] [TIME] //Last Modified:   //Copyright (c)[DATE_USER]yyyy[DATE_USER_END] //Purpose:  //Request #:  // ----------------------------------------------------------------------------  &lt;?php include('[+connect.php+]');  $fname = htmlentities($_POST['firstname']); $mname = htmlentities($_POST['middlename']); $lname = htmlentities($_POST['lastname']); $bdate = htmlentities($_POST['birthdate']);  $stmt = $handler-&gt;prepare("insert into test (firstname, middlename, lastname, birthdate) values (:firstname, :middlename, :lastname, :birthdate);"); $stmt-&gt;bindParam(':firstname', $fname); $stmt-&gt;bindParam(':middlename', $mname); $stmt-&gt;bindParam(':lastname', $lname); $stmt-&gt;bindParam(':birthdate', $bdate); $stmt-&gt;execute(); //header('Location: ../index.php'); ?&gt;</Template><Template Name="tmp_phpMySQLPDOOutput" Description="PHP MySQL PDO Output" Comments="0" Strings="0">&lt;?php //Program Author: [+Author+] //Program Name: [+Program+] //Creation Date: [DATE_TEXT] [TIME] //Last Modified:   //Copyright (c)[DATE_USER]yyyy[DATE_USER_END] //Purpose:  //Request #:  //---------------------------------------------------------------------------- //MySQL PDO Output  require('[+pdoconnect.php+]'); //$statement = $handler-&gt;prepare("select * from thetablename order by id;");   $statement = $handler-&gt;prepare("select this from that order by this_id; ");  $statement-&gt;execute(); //Run the prepared query. Prevents MySQL injection.  $RowCount = $statement-&gt;rowCount(); //Count the number of rows returned.  //Send records to HTML table in browser. echo " &lt;html&gt; &lt;head&gt; 	&lt;script type='text/javascript' src='../js/jquery-1.11.3.js'&gt;&lt;/script&gt; 	&lt;script type='text/javascript' src='js/custom.js'&gt;&lt;/script&gt; &lt;/head&gt; &lt;style&gt; 	th {text-align: left; background-color: #d0e4fe;} 	table, th, td {border-collapse:collapse; border: 1px solid black;}  /* Tooltip container */ .tooltip {     position: relative;     display: inline-block; /*     border-bottom: 1px dotted black;  If you want dots under the hoverable text */ }  /* Tooltip text */ .tooltip .tooltiptext {     visibility: hidden;     width: 120px;     background-color: black;     color: #fff;     text-align: center;     padding: 5px 0;     border-radius: 6px;      /* Position the tooltip text - see examples below! */     position: absolute;     z-index: 1; }  /* Show the tooltip text when you mouse over the tooltip container */ .tooltip:hover .tooltiptext {     visibility: visible; } &lt;/style&gt;  &lt;body&gt; &lt;table id='us_states' class='tablesorter'&gt; &lt;thead&gt; &lt;tr&gt; 	&lt;th&gt;&lt;/th&gt; 	&lt;th&gt;State&lt;/th&gt; 	&lt;th&gt;Capital&lt;/th&gt; 	&lt;th&gt;Date Formed&lt;/th&gt; 	&lt;th&gt;Size&lt;/th&gt; 	&lt;th&gt;Edit&lt;/th&gt; &lt;tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; ";  			while($r = $statement-&gt;fetch(PDO::FETCH_OBJ)){ 			$id_column = $r-&gt;id; 			$state_column = $r-&gt;state; 			$capital_column = $r-&gt;capital; 			$date_formed_column = $r-&gt;date_formed; 			$statedata_column = $r-&gt;data; 			$sq_miles_column = $r-&gt;sq_miles; 			echo "&lt;tr&gt;&lt;td&gt;" . $id_column . "&lt;/td&gt; 			&lt;td&gt;" . $state_column . "&lt;/td&gt; 			&lt;td&gt;" . $capital_column . "&lt;/td&gt; 			&lt;td class='tooltip'&gt;&lt;span class='tooltiptext'&gt;" . $statedata_column . "&lt;/span&gt;" . $date_formed_column . "&lt;/td&gt; 			&lt;td&gt;" . number_format($sq_miles_column) . " sqm.&lt;/td&gt; 			&lt;td&gt;&lt;input type='radio' name='edit' id='" . $id_column . "'&gt;&lt;/td&gt; 			&lt;/tr&gt;"; 			}  echo "&lt;/tbody&gt;&lt;/table&gt; &lt;!-- &lt;div class='tooltip'&gt;Hover over me   &lt;span class='tooltiptext'&gt;Tooltip text&lt;/span&gt; &lt;/div&gt; --&gt; ";  ?&gt;</Template><Template Name="tmp_rhts" Description="Timestamp" Comments="0" Strings="0">[DATE_TEXT] [TIME] </Template><Template Name="tmpTest" Description="" Comments="0" Strings="0">;Program Author: [+Author+] ;Program Name: 1bh_mpage_[+NameSpace+].prg ;Uppercase Bedrock View Identifier: [+UppercaseNameSpace+] ;Creation Date: [DATE_TEXT] [TIME] ;Last Modified: ;Copyright: (c) [DATE_TEXT] ;Purpose: ;Request #: ;Namespace: banner.[+NameSpace+] ;---------------------------------------------------------------------------- ;free record request go ;/*Add any fields and data type in your "record request" that your CCL will need to run.*/ ; ;record request ;( 	;1 encntr_id = i4 ;	1 per_id = i4 ;	1 enc_id = i4 ;	;1 cvalue = i4 ;) go ; ;/*Setting the request equal to the Encounter ID that will be sent from PowerChart. ;This information is manually entered here when testing. */ ; ;	set request-&gt;per_id = 123456789.00 go ;	set request-&gt;enc_id = 987654321.00 go ; ;/*The CCL that you want to execute to produce the data. */ ; ;	execute 1bh_mpage_[+NameSpace+] "MINE", request-&gt;per_id, request-&gt;enc_id go  ;----------------------------------------------------------------------------  drop program 1bh_mpage_[+NameSpace+]:dba go create program 1bh_mpage_[+NameSpace+]:dba  prompt 	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to. 	, "per_id" = 0 	, "enc_id" = 0  with OUTDEV, per_id, enc_id  %i cust_script:1samt_az_common.inc ;%i cust_script:1samt_az_common_cds.inc ;PROGRAM HEADER ABOVE  /*Begin Record Structure*/ ;Record structure elements can be lowercase here but must be uppercase in your .js. free record [+NameSpace+]_structure record [+NameSpace+]_structure ( 1 [+NameSpace+]_structure_cnt=i4 1 [+NameSpace+]_structure_array[*] /*Create record structure aliases and assign the proper data type that will match the columns in your query*/ 	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement. 	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement. 	2 returned_mrn = vc ; 	2 returned_fin = vc ;   %i cclsource:status_block.inc ) /*End Record Structure*/  set [+NameSpace+]_structure-&gt;status_data.status ="F" set debug_ind = 1  declare fin_alias = vc declare mrn_alias = vc  select 	ea.alias  from 	encntr_alias ea  where ea.encntr_id = $enc_id;72958204.00;$enc_id; and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number detail case (ea.encntr_alias_type_cd) 	of 1077.00 : fin_alias = trim(ea.alias) 	of 1079.00 : mrn_alias = trim(ea.alias) endcase  /*Select Query Begin*/  select ;into "NL" 	p.person_id 	,p.name_full_formatted 	,e.encntr_id 	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)  from 	person p 	, encounter e  plan p where p.person_id = $per_id ;37298420.00 join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00  /*Select Query End*/  head report x=1 rec_cnt = 0 ; Setting record count to zero.  /*The "Head" section is most important part of what you are pulling from your query. Example: You could have "head p.person_id" and under that you need to return data from the query into it. */  head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column. rec_cnt=rec_cnt+1     if (size([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the [+NameSpace+]_structure_array array       stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt+10) ; this is increasing the size of the [+NameSpace+]_structure_array array by 10 if needed.    endif  /*Returning column data from the query into the record structure aliases*/ [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_mrn = mrn_alias [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_fin = fin_alias  foot p.person_id ;alias.fieldname | Closing the header. Same name as head. x=1 foot report x=1 stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt) [+NameSpace+]_structure-&gt;[+NameSpace+]_structure_cnt = rec_cnt with nocounter  set [+NameSpace+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)  #exit_script   ;  ID for end of PRG  call ajax_reply([+NameSpace+]_structure) 	; info_point (ajax_reply is a function that changes the 							;record structure to a string.  call echo(cnvtrectojson([+NameSpace+]_structure)) 	; info_point (cnvtrectojson is a function that changes the 							;record structure to a JSON string and returns the string to the JS).  if (debug_ind) 	call echorecord([+NameSpace+]_structure)  ;info_point (displays record structure in listing - troubleshooting) else 	free record [+NameSpace+]_structure  ;info_point (clears record structure) endif  CALL log_end_script("1bh_mpage_[+NameSpace+]", debug_ind) ; info_point (For log files)  end go  /*JS NAMESPACE BELOW*/ //BEGIN [+NameSpace+] /** * Project: * Version: 1.0 * Released:	Tuesday, October 25, 2016 18:21:03 * Updated: * Purpose: * @author: [+Author+] * Request#: */  MPage.namespace("banner"); banner.[+NameSpace+] = function(){}; banner.[+NameSpace+].prototype = new MPage.Component(); banner.[+NameSpace+].prototype.constructor = MPage.Component(); banner.[+NameSpace+].prototype.base = MPage.Component.prototype; banner.[+NameSpace+].prototype.name = "banner.[+NameSpace+]"; banner.[+NameSpace+].prototype.cclProgram = "1bh_mpage_[+NameSpace+]"; banner.[+NameSpace+].prototype.cclParams = []; banner.[+NameSpace+].prototype.cclDataType = "JSON";  banner.[+NameSpace+].prototype.init = function(options) { //	// Check cookie for param update //	if(readCookie("bldgltframe") == null){ //		createCookie("bldgltframe","72,H",1); //	}  	var params = []; 	params.push("mine"); 	params.push(this.getProperty("personId")); 	params.push(this.getProperty("encounterId")); //	params.push(readCookie("bldgltframe")); 	params.push(300); 	this.cclParams = params; };  banner.[+NameSpace+].prototype.render = function() { 	var tempStr=[]; 	var element = this.getTarget(); 	var jsonObj = this.data;     var recordData = jsonObj.RECORD_DATA; 	var compid = this.getComponentUid(); 	MPage.getCustomComp(compid).setProperty("headerSubTitle","");  //alert("Hello World"); 	tempStr.push("&lt;div&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;",this.name,"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;"); 	element.innerHTML = tempStr.join("");  };  // END [+NameSpace+]  //BEGIN 1bh_mpage_home1.js  $("#mainTable_Testing tbody").append("&lt;tr style='height:30px'&gt;&lt;td&gt;&lt;a href='javascript:[+NameSpace+]();'&gt;[+NameSpace+]&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;");  //END 1bh_mpage_home1.js  //Begin testlink.js  function [+NameSpace+](){ 	CCLLINK("mp_unified_driver","^^MINE^^,value($PAT_PERSONID$),value($VIS_ENCNTRID$),value($USR_PERSONID$),value($USR_PositionCd$),value($PAT_PPRCode$) ,^^$APP_AppName$^^,^^^^,^^VB_[+UppercaseNameSpace+]^^",1); //Bedrock view identifier }  //End testlink.js ^</Template><Template Name="tmp_MySQLDBUser" Description="Create MySQL DB user and password." Comments="0" Strings="0">/* -- Create local user. //Database Username: [+dbusername+] //Database Password: [+dbpassword+] //---------------------------------------------------------------------------- */  -- Create local user. CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]'; -- Create remote user. CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]'; -- Tell the server to reload the GRANT TABLES. FLUSH PRIVILEGES; </Template><Template Name="tmp_MySQLDBUserandDatabase" Description="Create MySQL DB user and database." Comments="0" Strings="0">/* -- Create user and database with the same name. //Database Username: [+dbusername+] //Database Password: [+dbpassword+] //---------------------------------------------------------------------------- */  CREATE DATABASE [+dbusername+]; -- Create local user. CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]'; GRANT ALL PRIVILEGES ON [+dbusername+].* TO '[+dbusername+]'@'localhost' WITH GRANT OPTION; -- Create remote user. CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]'; GRANT ALL PRIVILEGES ON [+dbusername+].* TO '[+dbusername+]'@'%' WITH GRANT OPTION; -- Tell the server to reload the GRANT TABLES. FLUSH PRIVILEGES; </Template><Template Name="tmp_MySQLDBUserDBAccess" Description="Create MySQL DB user and grant access to existing DB." Comments="0" Strings="0">/* --Create user and grant access to database. //Database Username: [+dbusername+] //Database Password: [+dbpassword+] //Database Name: [+dbname+] //---------------------------------------------------------------------------- */  -- Create local user. CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]'; GRANT ALL PRIVILEGES ON [+dbname+].* TO '[+dbusername+]'@'localhost' WITH GRANT OPTION; -- Create remote user. CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]'; GRANT ALL PRIVILEGES ON [+dbname+].* TO '[+dbusername+]'@'%' WITH GRANT OPTION; -- Tell the server to reload the GRANT TABLES. FLUSH PRIVILEGES;</Template><Template Name="tmp_MySQLDBPasswordChange" Description="Change MySQL password for user." Comments="0" Strings="0">/* -- Change user password. -- Find current user: SELECT CURRENT_USER(); //Database Username: [+dbusername+] //Database Password: [+dbpassword+] //---------------------------------------------------------------------------- */  use mysql; -- Method 1 (Deprecated): update mysql.user set password('[+dbpassword+]') where user = '[+dbusername+]'; FLUSH PRIVILEGES;  -- Method 2 (MySQL 5.7+): update mysql.user set authentication_string=PASSWORD('[+dbpassword+]') where user='[+dbusername+]'; FLUSH PRIVILEGES;  -- Method 3 (Preferred method for current user.): alter user set password = '[+dbpassword+]'; FLUSH PRIVILEGES;  -- MySQL 5.7: alter user '[+dbusername+]'@'localhost' identified by '[+dbpassword+]'; alter user '[+dbusername+]'@'%' identified by '[+dbpassword+]';  -- Method 4 (Preferred method for another user.): alter user set password for '[+dbusername+]'@'localhost' = '[+dbpassword+]'; FLUSH PRIVILEGES;  -- Remote user password change: alter user set password for '[+dbusername+]'@'%' = '[+dbpassword+]'; FLUSH PRIVILEGES;  -- ALTER USER EXAMPLES == ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.  -- This worked for me from the MySQL DB prompt: 	SET PASSWORD = PASSWORD('[+dbpassword+]'); -- Source: http://stackoverflow.com/questions/33467337/reset-mysql-root-password-using-alter-user-statement-after-install-on-mac  -- This syntax enables changing your own password without naming your account literally. 	ALTER USER USER() IDENTIFIED BY '[+dbusername+]';  -- This statement changes the password for [+dbusername+] but leaves that for someother[+dbusername+] unchanged.  -- For both accounts, connections are required to use SSL and each account can be used for a maximum of two simultaneous connections: 	ALTER USER   	'[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]',   	'someother[+dbusername+]'@'localhost'   	REQUIRE SSL WITH MAX_USER_CONNECTIONS 2;  -- Example 1: Change an account's password and expire it. As a result, the user must connect with the named password and choose a new one at the next connection: 	ALTER USER '[+dbusername+]'@'localhost'   	IDENTIFIED BY '[+dbpassword+]' PASSWORD EXPIRE;  -- Example 2: Modify an account to use the sha256_password authentication plugin and the given password. Require that a new password be chosen every 180 days: 	ALTER USER '[+dbusername+]'@'localhost'   	IDENTIFIED WITH sha256_password BY '[+dbpassword+]'  (SHA256 may require an SSL connection on some systems)   	PASSWORD EXPIRE INTERVAL 180 DAY;  -- Example 3: Lock or unlock an account: 	ALTER USER '[+dbusername+]'@'localhost' ACCOUNT LOCK; 		ALTER USER '[+dbusername+]'@'localhost' ACCOUNT UNLOCK;  -- Example 4: Require an account to connect using SSL and establish a limit of 20 connections per hour: 	ALTER USER '[+dbusername+]'@'localhost'   	REQUIRE SSL WITH MAX_CONNECTIONS_PER_HOUR 20; -- http://dev.mysql.com/doc/refman/5.7/en/alter-user.html </Template><Template Name="tmp_MySQLFKReferences" Description="Display MySQL foreign key references." Comments="0" Strings="0">-- To run from the command prompt type: -- mysql -u rob -p &lt; display_foreign_key_references.sql &gt; current_fk_refs.txt  use information_schema; select  	concat(table_schema,'.',table_name,'.',column_name) as this_db_table_and_column, 	concat(table_schema,'.',referenced_table_name,'.',referenced_column_name) as references_this_db_table_and_column, 	constraint_name from key_column_usage where referenced_table_name is not null order by this_db_table_and_column;  -- The order by clause may not work on all DB's. If there is an error remove it and run again.  -- Same query but this one shows the cascade rules. use information_schema; select 	concat(kcu.table_schema,'.',kcu.table_name,'.',kcu.column_name) as this_db_table_and_column, 	concat(kcu.table_schema,'.',kcu.referenced_table_name,'.',kcu.referenced_column_name) as references_this_db_table_and_column, 	kcu.constraint_name, 	rc.update_rule, 	rc.delete_rule from 	key_column_usage kcu join referential_constraints rc on (rc.constraint_name= kcu.constraint_name) where kcu.referenced_table_name is not null order by this_db_table_and_column;  -- The order by clause may not work on all DB's. If there is an error remove it and run again.  -- On Tracy's Ubuntu MySQL server I got this error message: Unknown column 'kcu.TABLE_SCHEMA' in 'field list' because the alias in the from clause was in uppercase and lowercase in the select portion.  -- This is a quick way to view all of the contraints: select * from information_schema.referential_constraints;  -- This is a quick way to view constraints from a specific database: select * from information_schema.referential_constraints where constraint_schema = 'thedatabasename'; </Template><Template Name="tmp_Shell" Description="Common AIX/Linux shell stuff" Comments="0" Strings="0">#WHILE loop i=1 while [[ $i -le 10 ]] do   echo "Searching Node $i: "   ssh rholland@pcma"$i"p.bdcm.bannerhealth.com "ls -al /cerner/w_custom/ cust_wh/code/$1/$2"   # echo "$i"    let i=i+1 done  #FOR Loop for file in *.txt do  	cat $file &gt;&gt; OneBigFile.txt done  #AIX Array: set -A profileup 2 3 4 5 6 7 8 9 10 for i in ${profileup[@]} do echo "Updating .profile on pcma${i}: " scp ~/.profile rholland@pcma"$i"p.bdcm.bannerhealth.com:~/ #echo "$i" done  LINUX Array: rho_hosts=(2 3 4 5 6 7 8 9 10 11 12 19 20 22) #Skipping Node 1 in the array for i in ${rho_hosts[@]} do   echo "Updating .bashrc on samtazapp${i}: "   scp ~/.bashrc rholland@samtazapp"$i":~/ #  #echo "$i" done  Make Dummy Files: dummyfiles(){ if [ $# -eq 0 ] then echo "dummyfiles 30" else #printf '%s ' {1..$1}.txt |xargs touch for ((i=1; i&lt;=$1; i++)); do : &gt;&gt; dummyfile_"$i".txt; done fi } functionname(){ if [ $# -eq 0 ] then echo "Message" else case $1 in 	argument1) 		echo "Doing something" 		Do Something 	;; 	argument2) 		echo "Doing something" 		Do Something 	;; 	argument3) 		echo "Doing something" 		Do Something 	;; 	argument4) 		echo "Doing something" 		Do Something 	;; 	*) 		message00="The message" 		echo $message00 	;; esac fi } </Template><Template Name="tmp_shutdown" Description="Shutdown Windows" Comments="0" Strings="0">[+TargetComputer+] [+incident+] Old School: shutdown -m \\[+TargetComputer+] -r -t 0 -f &amp; ping [+TargetComputer+] -t runas /noprofile /user:BHS\a-rlholland "shutdown -m \\[+TargetComputer+] -r -t 0 -f" &amp; ping [+TargetComputer+] -t  New School: shutdown /m \\[+TargetComputer+] /c "[+incident+]" /d p:4:1 /r /t 0 /f &amp; ping [+TargetComputer+] -t runas /noprofile /user:BHS\a-rlholland "shutdown /m \\[+TargetComputer+] /c "[+incident+]" /d p:4:1 /r /t 0 /f" &amp; ping [+TargetComputer+] -t  From Administrator Command Prompt: net use A: \\[+TargetComputer+]\c$ ^</Template></Templates>
