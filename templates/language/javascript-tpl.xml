<?xml version="1.0"?>
<Templates encode="utf8escenc"><Template Name="alert" Description="" Comments="0" Strings="0">alert("[+Alert text+]");</Template><Template Name="else" Description="">else {&#xD;&#xD;
	^&#xD;&#xD;
}</Template><Template Name="elseif" Description="">else if ([+evaluation+]) &#xD;&#xD;
	^&#xD;&#xD;
}</Template><Template Name="finally" Description="">finally {&#xD;&#xD;
	^&#xD;&#xD;
}</Template><Template Name="for" Description="">for ([+i+] = [+X+]; [+i+] &lt; [+Y+]; [+i+]++) {&#xD;&#xD;
	^ // code to be executed&#xD;&#xD;
}</Template><Template Name="function" Description="">function [+funcName+] ([+params+]) {&#xD;&#xD;
	^&#xD;&#xD;
}</Template><Template Name="if" Description="">if ([+evaluation+]) {&#xD;&#xD;
	^&#xD;&#xD;
}</Template><Template Name="isEven" Description="">  function isEven(n) {&#xD;&#xD;
     return n % 2 == 0;&#xD;&#xD;
  }&#xD;&#xD;
</Template><Template Name="isOdd" Description="" Comments="0" Strings="0">  function isOdd(n) {&#xD;&#xD;
     return Math.abs(n % 2) == 1;&#xD;&#xD;
  }</Template><Template Name="switch" Description="">switch ([+expression+]) {&#xD;&#xD;
	case [+value+]:&#xD;&#xD;
		^ // statements&#xD;&#xD;
	break;&#xD;&#xD;
	default:&#xD;&#xD;
		// default statements&#xD;&#xD;
}</Template><Template Name="try" Description="">try {&#xD;&#xD;
	^ // code to try&#xD;&#xD;
} catch (e) {&#xD;&#xD;
	// handle errors here&#xD;&#xD;
}</Template><Template Name="while" Description="">while ([+evaluation+]) {&#xD;&#xD;
	^ // code to be executed&#xD;&#xD;
}</Template></Templates>
