<?xml version="1.0"?>
<Templates encode="utf8escenc"><Template Name="mpt_ApplicationPrefs" Description="The page was unable to load successfully only for one user" Comments="0" Strings="0">;Page was unable to load successfully error.&#xD;
;[+USERNAME+] [+VIEWNAME+] - Example viewname: VWP|EDNURSINGVIEW&#xD;
select distinct&#xD;
n.parent_entity_id&#xD;
,n.pvc_value&#xD;
,n.name_value_prefs_id&#xD;
,a.application_number&#xD;
,n.pvc_name&#xD;
from&#xD;
app_prefs a&#xD;
,name_value_prefs n&#xD;
plan a&#xD;
where a.prsnl_id = (select person_id from prsnl p where p.username = cnvtupper("[+USERNAME+]"))&#xD;
join n&#xD;
where n.parent_entity_id = a.app_prefs_id&#xD;
and n.parent_entity_name = "APP_PREFS"&#xD;
;;and cnvtupper(n.pvc_name) = "VWP|EDNURSINGVIEW"&#xD;
and cnvtupper(n.pvc_name) = "[+VIEWNAME+]"; Comment this line to see all view names (n.pvc_name) associated with the username.&#xD;
order by n.pvc_name, n.parent_entity_id, n.sequence&#xD;
&#xD;
delete&#xD;
from&#xD;
name_value_prefs n&#xD;
where n.parent_entity_id in (6839964849.00)&#xD;
and n.parent_entity_name = "APP_PREFS"&#xD;
and n.pvc_name = "[+VIEWNAME+]"&#xD;
go&#xD;
commit go&#xD;
^</Template><Template Name="mpt_Canned_Components" Description="Show canned components" Comments="0" Strings="0">select; into $outdev&#xD;
	cname = cnvtupper (c.category_name )&#xD;
	, c.br_datamart_category_id&#xD;
	, c.category_name&#xD;
	, c.category_mean&#xD;
	, c.layout_flag&#xD;
	, br.report_mean&#xD;
	, br.report_name&#xD;
	, br.report_seq&#xD;
&#xD;
from&#xD;
	br_datamart_category   c&#xD;
	, br_datamart_report   br&#xD;
	, br_datamart_report_filter_r   bfr&#xD;
	, br_datamart_filter   bf&#xD;
&#xD;
plan c where c.br_datamart_category_id &gt; 0&#xD;
join  br&#xD;
where br.br_datamart_category_id = c.br_datamart_category_id&#xD;
join bfr&#xD;
where bfr.br_datamart_report_id = br.br_datamart_report_id&#xD;
join bf&#xD;
where bf.br_datamart_filter_id = bfr.br_datamart_filter_id&#xD;
 and bf.filter_category_mean ="mp_sect_params"&#xD;
order by&#xD;
	cname&#xD;
	, bf.filter_seq&#xD;
&#xD;
</Template><Template Name="mpt_CheckCustomTables" Description="Check custom tables." Comments="0" Strings="0">;select * from cust_samt.bhs_mp_data_seq&#xD;
select * from cust_samt.cust_hcc_documentation with maxrec = 100;&#xD;
select * from cust_samt.cust_hcc_preferences with maxrec = 100;&#xD;
select * from cust_samt.cust_mig_meds with maxrec = 100;&#xD;
select * from cust_samt.cust_mpage_utilization with maxrec = 100;&#xD;
select * from cust_samt.cust_mp_pref with maxrec = 100;&#xD;
select * from cust_samt.cust_prsnlauthpos with maxrec = 100;&#xD;
^</Template><Template Name="mpt_CheckSequence" Description="Check table sequence." Comments="0" Strings="0">;cust_samt.cust_hcc_documentation table.&#xD;
declare mp_next_id = f8&#xD;
go&#xD;
  select into "nl:"&#xD;
    seq_id = seq(cust_hcc_documentation_seq,nextval)&#xD;
  from dual&#xD;
  detail&#xD;
    mp_next_id = seq_id&#xD;
  with nocounter&#xD;
go&#xD;
call echo(mp_next_id)&#xD;
go&#xD;
&#xD;
;cust_samt.cust_prsnlauthpos table&#xD;
declare bhmp_next_id = f8&#xD;
go&#xD;
select into "nl:"&#xD;
bhmp_next_id2 = seq(BHS_MP_DATA_SEQ,nextval)&#xD;
from dual&#xD;
detail&#xD;
bhmp_next_id = bhmp_next_id2&#xD;
with nocounter&#xD;
go&#xD;
call echo(bhmp_next_id)&#xD;
go&#xD;
^&#xD;
create table custom.cust_prsnlauthpos&#xD;
(&#xD;
	bh_mp_pref_id number not null,&#xD;
	usr_person_id number not null,&#xD;
	position_cd number not null,&#xD;
	active_ind number DEFAULT 1 not null,&#xD;
	updt_applctx  number DEFAULT 0,&#xD;
	updt_cnt number DEFAULT 0,&#xD;
	updt_dt_tm  DATE DEFAULT SYSDATE,&#xD;
	updt_id number DEFAULT 1,&#xD;
	updt_task number DEFAULT 99999,&#xD;
	bh_mp_pref_id number not null,&#xD;
	beg_effective_dt_tm date default sysdate,&#xD;
	end_effective_dt_tm date default sysdate&#xD;
	constraint cust_pk_prsnlauthpos primary key(bh_mp_pref_id)&#xD;
);&#xD;
^</Template><Template Name="mpt_FindComponent" Description="" Comments="0" Strings="0">select  DISTINCT INTO "NL:"&#xD;
	mPage_Name=bdc.category_name,&#xD;
	mPage_Layout =&#xD;
if (bdc.layout_flag = 0 )	"Summary"&#xD;
elseif(bdc.layout_flag = 1)	"Workflow" endif,&#xD;
	bdc.category_mean ,&#xD;
	bdv.mpage_param_value,&#xD;
	bdf.filter_mean ,&#xD;
	bdf.filter_seq,&#xD;
	bdc.layout_flag,&#xD;
	;bdc.*&#xD;
	;bdv.*&#xD;
	bdf.*&#xD;
from BR_DATAMART_CATEGORY BDC, br_datamart_value bdv,  br_datamart_filter bdf&#xD;
where bdc.br_datamart_category_id = bdv.br_datamart_category_id&#xD;
and bdv.mpage_param_value = "[+ComponentName+]"&#xD;
and bdf.br_datamart_filter_id = bdv.br_datamart_filter_id&#xD;
order by bdc.category_name, bdc.layout_flag&#xD;
&#xD;
</Template><Template Name="mpt_FindmPageVersion" Description="Find mPage Version" Comments="0" Strings="0">select Base_Group = info_char&#xD;
from dm_info&#xD;
where info_domain = "INS"&#xD;
and info_name in ("MP_BASE_GROUP","WKLIST_BASE_GROUP")&#xD;
^</Template><Template Name="mpt_FindmPageViewPoints" Description="mPage Viewpoint Audit" Comments="0" Strings="0">;Viewpoint Audit&#xD;
select; into $outdev&#xD;
viewpoint_name = cnvtupper (m.viewpoint_name ) ,&#xD;
view_name = cnvtupper (c.category_name ),&#xD;
Blackbird_Line_5 = c.category_mean&#xD;
from (mp_viewpoint m ) ,&#xD;
(mp_viewpoint_reltn r ) ,&#xD;
(br_datamart_category c )&#xD;
plan (m&#xD;
where (m.active_ind = 1 ) )&#xD;
and (r&#xD;
where (r.mp_viewpoint_id = m.mp_viewpoint_id ) )&#xD;
and (c&#xD;
where (c.br_datamart_category_id = r.br_datamart_category_id ) )&#xD;
order by viewpoint_name ,&#xD;
view_name&#xD;
&#xD;
</Template><Template Name="mpt_FindNameSpace" Description="Find NameSpace" Comments="0" Strings="0">;Find mPages using a specific namespace&#xD;
;br_datamart_value.parent_entity_id is the code_value.&#xD;
select&#xD;
	mPage_name = bdc.category_name; mPage_name&#xD;
	, Component_Name = bdv.mpage_param_value; Component_Name&#xD;
	, Namespace = bdv.freetext_desc; banner.namespace&#xD;
	, View_Builder_Name = bdc.category_mean; view_builder_name&#xD;
	, bdv.br_datamart_filter_id&#xD;
	, bdv.br_datamart_value_id; plus 1 = component_name&#xD;
	, bdv.br_datamart_category_id&#xD;
from&#xD;
	BR_DATAMART_VALUE bdv;BR_DATAMART_VALUE_ID (PK)&#xD;
	, BR_DATAMART_CATEGORY   BDC&#xD;
plan bdv where bdv.freetext_desc like "banner.[+NameSpace+]"&#xD;
join bdc where bdc.br_datamart_category_id = bdv.br_datamart_category_id&#xD;
order by mpage_name&#xD;
&#xD;
;Find mPages using a "banner." namespace&#xD;
select&#xD;
	mPage_name = bdc.category_name; mPage_name&#xD;
	, Component_Name = bdv.mpage_param_value; Component_Name&#xD;
	, Namespace = bdv.freetext_desc; banner.namespace&#xD;
	, View_Builder_Name = bdc.category_mean; view_builder_name&#xD;
	, bdv.br_datamart_filter_id&#xD;
	, bdv.br_datamart_value_id; plus 1 = component_name&#xD;
from&#xD;
	BR_DATAMART_VALUE bdv;BR_DATAMART_VALUE_ID (PK)&#xD;
	, BR_DATAMART_CATEGORY   BDC&#xD;
plan bdv where bdv.freetext_desc like "banner.*"&#xD;
join bdc where bdc.br_datamart_category_id = bdv.br_datamart_category_id&#xD;
order by mpage_name&#xD;
^</Template><Template Name="mpt_OTS" Description="Changing OTS User" Comments="0" Strings="0">;Enter [+123456.00+] or [+USERNAME+]&#xD;
select&#xD;
	p.username,&#xD;
	p.name_full_formatted,&#xD;
	cp.usr_person_id,&#xD;
	cp.rowid,&#xD;
	cp.position_cd,&#xD;
	position_name=uar_get_code_display(cp.position_cd),&#xD;
	cp.active_ind,&#xD;
	cp.updt_cnt,&#xD;
	cp.updt_dt_tm,&#xD;
	cp.bh_mp_pref_id,&#xD;
	cp.beg_effective_dt_tm";;",&#xD;
	cp.end_effective_dt_tm";;"&#xD;
from&#xD;
	cust_samt.cust_prsnlauthpos cp,&#xD;
	prsnl p&#xD;
plan cp&#xD;
where cp.usr_person_id = (select person_id from prsnl where username = cnvtupper("[+USERNAME+]"));&#xD;
join p where p.person_id = cp.usr_person_id&#xD;
order by cp.bh_mp_pref_id desc&#xD;
&#xD;
---------------------&#xD;
select&#xD;
	p.username,&#xD;
	p.name_full_formatted,&#xD;
	cp.usr_person_id,&#xD;
	cp.rowid,&#xD;
	cp.position_cd,&#xD;
	position_name=uar_get_code_display(cp.position_cd),&#xD;
	cp.active_ind,&#xD;
	cp.updt_cnt,&#xD;
	cp.updt_dt_tm,&#xD;
	cp.bh_mp_pref_id,&#xD;
	cp.beg_effective_dt_tm";;",&#xD;
	cp.end_effective_dt_tm";;"&#xD;
from&#xD;
	cust_samt.cust_prsnlauthpos cp,&#xD;
	prsnl p&#xD;
plan cp&#xD;
where cp.usr_person_id = [+123456.00+];&#xD;
join p where p.person_id = cp.usr_person_id&#xD;
order by cp.bh_mp_pref_id desc&#xD;
&#xD;
---------------------&#xD;
delete from cust_samt.cust_prsnlauthpos&#xD;
where usr_person_id = [+123456.00+]&#xD;
go&#xD;
commit go&#xD;
&#xD;
---------------------&#xD;
delete from cust_samt.cust_prsnlauthpos&#xD;
where usr_person_id = (select person_id from prsnl where username = cnvtupper("[+USERNAME+]"))&#xD;
go&#xD;
commit go&#xD;
&#xD;
---------------------&#xD;
select * from cust_samt.cust_prsnlauthpos where usr_person_id = [+123456.00+] go&#xD;
&#xD;
---------------------&#xD;
select * from cust_samt.cust_prsnlauthpos&#xD;
where usr_person_id = (select person_id from prsnl where username = cnvtupper("[+USERNAME+]"))&#xD;
go&#xD;
^</Template><Template Name="mpt_PMP" Description="PMP NPI" Comments="0" Strings="0">&#xD;
Enter: [+USERNAME+] or [+123456.00+]&#xD;
select&#xD;
p.username,&#xD;
p.name_full_formatted,&#xD;
p.person_id,&#xD;
alias_type_cd_display=uar_get_code_display(pa.prsnl_alias_type_cd),&#xD;
alias_pool_cd_display=uar_get_code_display(pa.alias_pool_cd),&#xD;
alias_identifier=pa.alias,&#xD;
pa.updt_dt_tm;,&#xD;
;pa.*&#xD;
from&#xD;
	prsnl p,&#xD;
	Prsnl_alias pa&#xD;
plan p&#xD;
where&#xD;
	p.person_id = [+123456.00+]&#xD;
join pa where p.person_id = pa.person_id&#xD;
and pa.prsnl_alias_type_cd = 28769904.00 &#xD;
and pa.alias_pool_cd = 498265387.00&#xD;
and pa.active_ind = 1&#xD;
with nocounter, separator="#", format, maxrec = 20 select&#xD;
p.username,&#xD;
p.name_full_formatted,&#xD;
p.person_id,&#xD;
alias_type_cd_display=uar_get_code_display(pa.prsnl_alias_type_cd),&#xD;
alias_pool_cd_display=uar_get_code_display(pa.alias_pool_cd),&#xD;
alias_identifier=pa.alias,&#xD;
pa.updt_dt_tm;,&#xD;
;pa.*&#xD;
from&#xD;
	prsnl p,&#xD;
	Prsnl_alias pa&#xD;
plan p&#xD;
where&#xD;
	p.person_id = (select person_id from prsnl where username = cnvtupper("[+USERNAME+]"))&#xD;
join pa where p.person_id = pa.person_id&#xD;
and pa.prsnl_alias_type_cd = 28769904.00 &#xD;
and pa.alias_pool_cd = 498265387.00&#xD;
and pa.active_ind = 1&#xD;
with nocounter, separator="#", format, maxrec = 20^ </Template>
<Template Name="mpt_prefmaint_positions" Description="Find positions that have access to prefmaint published application" Comments="0" Strings="0">;Find positions that have access to prefmaint published application&#xD;&#xD;
SELECT&#xD;
	d.application_number&#xD;
	;, d.prsnl_id&#xD;
	, d.detail_prefs_id&#xD;
	, n.pvc_name&#xD;
	, POSITION_NAME = c.display&#xD;
	, d.position_cd&#xD;
	, d.updt_dt_tm";;"&#xD;
	, n.pvc_value&#xD;
	;, n.*&#xD;
	;, d.*&#xD;
	;, c.*&#xD;
 &#xD;
FROM&#xD;
	name_value_prefs   n&#xD;
	, detail_prefs   d&#xD;
	, code_value   c&#xD;
 &#xD;
where n.pvc_value like "*MP_PHYSICIAN_IMPROVEMENT_DASH*" ; "*\\cernerasp%\dfs*"&#xD;
  and n.pvc_name = "REPORT_PARAM"&#xD;
  and n.active_ind = 1&#xD;
  and n.parent_entity_name = "DETAIL_PREFS"&#xD;
  and d.detail_prefs_id = n.parent_entity_id&#xD;
  and c.code_value = d.position_cd&#xD;
 &#xD;
order by&#xD;
d.application_number&#xD;
,c.display&#xD;
 &#xD;
WITH time = 100&#xD;
^
</Template><Template Name="mpt_ProgramUsage" Description="Find how much a program is being used." Comments="0" Strings="0">;Program Usage Count/Display&#xD;
select into 'nl:'&#xD;
            c.begin_dt_tm&#xD;
            , c.end_dt_tm&#xD;
            , c.object_name&#xD;
            , c.object_params&#xD;
            , c.output_device&#xD;
            , c.updt_dt_tm&#xD;
            , c.updt_id&#xD;
            , p.username&#xD;
            , p.name_full_formatted&#xD;
&#xD;
from&#xD;
            ccl_report_audit   c&#xD;
            , prsnl   p&#xD;
&#xD;
plan c&#xD;
where cnvtupper(c.object_name) = '[+CCL PROGRAMNAME+]*' ;&#xD;
&#xD;
and  c.updt_dt_tm &gt; sysdate - 1&#xD;
&#xD;
join p&#xD;
where p.person_id = c.updt_id&#xD;
;and p.username = 'prholland'&#xD;
with maxrec = 100 </Template><Template Name="mpt_TempBedrock" Description="Bedrock mPage Template" Comments="0" Strings="0">;Program Author: [+Author+]&#xD;
;Program Name: 1bh_mpage_[+NameSpace+].prg&#xD;
;Creation Date: [DATE_TEXT] [TIME]&#xD;
;Last Modified:&#xD;
;Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;
;Purpose:&#xD;
;Request #:&#xD;
;Namespace: banner.[+NameSpace+]&#xD;
;----------------------------------------------------------------------------&#xD;
;free record request go&#xD;
;/*Add any fields and data type in your "record request" that your CCL will need to run.*/&#xD;
;&#xD;
;record request&#xD;
;( 	;1 encntr_id = i4&#xD;
;	1 per_id = i4&#xD;
;	1 enc_id = i4&#xD;
;	;1 cvalue = i4&#xD;
;) go&#xD;
;&#xD;
;/*Setting the request equal to the Encounter ID that will be sent from PowerChart.&#xD;
;This information is manually entered here when testing. */&#xD;
;&#xD;
;	set request-&gt;per_id = 123456789.00 go&#xD;
;	set request-&gt;enc_id = 987654321.00 go&#xD;
;&#xD;
;/*The CCL that you want to execute to produce the data. */&#xD;
;&#xD;
;	execute 1bh_mpage_[+NameSpace+] "MINE", request-&gt;per_id, request-&gt;enc_id go&#xD;
&#xD;
;----------------------------------------------------------------------------&#xD;
&#xD;
drop program 1bh_mpage_[+NameSpace+]:dba go&#xD;
create program 1bh_mpage_[+NameSpace+]:dba&#xD;
&#xD;
prompt&#xD;
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.&#xD;
	, "per_id" = 0&#xD;
	, "enc_id" = 0&#xD;
&#xD;
with OUTDEV, per_id, enc_id&#xD;
&#xD;
%i cust_script:1samt_az_common.inc&#xD;
;%i cust_script:1samt_az_common_cds.inc&#xD;
;PROGRAM HEADER ABOVE&#xD;
&#xD;
/*Begin Record Structure*/&#xD;
;Record structure elements can be lowercase here but must be uppercase in your .js.&#xD;
free record [+NameSpace+]_structure&#xD;
record [+NameSpace+]_structure (&#xD;
1 [+NameSpace+]_structure_cnt=i4&#xD;
1 [+NameSpace+]_structure_array[*]&#xD;
/*Create record structure aliases and assign the proper data type that will match the columns in your query*/&#xD;
	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_mrn = vc ;&#xD;
	2 returned_fin = vc ;&#xD;
&#xD;
&#xD;
%i cclsource:status_block.inc&#xD;
)&#xD;
/*End Record Structure*/&#xD;
&#xD;
set [+NameSpace+]_structure-&gt;status_data.status ="F"&#xD;
set debug_ind = 1&#xD;
&#xD;
declare fin_alias = vc&#xD;
declare mrn_alias = vc&#xD;
&#xD;
select&#xD;
	ea.alias&#xD;
&#xD;
from&#xD;
	encntr_alias ea&#xD;
&#xD;
where ea.encntr_id = $enc_id;72958204.00;$enc_id;&#xD;
and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number&#xD;
detail&#xD;
case (ea.encntr_alias_type_cd)&#xD;
	of 1077.00 : fin_alias = trim(ea.alias)&#xD;
	of 1079.00 : mrn_alias = trim(ea.alias)&#xD;
endcase&#xD;
&#xD;
/*Select Query Begin*/&#xD;
&#xD;
select ;into "NL"&#xD;
	p.person_id&#xD;
	,p.name_full_formatted&#xD;
	,e.encntr_id&#xD;
	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)&#xD;
&#xD;
from&#xD;
	person p&#xD;
	, encounter e&#xD;
&#xD;
plan p where p.person_id = $per_id ;37298420.00&#xD;
join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00&#xD;
&#xD;
/*Select Query End*/&#xD;
&#xD;
head report&#xD;
x=1&#xD;
rec_cnt = 0 ; Setting record count to zero.&#xD;
&#xD;
/*The "Head" section is most important part of what you are pulling from your query. Example:&#xD;
You could have "head p.person_id" and under that you need to return data from the query into it. */&#xD;
&#xD;
head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column.&#xD;
rec_cnt=rec_cnt+1&#xD;
&#xD;
   if (size([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the [+NameSpace+]_structure_array array&#xD;
      stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt+10) ; this is increasing the size of the [+NameSpace+]_structure_array array by 10 if needed.&#xD;
   endif&#xD;
&#xD;
/*Returning column data from the query into the record structure aliases*/&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_mrn = mrn_alias&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_fin = fin_alias&#xD;
&#xD;
foot p.person_id ;alias.fieldname | Closing the header. Same name as head.&#xD;
x=1&#xD;
foot report&#xD;
x=1&#xD;
stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_cnt = rec_cnt&#xD;
with nocounter&#xD;
&#xD;
set [+NameSpace+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)&#xD;
&#xD;
#exit_script   ;  ID for end of PRG&#xD;
&#xD;
call ajax_reply([+NameSpace+]_structure) 	; info_point (ajax_reply is a function that changes the&#xD;
							;record structure to a string.&#xD;
&#xD;
call echo(cnvtrectojson([+NameSpace+]_structure)) 	; info_point (cnvtrectojson is a function that changes the&#xD;
							;record structure to a JSON string and returns the string to the JS).&#xD;
&#xD;
if (debug_ind)&#xD;
	call echorecord([+NameSpace+]_structure)  ;info_point (displays record structure in listing - troubleshooting)&#xD;
else&#xD;
	free record [+NameSpace+]_structure  ;info_point (clears record structure)&#xD;
endif&#xD;
&#xD;
CALL log_end_script("1bh_mpage_[+NameSpace+]", debug_ind) ; info_point (For log files)&#xD;
&#xD;
end&#xD;
go&#xD;
&#xD;
/*JS NAMESPACE BELOW*/&#xD;
//BEGIN [+NameSpace+]&#xD;
/**&#xD;
* Project:&#xD;
* Version: 1.0&#xD;
* Released:	[DATE_TEXT] [TIME]&#xD;
* Updated:&#xD;
* Purpose:&#xD;
* @author: [+Author+]&#xD;
* Request#:&#xD;
*/&#xD;
&#xD;
MPage.namespace("banner");&#xD;
banner.[+NameSpace+] = function(){};&#xD;
banner.[+NameSpace+].prototype = new MPage.Component();&#xD;
banner.[+NameSpace+].prototype.constructor = MPage.Component();&#xD;
banner.[+NameSpace+].prototype.base = MPage.Component.prototype;&#xD;
banner.[+NameSpace+].prototype.name = "banner.[+NameSpace+]";&#xD;
banner.[+NameSpace+].prototype.cclProgram = "1bh_mpage_[+NameSpace+]";&#xD;
banner.[+NameSpace+].prototype.cclParams = [];&#xD;
banner.[+NameSpace+].prototype.cclDataType = "JSON";&#xD;
&#xD;
banner.[+NameSpace+].prototype.init = function(options)&#xD;
{&#xD;
//	// Check cookie for param update&#xD;
//	if(readCookie("bldgltframe") == null){&#xD;
//		createCookie("bldgltframe","72,H",1);&#xD;
//	}&#xD;
&#xD;
	var params = [];&#xD;
	params.push("mine");&#xD;
	params.push(this.getProperty("personId"));&#xD;
	params.push(this.getProperty("encounterId"));&#xD;
//	params.push(readCookie("bldgltframe"));&#xD;
	params.push(300);&#xD;
	this.cclParams = params;&#xD;
};&#xD;
&#xD;
banner.[+NameSpace+].prototype.render = function()&#xD;
{&#xD;
	var tempStr=[];&#xD;
	var element = this.getTarget();&#xD;
	var jsonObj = this.data;&#xD;
    var recordData = jsonObj.RECORD_DATA;&#xD;
	var compid = this.getComponentUid();&#xD;
	MPage.getCustomComp(compid).setProperty("headerSubTitle","");&#xD;
&#xD;
//alert("Hello World");&#xD;
	tempStr.push("&lt;div&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;",this.name,"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;");&#xD;
	element.innerHTML = tempStr.join("");&#xD;
&#xD;
};&#xD;
&#xD;
// END [+NameSpace+] </Template><Template Name="mpt_TempCustom" Description="Custom mPage Template" Comments="0" Strings="0">Script Author: [+Author+]&#xD;
Program Name: [+Component mPage Name+].prg&#xD;
Foldername on PHX00027: [+Component mPage Folder+]&#xD;
CAPITALIZED FOLDERNAME [+Component mPage Folder Capitalized+]&#xD;
;----------------------------------------------------------------------------&#xD;
&#xD;
###MPAGE TEMPLATE [DATE_TEXT] [TIME]&#xD;
&#xD;
###HTML SECTION FOR AIX NODE BEGIN:&#xD;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;&#xD;
&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&#xD;
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"&gt;&#xD;
&lt;!-- [+Component mPage Name+].html --&gt;&#xD;
&lt;!-- Author: [+Author+] --&gt;&#xD;
&lt;!-- Creation Date: [DATE_TEXT] [TIME] --&gt;&#xD;
&#xD;
&lt;head&gt;&#xD;
	&lt;title&gt;&lt;/title&gt;&#xD;
    &lt;meta http-equiv="Content-Type" content="APPLINK,CCLLINK,MPAGES_EVENT,XMLCCLREQUEST,CCLLINKPOPUP,CCLNEWSESSIONWINDOW" name="discern"/&gt;&#xD;
	&lt;link rel="stylesheet" type="text/css" href="\\phx00027\azbld\Custom\mpages\1bh_master_lib\css\1samt_az_css.css" /&gt;&#xD;
	&lt;link rel="stylesheet" type="text/css" href="\\phx00027\azbld\Custom\mpages\[+Component mPage Folder+]\css\[+Component mPage Name+].css" /&gt;&#xD;
&#xD;
&lt;/head&gt;&#xD;
&lt;body onload="javascript:RenderPage2();"&gt;&#xD;
&lt;h1&gt;&lt;/h1&gt;&#xD;
&lt;hr/&gt;&#xD;
&lt;div id="demo_bar"&gt;&lt;/div&gt;&#xD;
&#xD;
&lt;a href="javascript:feedbackLink()"&gt;Feedback&lt;/a&gt;&#xD;
&lt;!-- ******************* --&gt;&#xD;
&lt;DIV id="componentPlaceHolder" class="col-group-2"&gt;&lt;!--Set class to 2 column mpage --&gt;&#xD;
&lt;DIV id="col1PlaceHolder" class="col1"&gt;&lt;!--Set class for 1st column on page --&gt;&#xD;
&lt;div id="[+Component mPage Folder+]" class="component2"&gt;&lt;/div&gt;&#xD;
&#xD;
&lt;/DIV&gt;&#xD;
&#xD;
&#xD;
&lt;DIV id="col2PlaceHolder" class="col2"&gt;&lt;!--Set class for 2nd column on page --&gt;&#xD;
&lt;div id="1bh_mpage_programtemplate" class="component2"&gt;&lt;/div&gt;&#xD;
&lt;/DIV&gt;&#xD;
&lt;/DIV&gt;&#xD;
&#xD;
&lt;/body&gt;&#xD;
&lt;script type="text/javascript" src="\\phx00027\azbld\Custom\mpages\[+Component mPage Folder+]\js\[+Component mPage Name+].js"&gt;&lt;/script&gt;&#xD;
&lt;script type="text/javascript" src="\\phx00027\azbld\Custom\mpages\1bh_master_lib\js\1samt_az_javascript.js"&gt;&lt;/script&gt;&#xD;
&#xD;
&#xD;
&lt;script type="text/javascript"&gt;&#xD;
var mpage_data_JSON = &lt;$MPAGE_DATA$&gt;;&#xD;
var MP_DATA = mpage_data_JSON.MPAGE_DATA;&#xD;
&lt;/script&gt;&#xD;
&lt;script type="text/javascript"&gt;&#xD;
&#xD;
function feedbackLink()&#xD;
{&#xD;
var url="http://intranet7.bannerhealth.com/CernerFeedBack/Default.aspx?typ=1&amp;fb=[+Component mPage Folder+]";&#xD;
url +="(ENCNTR_ID: $vis_encntrid$\/"&#xD;
url +="PERSON_ID: $pat_personid$\/"&#xD;
url +="PRSNL_ID: $usr_personid$)"&#xD;
var obj = APPLINK(100,url,"");&#xD;
}&#xD;
&lt;/script&gt;&#xD;
&lt;/html&gt;&#xD;
&#xD;
###HTML SECTION FOR AIX NODE END:&#xD;
&#xD;
###JAVASCRIPT SECTION BEGIN:&#xD;
// ----------------------------------------------------------------------------&#xD;
// Script Author: [+Author+]&#xD;
// Program Name: [+Component mPage Name+].js&#xD;
// Related Files: [+Component mPage Name+].html, [+Component mPage Name+].prg&#xD;
// Creation Date: [DATE_TEXT] [TIME]&#xD;
// Last Modified:&#xD;
// Copyright: (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;
// Purpose:&#xD;
// Request #:&#xD;
// ----------------------------------------------------------------------------&#xD;
&#xD;
&#xD;
function Run[+Component mPage Folder+]Component()&#xD;
{&#xD;
	var COMPONENT = new Component("[+Component mPage Folder+]", "[+Component mPage Name+]", "CCL Program Template");&#xD;
	COMPONENT.HandleSuccess = function(recordData)&#xD;
	{ //The [+Component mPage Folder Capitalized+]_STRUCTURE_CNT and [+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY must be uppercase.&#xD;
		var tempStr = ["&lt;h3 class='header'&gt;",this.headerName," count(",recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT,")&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;&lt;table&gt;"];&#xD;
	if(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT&gt;0)&#xD;
	{&#xD;
//alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT);&#xD;
&#xD;
//BEGIN TABLE DATA&#xD;
		for(var i=0,all_cnt=recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT;i&lt;all_cnt;i++)&#xD;
		{&#xD;
var xxyy=recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY[i].RETURNED_PERSON_ID;&#xD;
//alert(xxyy);&#xD;
		tempStr.push("&lt;tr&gt;&lt;th&gt;Bold Column Header&lt;/th&gt;&lt;/tr&gt;");&#xD;
		tempStr.push("&lt;tr&gt;&lt;td&gt;Normal Column data&lt;/td&gt;&lt;/tr&gt;");&#xD;
		tempStr.push("&lt;tr&gt;&lt;td class='bold'&gt;Bold Column data&lt;/td&gt;&lt;/tr&gt;");&#xD;
		tempStr.push("&lt;tr&gt;&lt;td&gt;",xxyy,"&lt;/td&gt;&lt;/tr&gt;");&#xD;
&#xD;
			alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_CNT);&#xD;
			alert(recordData.[+Component mPage Folder Capitalized+]_STRUCTURE_ARRAY[i].RETURNED_PERSON_ID);&#xD;
		}&#xD;
&#xD;
	}&#xD;
	else&#xD;
	{&#xD;
	tempStr.push("&lt;tr&gt;&lt;td colspan='3' class='bold'&gt;No Data Documented&lt;/td&gt;&lt;/tr&gt;");&#xD;
	}&#xD;
		tempStr.push("&lt;/table&gt;&lt;/div&gt;");&#xD;
		var aObj = SAMT_AZ._g(COMPONENT.id);&#xD;
		aObj.style.display = "";&#xD;
		aObj.innerHTML = tempStr.join("");&#xD;
		this.setupToggle("E");&#xD;
		this.setupTooltips();&#xD;
	};&#xD;
	COMPONENT.HandleNoData = function(recordData)&#xD;
	{&#xD;
		var aObj = SAMT_AZ._g(COMPONENT.id);&#xD;
		aObj.style.display = "";&#xD;
		aObj.innerHTML = ["&lt;h3 class='header'&gt;",this.headerName,"&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;No Data Found&lt;/div&gt;"].join("");&#xD;
		this.setupToggle("E");&#xD;
	};&#xD;
	COMPONENT.HandleDataError = function(recordData)&#xD;
	{&#xD;
		var aObj = SAMT_AZ._g(COMPONENT.id);&#xD;
		aObj.style.display = "";&#xD;
		aObj.innerHTML = ["&lt;h3 class='header'&gt;",this.headerName,"&lt;span class='ce' id='",this.id,"_ce'&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div class='component-content'&gt;Error Retrieving Results&lt;/div&gt;"].join("");&#xD;
		this.setupToggle("E");&#xD;
	};&#xD;
	var sendArr = ["^^MINE^^",MP_DATA.PERSON_ID,MP_DATA.ENCNTR_ID];&#xD;
//	alert(sendArr);&#xD;
	SAMT_AZ.XMLCclRequestWrapper(COMPONENT, sendArr);&#xD;
}&#xD;
&#xD;
###JAVASCRIPT SECTION END:&#xD;
&#xD;
###CCL PROGRAM SECTION BEGIN:&#xD;
;Script Author: [+Author+]&#xD;
;Program Name: [+Component mPage Name+].prg&#xD;
;Related Files: [+Component mPage Name+].html, [+Component mPage Name+].js&#xD;
;Creation Date: [DATE_TEXT] [TIME]&#xD;
;Last Modified:&#xD;
;Copyright: (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;
;Purpose:&#xD;
;Request #:&#xD;
;Foldername on PHX00027: [+Component mPage Folder+]&#xD;
;----------------------------------------------------------------------------&#xD;
;free record request go&#xD;
;/*Add any fields and data type in your "record request" that your CCL will need to run.*/&#xD;
;&#xD;
;record request&#xD;
;( 	;1 encntr_id = i4&#xD;
;	1 per_id = i4&#xD;
;	1 enc_id = i4&#xD;
;	;1 cvalue = i4&#xD;
;) go&#xD;
;&#xD;
;/*Setting the request equal to the Encounter ID that will be sent from PowerChart.&#xD;
;This information is manually entered here when testing. */&#xD;
;&#xD;
;	set request-&gt;per_id = 123456789.00 go&#xD;
;	set request-&gt;enc_id = 987654321.00 go&#xD;
;&#xD;
;/*The CCL that you want to execute to produce the data. */&#xD;
;&#xD;
;	execute [+Component mPage Name+] "MINE", request-&gt;per_id, request-&gt;enc_id go&#xD;
&#xD;
;----------------------------------------------------------------------------&#xD;
&#xD;
drop program [+Component mPage Name+]:dba go&#xD;
create program [+Component mPage Name+]:dba&#xD;
&#xD;
prompt&#xD;
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.&#xD;
	, "per_id" = 0&#xD;
	, "enc_id" = 0&#xD;
&#xD;
with OUTDEV, per_id, enc_id&#xD;
&#xD;
%i cust_script:1samt_az_common.inc&#xD;
;%i cust_script:1samt_az_common_cds.inc&#xD;
;PROGRAM HEADER ABOVE&#xD;
&#xD;
/*Begin Record Structure*/&#xD;
;Record structure elements can be lowercase here but must be uppercase in your .js.&#xD;
free record [+Component mPage Folder+]_structure&#xD;
record [+Component mPage Folder+]_structure (&#xD;
1 [+Component mPage Folder+]_structure_cnt=i4&#xD;
1 [+Component mPage Folder+]_structure_array[*]&#xD;
/*Create record structure aliases and assign the proper data type that will match the columns in your query*/&#xD;
	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_mrn = vc ;&#xD;
	2 returned_fin = vc ;&#xD;
&#xD;
&#xD;
%i cclsource:status_block.inc&#xD;
)&#xD;
/*End Record Structure*/&#xD;
&#xD;
set [+Component mPage Folder+]_structure-&gt;status_data.status ="F"&#xD;
set debug_ind = 1&#xD;
&#xD;
declare fin_alias = vc&#xD;
declare mrn_alias = vc&#xD;
&#xD;
select&#xD;
	ea.alias&#xD;
&#xD;
from&#xD;
	encntr_alias ea&#xD;
&#xD;
where ea.encntr_id = $enc_id;72958204.00;$enc_id;&#xD;
and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number&#xD;
detail&#xD;
case (ea.encntr_alias_type_cd)&#xD;
	of 1077.00 : fin_alias = trim(ea.alias)&#xD;
	of 1079.00 : mrn_alias = trim(ea.alias)&#xD;
endcase&#xD;
&#xD;
/*Select Query Begin*/&#xD;
&#xD;
select ;into "NL"&#xD;
	p.person_id&#xD;
	,p.name_full_formatted&#xD;
	,e.encntr_id&#xD;
	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)&#xD;
&#xD;
from&#xD;
	person p&#xD;
	, encounter e&#xD;
&#xD;
plan p where p.person_id = $per_id ;37298420.00&#xD;
join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00&#xD;
&#xD;
/*Select Query End*/&#xD;
&#xD;
head report&#xD;
x=1&#xD;
rec_cnt = 0 ; Setting record count to zero.&#xD;
&#xD;
/*The "Head" section is most important part of what you are pulling from your query. Example:&#xD;
You could have "head p.person_id" and under that you need to return data from the query into it. */&#xD;
&#xD;
head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column.&#xD;
rec_cnt=rec_cnt+1&#xD;
&#xD;
   if (size([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the foldername_structure_array array&#xD;
      stat= alterlist([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array, rec_cnt+10) ; this is increasing the size of the foldername_structure_array array by 10 if needed.&#xD;
   endif&#xD;
&#xD;
/*Returning column data from the query into the record structure aliases*/&#xD;
[+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id)&#xD;
[+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted)&#xD;
[+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id)&#xD;
[+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type)&#xD;
[+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_mrn = mrn_alias&#xD;
[+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array[rec_cnt].returned_fin = fin_alias&#xD;
&#xD;
foot p.person_id ;alias.fieldname | Closing the header. Same name as head.&#xD;
x=1&#xD;
foot report&#xD;
x=1&#xD;
stat= alterlist([+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_array, rec_cnt)&#xD;
[+Component mPage Folder+]_structure-&gt;[+Component mPage Folder+]_structure_cnt = rec_cnt&#xD;
with nocounter&#xD;
&#xD;
&#xD;
set [+Component mPage Folder+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)&#xD;
&#xD;
#exit_script   ;  ID for end of PRG&#xD;
&#xD;
call ajax_reply([+Component mPage Folder+]_structure) 	; info_point (ajax_reply is a function that changes the&#xD;
							;record structure to a string.&#xD;
&#xD;
call echo(cnvtrectojson([+Component mPage Folder+]_structure)) 	; info_point (cnvtrectojson is a function that changes the&#xD;
							;record structure to a JSON string and returns the string to the JS).&#xD;
&#xD;
if (debug_ind)&#xD;
	call echorecord([+Component mPage Folder+]_structure)  ;info_point (displays record structure in listing - troubleshooting)&#xD;
else&#xD;
	free record [+Component mPage Folder+]_structure  ;info_point (clears record structure)&#xD;
endif&#xD;
&#xD;
CALL log_end_script("[+Component mPage Name+]", debug_ind) ; info_point (For log files)&#xD;
&#xD;
end&#xD;
go&#xD;
&#xD;
###CCL PROGRAM SECTION END:&#xD;
&#xD;
###1BH_MPAGE_HOME1.JS FILE BEGIN:&#xD;
function [+Component mPage Folder+](){&#xD;
		 CCLLINK("1samt_az_run_mpage","^^MINE^^,value($pat_personid$),value($vis_encntrid$),0,^^cust_html:[+Component mPage Name+].html^^",1);&#xD;
}&#xD;
###1BH_MPAGE_HOME1.JS FILE END:&#xD;
&#xD;
###TESTLINK.JS FILE BEGIN:&#xD;
tempStr.push("&lt;p&gt;&lt;a href='javascript:[+Component mPage Folder+]();'&gt;[+Component mPage Folder+]&lt;/a&gt;&lt;/p&gt;");&#xD;
###TESTLINK.JS FILE END:&#xD;
&#xD;
###WINDOWS COMMAND PROMPT BEGIN:&#xD;
md [+Component mPage Folder+]\js [+Component mPage Folder+]\css [+Component mPage Folder+]\prg [+Component mPage Folder+]\img&#xD;
###WINDOWS COMMAND PROMPT END: </Template><Template Name="mpt_UserToDBA" Description="Drop and create user as DBA" Comments="0" Strings="0">;Drop/Create User as DBA&#xD;
drop program user_to_dba go&#xD;
create program user_to_dba&#xD;
&#xD;
prompt "MINE" = "MINE"&#xD;
&#xD;
with outdev&#xD;
DROP CCLUSER [+USERNAME+]&#xD;
commit&#xD;
CREATE CCLUSER [+USERNAME+] TO DBA&#xD;
commit&#xD;
end go&#xD;
&#xD;
;Only a group0 can create or modify a group0&#xD;
;create ccluser [+USERNAME+] to GROUP0 go&#xD;
&#xD;
&#xD;&#xD;
;Backend:&#xD;
DROP CCLUSER [+USERNAME+] go&#xD;
commit go&#xD;
CREATE CCLUSER [+USERNAME+] TO DBA go&#xD;
commit go&#xD;
^</Template><Template Name="mpt_ViewSource" Description="mPage View Source JSON" Comments="0" Strings="0">&lt;html&gt;&#xD;
&lt;head&gt;&#xD;
	&lt;meta charset="UTF-8"&gt;&#xD;
  &lt;meta name="description" content="Default mPage Information"&gt;&#xD;
  &lt;meta name="keywords" content="UE Studio mPageViewSource.mac"&gt;&#xD;
  &lt;meta name="author" content="Robert Holland"&gt;&#xD;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;&#xD;
&#xD;
&lt;p&gt;This page requires data from three variables from the "View Source" of an mPage.&lt;br /&gt;&#xD;
The &lt;b&gt;"var m_viewpointJSON"&lt;/b&gt;, the &lt;b&gt;var m_criterionJSON&lt;/b&gt;, and the &lt;b&gt;"var m_mpageSettingsJSON"&lt;/b&gt;.&lt;br /&gt;&#xD;
&lt;hr /&gt;&#xD;
&lt;/p&gt;&#xD;
&lt;title&gt;mPage JSON Testing&lt;/title&gt;&#xD;
&lt;script language="javascript" src="./json2.js"&gt;&lt;/script&gt;&#xD;
&lt;script src="http://code.jquery.com/jquery-1.11.1.min.js"&gt;&lt;/script&gt;&#xD;
&#xD;
&lt;/head&gt;&#xD;
&lt;style&gt;&#xD;
	table, th, td {border-collapse:collapse; border: 1px solid black; background-color: #FFFF00}&#xD;
&#xD;
&lt;/style&gt;&#xD;
&lt;body&gt;&#xD;
&lt;div&gt;&#xD;
&lt;p id="output"&gt;&lt;/p&gt;&lt;hr /&gt;&#xD;
&lt;/div&gt;&#xD;
&lt;div&gt;&#xD;
	&lt;p id="output1"&gt;&lt;/p&gt;&lt;hr /&gt;&#xD;
&lt;/div&gt;&#xD;
&lt;div&gt;&#xD;
	&lt;p id="output2"&gt;&lt;/p&gt;&lt;hr /&gt;&#xD;
&lt;/div&gt;&#xD;
&#xD;
&lt;script&gt;&#xD;
//*********************************************Use mPageViewSource macro and paste JSON below here:*********************************************/&#xD;
&#xD;
&#xD;
&#xD;
//************************************************************Paste JSON above here:************************************************************/&#xD;
&#xD;
//JSON setup.&#xD;
var VP = JSON.parse(m_viewpointJSON);&#xD;
var viewpoint = VP.VP_INFO;&#xD;
var CR = JSON.parse(m_criterionJSON);&#xD;
var criterion = CR.CRITERION;&#xD;
var MP = JSON.parse(m_mpageSettingsJSON);&#xD;
var mpage = MP.MP_SETTINGS;&#xD;
&#xD;
//alert(viewpoint.VIEWS.length);&#xD;
//alert(viewpoint.VIEWS[0].VIEW_NAME);&#xD;
var spc0='&amp;nbsp;&amp;nbsp;';&#xD;
var spc1='&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;';&#xD;
var tempStr=[];&#xD;
	tempStr.push('&lt;b&gt;',viewpoint.VIEWPOINT_NAME,'&lt;/b&gt;&lt;br /&gt;');&#xD;
	tempStr.push('mPages in ',viewpoint.VIEWPOINT_NAME, ' (',viewpoint.VIEWPOINT_NAME_KEY,')&lt;br /&gt;');&#xD;
for(var i=0,all_cnt=viewpoint.VIEWS.length;i&lt;all_cnt;i++){&#xD;
//alert(i);&#xD;
&#xD;
	tempStr.push(spc0,'View Name: &lt;b&gt;',viewpoint.VIEWS[i].VIEW_NAME,'&lt;/b&gt; (',viewpoint.VIEWS[i].VIEW_CAT_MEAN,')&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'View Sequence: ',viewpoint.VIEWS[i].VIEW_SEQUENCE,'&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'View Cat Mean: ',viewpoint.VIEWS[i].VIEW_CAT_MEAN,'&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'View Cat ID: ',viewpoint.VIEWS[i].VIEW_CAT_ID,'&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'User Defined IND: ',viewpoint.VIEWS[i].USER_DEFINED_IND,'&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'Shown IND: ',viewpoint.VIEWS[i].SHOWN_IND,'&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'Menu Item: ',viewpoint.VIEWS[i].MENU_ITEM,'&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'View Type: ',viewpoint.VIEWS[i].VIEW_TYPE,'&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'View Type Mean: ',viewpoint.VIEWS[i].VIEW_TYPE_MEAN,'&lt;br /&gt;');&#xD;
//	tempStr.push(spc1,'Grouped View Viewpoint ID: ',viewpoint.VIEWS[i].GROUPED_VIEW_VIEWPOINT_ID,'&lt;br /&gt;&lt;br /&gt;');&#xD;
//	tempStr.push();&#xD;
//	tempStr.push(&lt;/ul&gt;);&#xD;
&#xD;
document.getElementById("output").innerHTML = tempStr.join("");&#xD;
}&#xD;
&#xD;
&#xD;
var tempStr=[];&#xD;
//&#xD;
	tempStr.push('&lt;b&gt;Person NAME:&lt;/b&gt; ',criterion.PERSON_INFO.PERSON_NAME,'&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;Person DOB:&lt;/b&gt; ',criterion.PERSON_INFO.DOB,'&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;Person ID:&lt;/b&gt; ',criterion.PERSON_ID,'&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;Encounter ID:&lt;/b&gt; ',criterion.ENCNTRS[0].ENCNTR_ID,'&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;Username:&lt;/b&gt; ',criterion.USERNAME,'&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;Personnel ID:&lt;/b&gt; ',criterion.PRSNL_ID,' (select pr.name_full_formatted from prsnl pr where pr.person_id = ',criterion.PRSNL_ID,'.00)&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;Position Code:&lt;/b&gt; ',criterion.POSITION_CD,' (select cv.display from code_value cv where cv.code_value = ',criterion.POSITION_CD,'.00)&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;Release Identifier:&lt;/b&gt; ',criterion.RELEASE_IDENTIFIER,'&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;Release Version:&lt;/b&gt; ',criterion.RELEASE_VERSION,'&lt;br /&gt;');&#xD;
//	for(var i=0,all_cnt=criterion.CRITERION.length;i&lt;all_cnt;i++){&#xD;
//&#xD;
document.getElementById("output1").innerHTML = tempStr.join("");&#xD;
//}&#xD;
&#xD;
var tempStr=[];&#xD;
//	tempStr.push('m_mpageSettingsJSON&lt;br /&gt;');&#xD;
for(var i=0,all_cnt=mpage.MPAGE.length;i&lt;all_cnt;i++){&#xD;
//	tempStr.push(mpage.MPAGE[i].SETTINGS.C_MN,'&lt;br /&gt;');&#xD;
	tempStr.push('&lt;b&gt;',mpage.MPAGE[i].SETTINGS.BR_SET.LBL,' components:&lt;/b&gt;&lt;br /&gt;');&#xD;
//	tempStr.push(mpage.MPAGE[i].SETTINGS.BR_SET.CS.length,'&lt;br /&gt;');&#xD;
	for(var j=0,all_cnt=mpage.MPAGE[i].SETTINGS.BR_SET.CS.length;j&lt;all_cnt;j++){&#xD;
		tempStr.push(spc0,mpage.MPAGE[i].SETTINGS.BR_SET.CS[j].LBL,'&lt;br /&gt;');&#xD;
	}&#xD;
//	tempStr.push(mpage.MPAGE[i].SETTINGS.BR_SET.CS[i].LBL,'&lt;br /&gt;');&#xD;
//	tempStr.push();&#xD;
//	tempStr.push();&#xD;
document.getElementById("output2").innerHTML = tempStr.join("");&#xD;
}&#xD;
&#xD;
&lt;/script&gt;&#xD;
&lt;/body&gt;&#xD;
&lt;/html&gt;&#xD;
</Template><Template Name="tmp_BasicHTML" Description="Basic HTML" Comments="0" Strings="0">&lt;!DOCTYPE html&gt;&#xD;
&lt;html&gt;&#xD;
&lt;head&gt;&#xD;
  &lt;meta charset="UTF-8"&gt;&#xD;
  &lt;meta name="description" content="Template HTML Document"&gt;&#xD;
  &lt;meta name="keywords" content="comma,separated,keywords"&gt;&#xD;
  &lt;meta name="author" content="Robert Holland"&gt;&#xD;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;&#xD;
&lt;title&gt;&lt;/title&gt;&#xD;
&lt;script type="text/javascript" src="http://example.com/js/filename.js"&gt;&lt;/script&gt;&#xD;
&lt;link rel="stylesheet" href="http://example.com/css/filname.css" /&gt;&#xD;
&lt;/head&gt;&#xD;
&#xD;
&lt;style&gt;&#xD;
/*common css*/&#xD;
table, th, td {border-collapse:collapse; border: 1px solid black;}&#xD;
th {background-color:#ffff00;}&#xD;
tr:nth-child(even) {background: #CCC;}&#xD;
tr:nth-child(odd) {background: #FFF;}&#xD;
a:link {text-decoration: none;}&#xD;
a:visited {text-decoration: none;}&#xD;
a:hover {text-decoration: underline;}&#xD;
a:active {text-decoration: underline;}&#xD;
&lt;/style&gt;&#xD;
&#xD;
&lt;body&gt;&#xD;
&lt;img src='data:image/png;base64,&#xD;
' {base64 data goes here without the braces} /&gt;&#xD;
&lt;br /&gt;&#xD;
&#xD;
&lt;div&gt;&#xD;
&lt;p&gt;Blah blah blah&lt;/p&gt;&#xD;
&#xD;
&lt;table&gt;&lt;caption&gt;Table Caption&lt;/caption&gt;&#xD;
&lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;
&lt;/table&gt;&#xD;
&#xD;
&lt;/div&gt;&#xD;
&lt;/body&gt;&#xD;
&lt;/html&gt;&#xD;
</Template><Template Name="tmp_BasicHTMLSort" Description="Sortable HTML table" Comments="0" Strings="0">&lt;!DOCTYPE html&gt;&#xD;
&lt;html&gt;&#xD;
&lt;head&gt;&#xD;
  &lt;meta charset="UTF-8"&gt;&#xD;
  &lt;meta name="description" content="Template HTML Document"&gt;&#xD;
  &lt;meta name="keywords" content="comma,separated,keywords"&gt;&#xD;
  &lt;meta name="author" content="Robert Holland"&gt;&#xD;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;&#xD;
&lt;title&gt;&lt;/title&gt;&#xD;
&lt;link rel="stylesheet" href="https://cdn.datatables.net/1.10.15/css/jquery.dataTables.min.css" /&gt;&#xD;
&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"&gt;&lt;/script&gt;&#xD;
&lt;script type="text/javascript" src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"&gt;&lt;/script&gt;&#xD;
&lt;script&gt;&#xD;
//$(document).ready(function() {&#xD;
//    $('#example').DataTable();&#xD;
//} );&#xD;
$(document).ready(function() {&#xD;
    $('#example').DataTable( {&#xD;
        //scrollX:        '50vh', //On a small table, this will center the table data and leave the table headers left adjustes.&#xD;
        scrollY:        '50vh',&#xD;
        scrollCollapse: true,&#xD;
        paging:         false&#xD;
    } );&#xD;
} );&#xD;
&lt;/script&gt;&#xD;
&lt;/head&gt;&#xD;
&#xD;
&lt;style&gt;&#xD;
/*common css*/&#xD;
th {background-color:#c0c0c0;}&#xD;
table, th, td {border-collapse:collapse; border: 1px solid black;}&#xD;
a:link {text-decoration: none;}&#xD;
a:visited {text-decoration: none;}&#xD;
a:hover {text-decoration: underline;}&#xD;
a:active {text-decoration: underline;}&#xD;
&lt;/style&gt;&#xD;
&#xD;
&lt;body&gt;&#xD;
&lt;img src='data:image/png;base64,&#xD;
' {base64 data goes here without the braces} /&gt;&#xD;
&lt;br /&gt;&#xD;
&#xD;
&lt;table id="example" class="display" width="50%"&gt;&lt;caption&gt;Table Caption&lt;/caption&gt;&#xD;
&lt;thead&gt;&#xD;
&lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt;&#xD;
&lt;/thead&gt;&#xD;
&lt;tfoot&gt;&#xD;
&lt;tr&gt;&lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;&lt;th&gt;Three&lt;/th&gt;&lt;th&gt;Four&lt;/th&gt;&lt;/tr&gt;&#xD;
&lt;/tfoot&gt;&#xD;
&lt;tbody&gt;&#xD;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&#xD;
&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&#xD;
&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;B&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&#xD;
&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&#xD;
&lt;/tbody&gt;&#xD;
&lt;/table&gt;&#xD;
&#xD;
&lt;a href="http://example.com"&gt;Example Anchor Link&lt;/a&gt;&#xD;
&lt;/body&gt;&#xD;
&lt;/html&gt;&#xD;
</Template><Template Name="tmp_Blanklines" Description="Remove blank lines." Comments="0" Strings="0">Find What: &#xD;
  %[^t ]++[^r^n]+&#xD;
&#xD;
Replace With:&#xD;
 "" (without the quotes)&#xD;
&#xD;
Check "Regular Expressions"&#xD;
Select "UltraEdit" regex type.&#xD;
&#xD;
Put cursor at top of file and run.&#xD;
Note: For Mac formatted-files not converted to DOS on load &#xD;
the UltraEdit regular expression find string must &#xD;
be "^r[^t ]++^r" and the replace string "^r" &#xD;
(both without the quotes).&#xD;
^&#xD;
</Template><Template Name="tmp_MSSQL_sp_execute" Description="Execute stored procedures" Comments="0" Strings="0">-- Show linked servers:&#xD;
	EXEC sys.sp_linkedservers &#xD;
^</Template><Template Name="tmp_MySQLDBPasswordChange" Description="Change MySQL password for user." Comments="0" Strings="0">/*&#xD;
-- Change user password.&#xD;
-- Find current user: SELECT CURRENT_USER();&#xD;
//Database Username: [+dbusername+]&#xD;
//Database Password: [+dbpassword+]&#xD;
//----------------------------------------------------------------------------&#xD;
*/&#xD;
&#xD;
use mysql;&#xD;
-- Method 1 (Deprecated):&#xD;
update mysql.user set password('[+dbpassword+]') where user = '[+dbusername+]';&#xD;
FLUSH PRIVILEGES;&#xD;
&#xD;
-- Method 2 (MySQL 5.7+):&#xD;
update mysql.user set authentication_string=PASSWORD('[+dbpassword+]') where user='[+dbusername+]';&#xD;
FLUSH PRIVILEGES;&#xD;
&#xD;
-- Method 3 (Preferred method for current user.):&#xD;
alter user set password = '[+dbpassword+]';&#xD;
FLUSH PRIVILEGES;&#xD;
&#xD;
-- MySQL 5.7:&#xD;
alter user '[+dbusername+]'@'localhost' identified by '[+dbpassword+]';&#xD;
alter user '[+dbusername+]'@'%' identified by '[+dbpassword+]';&#xD;
&#xD;
-- Method 4 (Preferred method for another user.):&#xD;
alter user set password for '[+dbusername+]'@'localhost' = '[+dbpassword+]';&#xD;
FLUSH PRIVILEGES;&#xD;
&#xD;
-- Remote user password change:&#xD;
alter user set password for '[+dbusername+]'@'%' = '[+dbpassword+]';&#xD;
FLUSH PRIVILEGES;&#xD;
&#xD;
-- ALTER USER EXAMPLES ==&#xD;
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.&#xD;
&#xD;
-- This worked for me from the MySQL DB prompt:&#xD;
	SET PASSWORD = PASSWORD('[+dbpassword+]');&#xD;
-- Source: http://stackoverflow.com/questions/33467337/reset-mysql-root-password-using-alter-user-statement-after-install-on-mac&#xD;
&#xD;
-- This syntax enables changing your own password without naming your account literally.&#xD;
	ALTER USER USER() IDENTIFIED BY '[+dbusername+]';&#xD;
&#xD;
-- This statement changes the password for [+dbusername+] but leaves that for someother[+dbusername+] unchanged. &#xD;
-- For both accounts, connections are required to use SSL and each account can be used for a maximum of two simultaneous connections:&#xD;
	ALTER USER&#xD;
  	'[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]',&#xD;
  	'someother[+dbusername+]'@'localhost'&#xD;
  	REQUIRE SSL WITH MAX_USER_CONNECTIONS 2;&#xD;
&#xD;
-- Example 1: Change an account's password and expire it. As a result, the user must connect with the named password and choose a new one at the next connection:&#xD;
	ALTER USER '[+dbusername+]'@'localhost'&#xD;
  	IDENTIFIED BY '[+dbpassword+]' PASSWORD EXPIRE;&#xD;
&#xD;
-- Example 2: Modify an account to use the sha256_password authentication plugin and the given password. Require that a new password be chosen every 180 days:&#xD;
	ALTER USER '[+dbusername+]'@'localhost'&#xD;
  	IDENTIFIED WITH sha256_password BY '[+dbpassword+]'  (SHA256 may require an SSL connection on some systems)&#xD;
  	PASSWORD EXPIRE INTERVAL 180 DAY;&#xD;
&#xD;
-- Example 3: Lock or unlock an account:&#xD;
	ALTER USER '[+dbusername+]'@'localhost' ACCOUNT LOCK;&#xD;
		ALTER USER '[+dbusername+]'@'localhost' ACCOUNT UNLOCK;&#xD;
&#xD;
-- Example 4: Require an account to connect using SSL and establish a limit of 20 connections per hour:&#xD;
	ALTER USER '[+dbusername+]'@'localhost'&#xD;
  	REQUIRE SSL WITH MAX_CONNECTIONS_PER_HOUR 20;&#xD;
-- http://dev.mysql.com/doc/refman/5.7/en/alter-user.html&#xD;
</Template><Template Name="tmp_MySQLDBUser" Description="Create MySQL DB user and password." Comments="0" Strings="0">/*&#xD;
-- Create local user.&#xD;
//Database Username: [+dbusername+]&#xD;
//Database Password: [+dbpassword+]&#xD;
//----------------------------------------------------------------------------&#xD;
*/&#xD;
&#xD;
-- Create local user.&#xD;
CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]';&#xD;
-- Create remote user.&#xD;
CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]';&#xD;
-- Tell the server to reload the GRANT TABLES.&#xD;
FLUSH PRIVILEGES;&#xD;
</Template><Template Name="tmp_MySQLDBUserandDatabase" Description="Create MySQL DB user and database." Comments="0" Strings="0">/*&#xD;
-- Create user and database with the same name.&#xD;
//Database Username: [+dbusername+]&#xD;
//Database Password: [+dbpassword+]&#xD;
//----------------------------------------------------------------------------&#xD;
*/&#xD;
&#xD;
CREATE DATABASE [+dbusername+];&#xD;
-- Create local user.&#xD;
CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]';&#xD;
GRANT ALL PRIVILEGES ON [+dbusername+].* TO '[+dbusername+]'@'localhost' WITH GRANT OPTION;&#xD;
-- Create remote user.&#xD;
CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]';&#xD;
GRANT ALL PRIVILEGES ON [+dbusername+].* TO '[+dbusername+]'@'%' WITH GRANT OPTION;&#xD;
-- Tell the server to reload the GRANT TABLES.&#xD;
FLUSH PRIVILEGES;&#xD;
</Template><Template Name="tmp_MySQLDBUserDBAccess" Description="Create MySQL DB user and grant access to existing DB." Comments="0" Strings="0">/*&#xD;
--Create user and grant access to database.&#xD;
//Database Username: [+dbusername+]&#xD;
//Database Password: [+dbpassword+]&#xD;
//Database Name: [+dbname+]&#xD;
//----------------------------------------------------------------------------&#xD;
*/&#xD;
&#xD;
-- Create local user.&#xD;
CREATE USER '[+dbusername+]'@'localhost' IDENTIFIED BY '[+dbpassword+]';&#xD;
GRANT ALL PRIVILEGES ON [+dbname+].* TO '[+dbusername+]'@'localhost' WITH GRANT OPTION;&#xD;
-- Create remote user.&#xD;
CREATE USER '[+dbusername+]'@'%' IDENTIFIED BY '[+dbpassword+]';&#xD;
GRANT ALL PRIVILEGES ON [+dbname+].* TO '[+dbusername+]'@'%' WITH GRANT OPTION;&#xD;
-- Tell the server to reload the GRANT TABLES.&#xD;
FLUSH PRIVILEGES;</Template><Template Name="tmp_MySQLFKReferences" Description="Display MySQL foreign key references." Comments="0" Strings="0">-- To run from the command prompt type:&#xD;
-- mysql -u rob -p &lt; display_foreign_key_references.sql &gt; current_fk_refs.txt&#xD;
&#xD;
use information_schema;&#xD;
select &#xD;
	concat(table_schema,'.',table_name,'.',column_name) as this_db_table_and_column,&#xD;
	concat(table_schema,'.',referenced_table_name,'.',referenced_column_name) as references_this_db_table_and_column,&#xD;
	constraint_name&#xD;
from key_column_usage&#xD;
where referenced_table_name is not null&#xD;
order by this_db_table_and_column;&#xD;
&#xD;
-- The order by clause may not work on all DB's. If there is an error remove it and run again.&#xD;
&#xD;
-- Same query but this one shows the cascade rules.&#xD;
use information_schema;&#xD;
select&#xD;
	concat(kcu.table_schema,'.',kcu.table_name,'.',kcu.column_name) as this_db_table_and_column,&#xD;
	concat(kcu.table_schema,'.',kcu.referenced_table_name,'.',kcu.referenced_column_name) as references_this_db_table_and_column,&#xD;
	kcu.constraint_name,&#xD;
	rc.update_rule,&#xD;
	rc.delete_rule&#xD;
from&#xD;
	key_column_usage kcu&#xD;
join referential_constraints rc on (rc.constraint_name= kcu.constraint_name)&#xD;
where kcu.referenced_table_name is not null order by this_db_table_and_column;&#xD;
&#xD;
-- The order by clause may not work on all DB's. If there is an error remove it and run again.&#xD;
&#xD;
-- On Tracy's Ubuntu MySQL server I got this error message: Unknown column 'kcu.TABLE_SCHEMA' in 'field list' because the alias in the from clause was in uppercase and lowercase in the select portion.&#xD;
&#xD;
-- This is a quick way to view all of the contraints:&#xD;
select * from information_schema.referential_constraints;&#xD;
&#xD;
-- This is a quick way to view constraints from a specific database:&#xD;
select * from information_schema.referential_constraints where constraint_schema = 'thedatabasename';&#xD;
</Template><Template Name="tmp_phpMSSQLPDOconnect" Description="MSSQL PDO Connect" Comments="0" Strings="0">&lt;?php&#xD;
/*&#xD;
*Program Author: [+Author+]&#xD;
*Program Name: [+Program+]&#xD;
*Creation Date: [DATE_TEXT] [TIME]&#xD;
*Last Modified:  &#xD;
*Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;
*Purpose: &#xD;
*Request #: &#xD;
*/&#xD;
&#xD;
$serverName = "MSSQL_ServerFQDN";&#xD;
&#xD;
try {&#xD;
	$handler = new PDO("sqlsrv:server=$serverName; Database=databasename", "username", "password");&#xD;
	$handler-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); //Setting the attributes for the handler that we want to see if exception error.&#xD;
}&#xD;
&#xD;
catch(PDOException $e) { //Return the PDO exception and naming it $e.&#xD;
//	echo 'Caught';&#xD;
//	die('Sorry database problem.'); //Production message.&#xD;
	echo $e-&gt;getMessage(); //Show specific error message. Development.&#xD;
}&#xD;
&#xD;
$query0 = $handler-&gt;query('select * from databasename');&#xD;
//ONE: Output each column as row of data.&#xD;
//	while($r = $query0-&gt;fetch()) {&#xD;
//		echo $r[1]&#xD;
//		, ' ', $r[2]&#xD;
//		, ' ', $r[3]&#xD;
//		, ' ', $r[4]&#xD;
//		, ' ', $r[5]&#xD;
//		, ' ', $r[6]&#xD;
//		, ' ', $r[7]&#xD;
//		, ' ', $r[8]&#xD;
//		, ' ', $r[9]&#xD;
//		, ' ', $r[10]&#xD;
//		, ' ', $r[11]&#xD;
//		, ' ', $r[12]&#xD;
//		, ' ', $r[13]&#xD;
//		, ' ', $r[14]&#xD;
//		, ' ', $r[15]&#xD;
//		, ' ', $r[16]&#xD;
//		, ' ', $r[17]&#xD;
//		, ' ', $r[18]&#xD;
//		, ' ', $r[19]&#xD;
//		, ' ', $r[20]&#xD;
//		, ' ', $r[21]&#xD;
//		, '\r\n';&#xD;
//	}&#xD;
&#xD;
//TWO: Prints one array.&#xD;
//	$r = $query0-&gt;fetch(PDO::FETCH_ASSOC); //Will fetch the associative array only.&#xD;
//	echo '&lt;pre&gt;', print_r($r), '&lt;/pre&gt;';&#xD;
&#xD;
//THREE: Column 1 followed by dashes.&#xD;
//	foreach($query0 as $r){&#xD;
//		echo $r[0] . "-----";&#xD;
//&#xD;
//	}&#xD;
&#xD;
//FOUR: Not sure what I was doing here.&#xD;
//	foreach($query0 as $key =&gt; $r){&#xD;
//		$out = array_values($r);&#xD;
//		echo json_encode($out);&#xD;
//}&#xD;
&#xD;
//FIVE: Proper JSON.&#xD;
	$r = $query0-&gt;fetchAll(PDO::FETCH_ASSOC);&#xD;
	//echo '&lt;pre&gt;', print_r($r), '&lt;/pre&gt;';&#xD;
	echo json_encode($r);&#xD;
?&gt; </Template><Template Name="tmp_phpMySQLconnect" Description="PHP MySQL connect" Comments="0" Strings="0">&lt;?php &#xD;
/*&#xD;
*Program Author: [+Author+]&#xD;
*Program Name: [+Program+]&#xD;
*Creation Date: [DATE_TEXT] [TIME]&#xD;
*Last Modified:  &#xD;
*Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;
*Purpose: &#xD;
*Request #: &#xD;
*/&#xD;
//---------------------------------------------------------------------------- &#xD;
//database server  define('db_server', 'database_servername');  &#xD;
//user, password, and database variables  &#xD;
&#xD;
$db_user = '[+database_username+]'; &#xD;
$db_password = '[+database_userpassword+]'; &#xD;
$db_dbname = '[+database_name+]';  &#xD;
&#xD;
//echo $q; &#xD;
$con = mysql_connect($db_server, $db_user, $db_password);  &#xD;
if (!$con)    {    &#xD;
	die('Could not connect: ' . mysql_error());    &#xD;
	}  &#xD;
	mysql_select_db($db_dbname, $con);  &#xD;
?&gt; </Template><Template Name="tmp_phpMySQLiconnect" Description="PHP MySQLi Connect" Comments="0" Strings="0">&lt;?php //Program Author: [+Author+] &#xD;
//Program Name: [+connect.php+] &#xD;
//Creation Date: [DATE_TEXT] [TIME] &#xD;
//Last Modified: &#xD;
//Purpose: //Request #: &#xD;
//---------------------------------------------------------------------------- &#xD;
//MySQLi Connect  &#xD;
$db_server = '[+database_servername+]'; &#xD;
$db_user = '[+database_username+]'; &#xD;
$db_password = '[+database_userpassword+]'; &#xD;
$db_dbname = '[+database_name+]';&#xD;
  &#xD;
$con = mysqli_connect($db_server, $db_user, $db_password, $db_dbname);&#xD;
if(!$con){&#xD;
 die("Failed to connect to the database: " . mysqli_error($con));&#xD;
 }&#xD;
if (mysqli_connect_errno()){&#xD;
 die("Error data : " . mysqli_connect_errno()." : ". mysqli_connect_error());&#xD;
 } &#xD;
//else {&#xD;
//echo "Connected successfully! &lt;br /&gt;\r\n";&#xD;
//}&#xD;
?&gt;</Template><Template Name="tmp_phpMySQLPDOconnect" Description="MySQL PDO Connect" Comments="0" Strings="0">&lt;?php &#xD;
//Program Author: [+Author+] &#xD;
//Program Name: [+connect.php+] &#xD;
//Creation Date: [DATE_TEXT] [TIME] &#xD;
//Last Modified: &#xD;
//Purpose: &#xD;
//Request #: &#xD;
//---------------------------------------------------------------------------- &#xD;
//PDO connect try {&#xD;
 	$handler = new PDO('mysql:host=[+servername+]; dbname=[+databasename+]', '[+dbusername+]', '[+dbpassword+]');&#xD;
 	$handler-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);&#xD;
 } &#xD;
&#xD;
catch(PDOException $e) { //Return the PDO exception "$e".&#xD;
  	//die('Sorry database problem.'); //Production message.&#xD;
 	echo $e-&gt;getMessage(); //Show specific error message. Development.&#xD;
 }  &#xD;
&#xD;
//No carriage return after the end. It screws up header information when included.  ?&gt;</Template><Template Name="tmp_phpMySQLPDOInsert" Description="MySQL PDO Insert" Comments="0" Strings="0">// ----------------------------------------------------------------------------&#xD;
//Program Author: [+Author+]&#xD;
//Program Name: [+Program+]&#xD;
//Creation Date: [DATE_TEXT] [TIME]&#xD;
//Last Modified:  &#xD;
//Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;
//Purpose: &#xD;
//Request #: &#xD;
// ----------------------------------------------------------------------------&#xD;
&#xD;
&lt;?php&#xD;
include('[+connect.php+]');&#xD;
&#xD;
$fname = htmlentities($_POST['firstname']);&#xD;
$mname = htmlentities($_POST['middlename']);&#xD;
$lname = htmlentities($_POST['lastname']);&#xD;
$bdate = htmlentities($_POST['birthdate']);&#xD;
&#xD;
$stmt = $handler-&gt;prepare("insert into test (firstname, middlename, lastname, birthdate) values (:firstname, :middlename, :lastname, :birthdate);");&#xD;
$stmt-&gt;bindParam(':firstname', $fname);&#xD;
$stmt-&gt;bindParam(':middlename', $mname);&#xD;
$stmt-&gt;bindParam(':lastname', $lname);&#xD;
$stmt-&gt;bindParam(':birthdate', $bdate);&#xD;
$stmt-&gt;execute();&#xD;
//header('Location: ../index.php');&#xD;
?&gt;</Template><Template Name="tmp_phpMySQLPDOOutput" Description="PHP MySQL PDO Output" Comments="0" Strings="0">&lt;?php&#xD;
//Program Author: [+Author+]&#xD;
//Program Name: [+Program+]&#xD;
//Creation Date: [DATE_TEXT] [TIME]&#xD;
//Last Modified:  &#xD;
//Copyright (c)[DATE_USER]yyyy[DATE_USER_END]&#xD;
//Purpose: &#xD;
//Request #: &#xD;
//----------------------------------------------------------------------------&#xD;
//MySQL PDO Output&#xD;
&#xD;
require('[+pdoconnect.php+]');&#xD;
//$statement = $handler-&gt;prepare("select * from thetablename order by id;"); &#xD;
&#xD;
$statement = $handler-&gt;prepare("select this from that order by this_id; "); &#xD;
$statement-&gt;execute(); //Run the prepared query. Prevents MySQL injection.&#xD;
&#xD;
$RowCount = $statement-&gt;rowCount(); //Count the number of rows returned.&#xD;
&#xD;
//Send records to HTML table in browser.&#xD;
echo "&#xD;
&lt;html&gt;&#xD;
&lt;head&gt;&#xD;
	&lt;script type='text/javascript' src='../js/jquery-1.11.3.js'&gt;&lt;/script&gt;&#xD;
	&lt;script type='text/javascript' src='js/custom.js'&gt;&lt;/script&gt; &lt;/head&gt; &lt;style&gt;&#xD;
	th {text-align: left; background-color: #d0e4fe;}&#xD;
	table, th, td {border-collapse:collapse; border: 1px solid black;}&#xD;
&#xD;
/* Tooltip container */&#xD;
.tooltip {&#xD;
    position: relative;&#xD;
    display: inline-block;&#xD;
/*     border-bottom: 1px dotted black;  If you want dots under the hoverable text */&#xD;
}&#xD;
&#xD;
/* Tooltip text */&#xD;
.tooltip .tooltiptext {&#xD;
    visibility: hidden;&#xD;
    width: 120px;&#xD;
    background-color: black;&#xD;
    color: #fff;&#xD;
    text-align: center;&#xD;
    padding: 5px 0;&#xD;
    border-radius: 6px;&#xD;
&#xD;
    /* Position the tooltip text - see examples below! */&#xD;
    position: absolute;&#xD;
    z-index: 1;&#xD;
}&#xD;
&#xD;
/* Show the tooltip text when you mouse over the tooltip container */ .tooltip:hover .tooltiptext {&#xD;
    visibility: visible;&#xD;
}&#xD;
&lt;/style&gt;&#xD;
&#xD;
&lt;body&gt;&#xD;
&lt;table id='us_states' class='tablesorter'&gt; &lt;thead&gt; &lt;tr&gt;&#xD;
	&lt;th&gt;&lt;/th&gt;&#xD;
	&lt;th&gt;State&lt;/th&gt;&#xD;
	&lt;th&gt;Capital&lt;/th&gt;&#xD;
	&lt;th&gt;Date Formed&lt;/th&gt;&#xD;
	&lt;th&gt;Size&lt;/th&gt;&#xD;
	&lt;th&gt;Edit&lt;/th&gt;&#xD;
&lt;tr&gt;&#xD;
&lt;/thead&gt;&#xD;
&lt;tbody&gt;&#xD;
&lt;tr&gt;&#xD;
";&#xD;
&#xD;
			while($r = $statement-&gt;fetch(PDO::FETCH_OBJ)){&#xD;
			$id_column = $r-&gt;id;&#xD;
			$state_column = $r-&gt;state;&#xD;
			$capital_column = $r-&gt;capital;&#xD;
			$date_formed_column = $r-&gt;date_formed;&#xD;
			$statedata_column = $r-&gt;data;&#xD;
			$sq_miles_column = $r-&gt;sq_miles;&#xD;
			echo "&lt;tr&gt;&lt;td&gt;" . $id_column . "&lt;/td&gt;&#xD;
			&lt;td&gt;" . $state_column . "&lt;/td&gt;&#xD;
			&lt;td&gt;" . $capital_column . "&lt;/td&gt;&#xD;
			&lt;td class='tooltip'&gt;&lt;span class='tooltiptext'&gt;" . $statedata_column . "&lt;/span&gt;" . $date_formed_column . "&lt;/td&gt;&#xD;
			&lt;td&gt;" . number_format($sq_miles_column) . " sqm.&lt;/td&gt;&#xD;
			&lt;td&gt;&lt;input type='radio' name='edit' id='" . $id_column . "'&gt;&lt;/td&gt;&#xD;
			&lt;/tr&gt;";&#xD;
			}&#xD;
&#xD;
echo "&lt;/tbody&gt;&lt;/table&gt;&#xD;
&lt;!-- &lt;div class='tooltip'&gt;Hover over me&#xD;
  &lt;span class='tooltiptext'&gt;Tooltip text&lt;/span&gt; &lt;/div&gt; --&gt; "; &#xD;
?&gt;</Template><Template Name="tmp_pstools" Description="PSTools" Comments="0" Strings="0">pslist \\[+ComputerName+] -m [+AppNameProcessName+] &#xD;
pslist \\[+ComputerName+] -m [+AppNameProcessName+] | sort&#xD;
&#xD;
pskill -t \\[+ComputerName+] [+AppNameProcessName+]&#xD;
^</Template><Template Name="tmp_rhts" Description="Timestamp" Comments="0" Strings="0">[DATE_TEXT] [TIME]&#xD;
</Template><Template Name="tmp_Shell" Description="Common AIX/Linux shell stuff" Comments="0" Strings="0">#WHILE loop&#xD;
i=1&#xD;
while [[ $i -le 10 ]]&#xD;
do&#xD;
  echo "Searching Node $i: "&#xD;
  ssh rholland@pcma"$i"p.bdcm.bannerhealth.com "ls -al /cerner/w_custom/&#xD;
cust_wh/code/$1/$2"&#xD;
  # echo "$i"&#xD;
   let i=i+1&#xD;
done&#xD;
&#xD;
#FOR Loop&#xD;
for file in *.txt&#xD;
do &#xD;
	cat $file &gt;&gt; OneBigFile.txt&#xD;
done&#xD;
&#xD;
#AIX Array:&#xD;
set -A profileup 2 3 4 5 6 7 8 9 10&#xD;
for i in ${profileup[@]}&#xD;
do&#xD;
echo "Updating .profile on pcma${i}: "&#xD;
scp ~/.profile rholland@pcma"$i"p.bdcm.bannerhealth.com:~/&#xD;
#echo "$i"&#xD;
done&#xD;
&#xD;
LINUX Array:&#xD;
rho_hosts=(2 3 4 5 6 7 8 9 10 11 12 19 20 22) #Skipping Node 1 in the array&#xD;
for i in ${rho_hosts[@]}&#xD;
do&#xD;
  echo "Updating .bashrc on samtazapp${i}: "&#xD;
  scp ~/.bashrc rholland@samtazapp"$i":~/&#xD;
#  #echo "$i"&#xD;
done&#xD;
&#xD;
Make Dummy Files:&#xD;
dummyfiles(){&#xD;
if [ $# -eq 0 ]&#xD;
then&#xD;
echo "dummyfiles 30"&#xD;
else&#xD;
#printf '%s ' {1..$1}.txt |xargs touch&#xD;
for ((i=1; i&lt;=$1; i++)); do : &gt;&gt; dummyfile_"$i".txt; done&#xD;
fi&#xD;
} functionname(){&#xD;
if [ $# -eq 0 ]&#xD;
then&#xD;
echo "Message"&#xD;
else&#xD;
case $1 in&#xD;
	argument1)&#xD;
		echo "Doing something"&#xD;
		Do Something&#xD;
	;;&#xD;
	argument2)&#xD;
		echo "Doing something"&#xD;
		Do Something&#xD;
	;;&#xD;
	argument3)&#xD;
		echo "Doing something"&#xD;
		Do Something&#xD;
	;;&#xD;
	argument4)&#xD;
		echo "Doing something"&#xD;
		Do Something&#xD;
	;;&#xD;
	*)&#xD;
		message00="The message"&#xD;
		echo $message00&#xD;
	;;&#xD;
esac&#xD;
fi&#xD;
}&#xD;
</Template><Template Name="tmp_Shutdown" Description="Shutdown computer" Comments="0" Strings="0">[+TargetComputer+] [+incident+]&#xD;
Old School:&#xD;
shutdown -m \\[+TargetComputer+] -r -t 0 -f &amp; ping [+TargetComputer+] -t&#xD;
runas /noprofile /user:BHS\a-rlholland "shutdown -m \\[+TargetComputer+] -r -t 0 -f" &amp; ping [+TargetComputer+] -t&#xD;
&#xD;
New School:&#xD;
shutdown /m \\[+TargetComputer+] /c "[+incident+]" /d p:4:1 /r /t 0 /f &amp; ping [+TargetComputer+] -t&#xD;
runas /noprofile /user:BHS\a-rlholland "shutdown /m \\[+TargetComputer+] /c "[+incident+]" /d p:4:1 /r /t 0 /f" &amp; ping [+TargetComputer+] -t&#xD;
&#xD;
From Administrator Command Prompt:&#xD;
net use A: \\[+TargetComputer+]\c$&#xD;
^</Template><Template Name="tmpTest" Description="" Comments="0" Strings="0">;Program Author: [+Author+]&#xD;
;Program Name: 1bh_mpage_[+NameSpace+].prg&#xD;
;Uppercase Bedrock View Identifier: [+UppercaseNameSpace+]&#xD;
;Creation Date: [DATE_TEXT] [TIME]&#xD;
;Last Modified:&#xD;
;Copyright: (c) [DATE_TEXT]&#xD;
;Purpose:&#xD;
;Request #:&#xD;
;Namespace: banner.[+NameSpace+]&#xD;
;----------------------------------------------------------------------------&#xD;
;free record request go&#xD;
;/*Add any fields and data type in your "record request" that your CCL will need to run.*/&#xD;
;&#xD;
;record request&#xD;
;( 	;1 encntr_id = i4&#xD;
;	1 per_id = i4&#xD;
;	1 enc_id = i4&#xD;
;	;1 cvalue = i4&#xD;
;) go&#xD;
;&#xD;
;/*Setting the request equal to the Encounter ID that will be sent from PowerChart.&#xD;
;This information is manually entered here when testing. */&#xD;
;&#xD;
;	set request-&gt;per_id = 123456789.00 go&#xD;
;	set request-&gt;enc_id = 987654321.00 go&#xD;
;&#xD;
;/*The CCL that you want to execute to produce the data. */&#xD;
;&#xD;
;	execute 1bh_mpage_[+NameSpace+] "MINE", request-&gt;per_id, request-&gt;enc_id go&#xD;
&#xD;
;----------------------------------------------------------------------------&#xD;
&#xD;
drop program 1bh_mpage_[+NameSpace+]:dba go&#xD;
create program 1bh_mpage_[+NameSpace+]:dba&#xD;
&#xD;
prompt&#xD;
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.&#xD;
	, "per_id" = 0&#xD;
	, "enc_id" = 0&#xD;
&#xD;
with OUTDEV, per_id, enc_id&#xD;
&#xD;
%i cust_script:1samt_az_common.inc&#xD;
;%i cust_script:1samt_az_common_cds.inc&#xD;
;PROGRAM HEADER ABOVE&#xD;
&#xD;
/*Begin Record Structure*/&#xD;
;Record structure elements can be lowercase here but must be uppercase in your .js.&#xD;
free record [+NameSpace+]_structure&#xD;
record [+NameSpace+]_structure (&#xD;
1 [+NameSpace+]_structure_cnt=i4&#xD;
1 [+NameSpace+]_structure_array[*]&#xD;
/*Create record structure aliases and assign the proper data type that will match the columns in your query*/&#xD;
	2 returned_person_id = f8 ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_name_full_formatted = vc ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_encounter_id = f8 ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_encounter_type = vc ; Assiging a name and data type to a value returned from the select statement.&#xD;
	2 returned_mrn = vc ;&#xD;
	2 returned_fin = vc ;&#xD;
&#xD;
&#xD;
%i cclsource:status_block.inc&#xD;
)&#xD;
/*End Record Structure*/&#xD;
&#xD;
set [+NameSpace+]_structure-&gt;status_data.status ="F"&#xD;
set debug_ind = 1&#xD;
&#xD;
declare fin_alias = vc&#xD;
declare mrn_alias = vc&#xD;
&#xD;
select&#xD;
	ea.alias&#xD;
&#xD;
from&#xD;
	encntr_alias ea&#xD;
&#xD;
where ea.encntr_id = $enc_id;72958204.00;$enc_id;&#xD;
and ea.encntr_alias_type_cd in (1077.00, 1079.00);FIN Number and MRN Number&#xD;
detail&#xD;
case (ea.encntr_alias_type_cd)&#xD;
	of 1077.00 : fin_alias = trim(ea.alias)&#xD;
	of 1079.00 : mrn_alias = trim(ea.alias)&#xD;
endcase&#xD;
&#xD;
/*Select Query Begin*/&#xD;
&#xD;
select ;into "NL"&#xD;
	p.person_id&#xD;
	,p.name_full_formatted&#xD;
	,e.encntr_id&#xD;
	,Encounter_Type = uar_get_code_display(e.encntr_type_cd)&#xD;
&#xD;
from&#xD;
	person p&#xD;
	, encounter e&#xD;
&#xD;
plan p where p.person_id = $per_id ;37298420.00&#xD;
join e where e.person_id = p.person_id and e.encntr_id = $enc_id ;54975811.00&#xD;
&#xD;
/*Select Query End*/&#xD;
&#xD;
head report&#xD;
x=1&#xD;
rec_cnt = 0 ; Setting record count to zero.&#xD;
&#xD;
/*The "Head" section is most important part of what you are pulling from your query. Example:&#xD;
You could have "head p.person_id" and under that you need to return data from the query into it. */&#xD;
&#xD;
head p.person_id ;alias.fieldname | Opening the header. Should be an indexed column.&#xD;
rec_cnt=rec_cnt+1&#xD;
&#xD;
   if (size([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array,5)&lt;rec_cnt ) ; Checking the size of the [+NameSpace+]_structure_array array&#xD;
      stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt+10) ; this is increasing the size of the [+NameSpace+]_structure_array array by 10 if needed.&#xD;
   endif&#xD;
&#xD;
/*Returning column data from the query into the record structure aliases*/&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_person_id = cnvtreal(p.person_id)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_name_full_formatted = trim(p.name_full_formatted)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_id = cnvtreal(e.encntr_id)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_encounter_type = trim(Encounter_Type)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_mrn = mrn_alias&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array[rec_cnt].returned_fin = fin_alias&#xD;
&#xD;
foot p.person_id ;alias.fieldname | Closing the header. Same name as head.&#xD;
x=1&#xD;
foot report&#xD;
x=1&#xD;
stat= alterlist([+NameSpace+]_structure-&gt;[+NameSpace+]_structure_array, rec_cnt)&#xD;
[+NameSpace+]_structure-&gt;[+NameSpace+]_structure_cnt = rec_cnt&#xD;
with nocounter&#xD;
&#xD;
set [+NameSpace+]_structure-&gt;status_data.status = "S"   ;info_point (Sets status to S for Success)&#xD;
&#xD;
#exit_script   ;  ID for end of PRG&#xD;
&#xD;
call ajax_reply([+NameSpace+]_structure) 	; info_point (ajax_reply is a function that changes the&#xD;
							;record structure to a string.&#xD;
&#xD;
call echo(cnvtrectojson([+NameSpace+]_structure)) 	; info_point (cnvtrectojson is a function that changes the&#xD;
							;record structure to a JSON string and returns the string to the JS).&#xD;
&#xD;
if (debug_ind)&#xD;
	call echorecord([+NameSpace+]_structure)  ;info_point (displays record structure in listing - troubleshooting)&#xD;
else&#xD;
	free record [+NameSpace+]_structure  ;info_point (clears record structure)&#xD;
endif&#xD;
&#xD;
CALL log_end_script("1bh_mpage_[+NameSpace+]", debug_ind) ; info_point (For log files)&#xD;
&#xD;
end&#xD;
go&#xD;
&#xD;
/*JS NAMESPACE BELOW*/&#xD;
//BEGIN [+NameSpace+]&#xD;
/**&#xD;
* Project:&#xD;
* Version: 1.0&#xD;
* Released:	Tuesday, October 25, 2016 18:21:03&#xD;
* Updated:&#xD;
* Purpose:&#xD;
* @author: [+Author+]&#xD;
* Request#:&#xD;
*/&#xD;
&#xD;
MPage.namespace("banner");&#xD;
banner.[+NameSpace+] = function(){};&#xD;
banner.[+NameSpace+].prototype = new MPage.Component();&#xD;
banner.[+NameSpace+].prototype.constructor = MPage.Component();&#xD;
banner.[+NameSpace+].prototype.base = MPage.Component.prototype;&#xD;
banner.[+NameSpace+].prototype.name = "banner.[+NameSpace+]";&#xD;
banner.[+NameSpace+].prototype.cclProgram = "1bh_mpage_[+NameSpace+]";&#xD;
banner.[+NameSpace+].prototype.cclParams = [];&#xD;
banner.[+NameSpace+].prototype.cclDataType = "JSON";&#xD;
&#xD;
banner.[+NameSpace+].prototype.init = function(options)&#xD;
{&#xD;
//	// Check cookie for param update&#xD;
//	if(readCookie("bldgltframe") == null){&#xD;
//		createCookie("bldgltframe","72,H",1);&#xD;
//	}&#xD;
&#xD;
	var params = [];&#xD;
	params.push("mine");&#xD;
	params.push(this.getProperty("personId"));&#xD;
	params.push(this.getProperty("encounterId"));&#xD;
//	params.push(readCookie("bldgltframe"));&#xD;
	params.push(300);&#xD;
	this.cclParams = params;&#xD;
};&#xD;
&#xD;
banner.[+NameSpace+].prototype.render = function()&#xD;
{&#xD;
	var tempStr=[];&#xD;
	var element = this.getTarget();&#xD;
	var jsonObj = this.data;&#xD;
    var recordData = jsonObj.RECORD_DATA;&#xD;
	var compid = this.getComponentUid();&#xD;
	MPage.getCustomComp(compid).setProperty("headerSubTitle","");&#xD;
&#xD;
//alert("Hello World");&#xD;
	tempStr.push("&lt;div&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;",this.name,"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;");&#xD;
	element.innerHTML = tempStr.join("");&#xD;
&#xD;
};&#xD;
&#xD;
// END [+NameSpace+]&#xD;
&#xD;
//BEGIN 1bh_mpage_home1.js&#xD;
&#xD;
$("#mainTable_Testing tbody").append("&lt;tr style='height:30px'&gt;&lt;td&gt;&lt;a href='javascript:[+NameSpace+]();'&gt;[+NameSpace+]&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;");&#xD;
&#xD;
//END 1bh_mpage_home1.js&#xD;
&#xD;
//Begin testlink.js&#xD;
&#xD;
function [+NameSpace+](){&#xD;
	CCLLINK("mp_unified_driver","^^MINE^^,value($PAT_PERSONID$),value($VIS_ENCNTRID$),value($USR_PERSONID$),value($USR_PositionCd$),value($PAT_PPRCode$) ,^^$APP_AppName$^^,^^^^,^^VB_[+UppercaseNameSpace+]^^",1); //Bedrock view identifier&#xD;
}&#xD;
&#xD;
//End testlink.js&#xD;
^</Template></Templates>
